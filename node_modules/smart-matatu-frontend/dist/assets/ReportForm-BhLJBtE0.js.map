{"version":3,"file":"ReportForm-BhLJBtE0.js","sources":["../../src/utils/constants.ts","../../src/screens/ReportForm.tsx"],"sourcesContent":["// API Configuration\r\nexport const API_CONFIG = {\r\n  BASE_URL: process.env.REACT_APP_API_URL || 'http://localhost:3001/api',\r\n  TIMEOUT: 10000,\r\n  RETRY_ATTEMPTS: 3,\r\n  RETRY_DELAY: 1000,\r\n}\r\n\r\n// Map Configuration\r\nexport const MAP_CONFIG = {\r\n  DEFAULT_CENTER: [-1.2921, 36.8219] as [number, number], // Nairobi coordinates\r\n  DEFAULT_ZOOM: 11,\r\n  MIN_ZOOM: 8,\r\n  MAX_ZOOM: 18,\r\n  TILE_URL: 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\r\n  ATTRIBUTION: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\r\n}\r\n\r\n// Route Configuration\r\nexport const ROUTES = {\r\n  HOME: '/',\r\n  MAP: '/map',\r\n  REPORT: '/report',\r\n  LOGIN: '/login',\r\n  SIGNUP: '/signup',\r\n  ADMIN: '/admin',\r\n  PROFILE: '/profile',\r\n  SETTINGS: '/settings',\r\n} as const\r\n\r\n// User Roles\r\nexport const USER_ROLES = {\r\n  USER: 'user',\r\n  MODERATOR: 'moderator',\r\n  ADMIN: 'admin',\r\n} as const\r\n\r\n// Crowding Levels\r\nexport const CROWDING_LEVELS = [\r\n  { label: 'Empty', value: 1 },\r\n  { label: 'Light', value: 2 },\r\n  { label: 'Moderate', value: 3 },\r\n  { label: 'Busy', value: 4 },\r\n  { label: 'Packed', value: 5 },\r\n]\r\n\r\nexport const INCIDENT_TYPES = [\r\n  'delay', 'overcrowding', 'breakdown', 'accident', 'harassment', 'other'\r\n]\r\n\r\nexport const TIME_BUCKETS = [\r\n  '06:00', '07:00', '08:00', '09:00', '10:00', '12:00', '15:00', '17:00', '19:00', '21:00'\r\n]\r\n\r\nexport const MATATU_SACCOS = [\r\n  'Super metro','Latema','Starbus','Embassava','Forward Travellers','ROG','Manchester','Zuri','MSL','Metro Trans','Lopha','Enabled','NNK','Double M','Risen','NMOA Compliant','City Shuttle','Citihoppa','Tram','Expresso','KMO','Buruburu'\r\n]\r\n\r\nexport function stripSaccoFromRouteName(name: string): string {\r\n  if (!name) return name\r\n  const saccoRegex = new RegExp(`\\\\b(${MATATU_SACCOS.map(s => s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, r => r)).join('|')})\\\\b`, 'i')\r\n  return name.replace(saccoRegex, '').replace(/\\s{2,}/g, ' ').trim()\r\n}\r\n\r\n// Score Ranges\r\nexport const SCORE_RANGES = {\r\n  MIN: 1,\r\n  MAX: 5,\r\n  EXCELLENT: 4.5,\r\n  GOOD: 3.5,\r\n  AVERAGE: 2.5,\r\n  POOR: 1.5,\r\n} as const\r\n\r\n// Pagination\r\nexport const PAGINATION = {\r\n  DEFAULT_PAGE: 1,\r\n  DEFAULT_LIMIT: 10,\r\n  MAX_LIMIT: 100,\r\n} as const\r\n\r\n// File Upload\r\nexport const FILE_UPLOAD = {\r\n  MAX_SIZE: 5 * 1024 * 1024, // 5MB\r\n  ALLOWED_TYPES: ['image/jpeg', 'image/png', 'image/webp'],\r\n  MAX_FILES: 3,\r\n} as const\r\n\r\n// Validation\r\nexport const VALIDATION = {\r\n  PASSWORD_MIN_LENGTH: 8,\r\n  PASSWORD_MAX_LENGTH: 128,\r\n  DISPLAY_NAME_MIN_LENGTH: 2,\r\n  DISPLAY_NAME_MAX_LENGTH: 50,\r\n  EMAIL_MAX_LENGTH: 254,\r\n  DESCRIPTION_MAX_LENGTH: 500,\r\n} as const\r\n\r\n// Local Storage Keys\r\nexport const STORAGE_KEYS = {\r\n  AUTH_TOKEN: 'authToken',\r\n  USER: 'user',\r\n  SETTINGS: 'appSettings',\r\n  LANGUAGE: 'language',\r\n  THEME: 'theme',\r\n  MAP_CENTER: 'mapCenter',\r\n  MAP_ZOOM: 'mapZoom',\r\n} as const\r\n\r\n// Notification Types\r\nexport const NOTIFICATION_TYPES = {\r\n  INFO: 'info',\r\n  SUCCESS: 'success',\r\n  WARNING: 'warning',\r\n  ERROR: 'error',\r\n} as const\r\n\r\n// Theme Options\r\nexport const THEMES = {\r\n  LIGHT: 'light',\r\n  DARK: 'dark',\r\n  AUTO: 'auto',\r\n} as const\r\n\r\n// Language Options\r\nexport const LANGUAGES = {\r\n  EN: 'en',\r\n  SW: 'sw',\r\n} as const\r\n\r\n// Map Styles\r\nexport const MAP_STYLES = {\r\n  DEFAULT: 'default',\r\n  SATELLITE: 'satellite',\r\n  TERRAIN: 'terrain',\r\n} as const\r\n\r\n// API Endpoints\r\nexport const API_ENDPOINTS = {\r\n  HEALTH: '/health',\r\n  AUTH: {\r\n    LOGIN: '/auth/login',\r\n    SIGNUP: '/auth/signup',\r\n    LOGOUT: '/auth/logout',\r\n    REFRESH: '/auth/refresh',\r\n  },\r\n  ROUTES: {\r\n    LIST: '/routes',\r\n    DETAIL: '/routes/:id',\r\n    CREATE: '/routes',\r\n    UPDATE: '/routes/:id',\r\n    DELETE: '/routes/:id',\r\n    SEARCH: '/routes/search',\r\n  },\r\n  REPORTS: {\r\n    LIST: '/reports',\r\n    DETAIL: '/reports/:id',\r\n    CREATE: '/reports',\r\n    UPDATE: '/reports/:id',\r\n    DELETE: '/reports/:id',\r\n    BY_ROUTE: '/reports/route/:routeId',\r\n  },\r\n  SCORES: {\r\n    LIST: '/scores',\r\n    BY_ROUTE: '/scores/route/:routeId',\r\n  },\r\n  USERS: {\r\n    LIST: '/users',\r\n    DETAIL: '/users/:id',\r\n    UPDATE: '/users/:id',\r\n    DELETE: '/users/:id',\r\n  },\r\n  ANALYTICS: {\r\n    SUMMARY: '/analytics/summary',\r\n    ROUTES: '/analytics/routes',\r\n    REPORTS: '/analytics/reports',\r\n    USERS: '/analytics/users',\r\n  },\r\n  UPLOAD: '/upload',\r\n  GEOCODE: '/geocode',\r\n} as const\r\n\r\n// Error Messages\r\nexport const ERROR_MESSAGES = {\r\n  NETWORK_ERROR: 'Network error - please check your connection',\r\n  SERVER_ERROR: 'Server error - please try again later',\r\n  UNAUTHORIZED: 'You are not authorized to perform this action',\r\n  FORBIDDEN: 'Access denied',\r\n  NOT_FOUND: 'The requested resource was not found',\r\n  VALIDATION_ERROR: 'Please check your input and try again',\r\n  UNKNOWN_ERROR: 'An unexpected error occurred',\r\n} as const\r\n\r\n// Success Messages\r\nexport const SUCCESS_MESSAGES = {\r\n  LOGIN_SUCCESS: 'Login successful',\r\n  SIGNUP_SUCCESS: 'Account created successfully',\r\n  REPORT_SUBMITTED: 'Report submitted successfully',\r\n  ROUTE_CREATED: 'Route created successfully',\r\n  ROUTE_UPDATED: 'Route updated successfully',\r\n  ROUTE_DELETED: 'Route deleted successfully',\r\n  SETTINGS_SAVED: 'Settings saved successfully',\r\n} as const\r\n\r\n// Loading Messages\r\nexport const LOADING_MESSAGES = {\r\n  LOADING_ROUTES: 'Loading routes...',\r\n  LOADING_REPORTS: 'Loading reports...',\r\n  LOADING_MAP: 'Loading map...',\r\n  SUBMITTING_REPORT: 'Submitting report...',\r\n  SAVING_SETTINGS: 'Saving settings...',\r\n  LOGGING_IN: 'Logging in...',\r\n  CREATING_ACCOUNT: 'Creating account...',\r\n} as const\r\n\r\n// Breakpoints\r\nexport const BREAKPOINTS = {\r\n  SM: 640,\r\n  MD: 768,\r\n  LG: 1024,\r\n  XL: 1280,\r\n  '2XL': 1536,\r\n} as const\r\n\r\n// Animation Durations\r\nexport const ANIMATION_DURATION = {\r\n  FAST: 150,\r\n  NORMAL: 300,\r\n  SLOW: 500,\r\n} as const\r\n\r\n// Debounce Delays\r\nexport const DEBOUNCE_DELAY = {\r\n  SEARCH: 300,\r\n  INPUT: 500,\r\n  API_CALL: 1000,\r\n} as const\r\n\r\n// Retry Configuration\r\nexport const RETRY_CONFIG = {\r\n  MAX_ATTEMPTS: 3,\r\n  INITIAL_DELAY: 1000,\r\n  MAX_DELAY: 10000,\r\n  BACKOFF_FACTOR: 2,\r\n} as const\r\n\r\n// Feature Flags\r\nexport const FEATURE_FLAGS = {\r\n  ENABLE_AI_PREDICTIONS: process.env.REACT_APP_ENABLE_AI === 'true',\r\n  ENABLE_PUSH_NOTIFICATIONS: process.env.REACT_APP_ENABLE_PUSH === 'true',\r\n  ENABLE_OFFLINE_MODE: process.env.REACT_APP_ENABLE_OFFLINE === 'true',\r\n  ENABLE_ANALYTICS: process.env.REACT_APP_ENABLE_ANALYTICS === 'true',\r\n} as const\r\n\r\n// Environment\r\nexport const ENVIRONMENT = {\r\n  DEVELOPMENT: 'development',\r\n  STAGING: 'staging',\r\n  PRODUCTION: 'production',\r\n} as const\r\n\r\n// Current Environment\r\nexport const CURRENT_ENV = process.env.NODE_ENV || ENVIRONMENT.DEVELOPMENT\r\n\r\n// Is Development\r\nexport const IS_DEVELOPMENT = CURRENT_ENV === ENVIRONMENT.DEVELOPMENT\r\n\r\n// Is Production\r\nexport const IS_PRODUCTION = CURRENT_ENV === ENVIRONMENT.PRODUCTION\r\n","import { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Send, Loader2 } from 'lucide-react'\r\nimport apiService from '../services/api'\r\nimport { Route, CreateReportData } from '../types'\r\nimport LoadingSpinner from '../components/LoadingSpinner'\r\nimport { MATATU_SACCOS, stripSaccoFromRouteName } from '../utils/constants'\r\n\r\nexport default function ReportForm() {\r\n  const navigate = useNavigate()\r\n  const [routes, setRoutes] = useState<Route[]>([])\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [success, setSuccess] = useState(false)\r\n  const [formData, setFormData] = useState<CreateReportData>({\r\n    routeId: '',\r\n    reportType: 'delay',\r\n    severity: 'medium',\r\n    isAnonymous: false,\r\n    description: '',\r\n    location: {\r\n      type: 'Point',\r\n      coordinates: [36.8219, -1.2921]\r\n    }\r\n  })\r\n\r\n  const [selectedSacco, setSelectedSacco] = useState<string>('')\r\n  const [direction, setDirection] = useState<'from_cbd' | 'to_cbd' | 'along_route'>('along_route')\r\n\r\n  useEffect(() => {\r\n    const loadRoutes = async () => {\r\n      try {\r\n        const res = await apiService.getRoutes({ page: 1, limit: 200, sort: 'name', order: 'asc' })\r\n        if (res.success && res.data) {\r\n          setRoutes(res.data.routes as any)\r\n        } else {\r\n          setRoutes([])\r\n        }\r\n      } catch (e) {\r\n        console.error('Failed to load routes', e)\r\n        setRoutes([])\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n    loadRoutes()\r\n  }, [])\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setIsSubmitting(true)\r\n    setError(null)\r\n\r\n    try {\r\n      const payload = {\r\n        ...formData,\r\n        sacco: selectedSacco || undefined,\r\n        direction\r\n      }\r\n      const res = await apiService.createReport(payload as any)\r\n      if (res.success) {\r\n        setSuccess(true)\r\n        setTimeout(() => navigate('/'), 1200)\r\n      } else {\r\n        setError('Failed to submit report')\r\n      }\r\n    } catch (e: any) {\r\n      setError(e.message || 'Failed to submit report')\r\n    } finally {\r\n      setIsSubmitting(false)\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <LoadingSpinner />\r\n          <p className=\"text-gray-600 mt-4\">Loading report form...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-8\">\r\n      <div className=\"max-w-2xl mx-auto bg-white shadow rounded-lg p-6\">\r\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Submit a Report</h1>\r\n\r\n        {error && (\r\n          <div className=\"mb-4 p-3 bg-red-50 text-red-700 rounded border border-red-200\">{error}</div>\r\n        )}\r\n        {success && (\r\n          <div className=\"mb-4 p-3 bg-green-50 text-green-700 rounded border border-green-200\">Report submitted successfully</div>\r\n        )}\r\n\r\n        <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Route</label>\r\n            <select\r\n              value={formData.routeId}\r\n              onChange={(e) => setFormData((p) => ({ ...p, routeId: e.target.value }))}\r\n              className=\"w-full border rounded px-3 py-2\"\r\n              required\r\n            >\r\n              <option value=\"\">Select a route</option>\r\n              {routes.map((r: any) => (\r\n                <option key={r._id} value={r._id}>\r\n                  {stripSaccoFromRouteName(r.name)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Matatu SACCO (optional)</label>\r\n            <select\r\n              value={selectedSacco}\r\n              onChange={(e) => setSelectedSacco(e.target.value)}\r\n              className=\"w-full border rounded px-3 py-2\"\r\n            >\r\n              <option value=\"\">Select SACCO</option>\r\n              {MATATU_SACCOS.map(s => (\r\n                <option key={s} value={s}>{s}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Direction</label>\r\n            <div className=\"grid grid-cols-3 gap-3\">\r\n              <label className=\"flex items-center space-x-2 border rounded px-3 py-2 cursor-pointer\">\r\n                <input type=\"radio\" name=\"direction\" value=\"from_cbd\" checked={direction==='from_cbd'} onChange={() => setDirection('from_cbd')} />\r\n                <span>From CBD</span>\r\n              </label>\r\n              <label className=\"flex items-center space-x-2 border rounded px-3 py-2 cursor-pointer\">\r\n                <input type=\"radio\" name=\"direction\" value=\"to_cbd\" checked={direction==='to_cbd'} onChange={() => setDirection('to_cbd')} />\r\n                <span>To CBD</span>\r\n              </label>\r\n              <label className=\"flex items-center space-x-2 border rounded px-3 py-2 cursor-pointer\">\r\n                <input type=\"radio\" name=\"direction\" value=\"along_route\" checked={direction==='along_route'} onChange={() => setDirection('along_route')} />\r\n                <span>Along this route</span>\r\n              </label>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Report Type</label>\r\n              <select\r\n                value={formData.reportType}\r\n                onChange={(e) => setFormData((p) => ({ ...p, reportType: e.target.value }))}\r\n                className=\"w-full border rounded px-3 py-2\"\r\n              >\r\n                <option value=\"delay\">Delay</option>\r\n                <option value=\"overcrowding\">Overcrowding</option>\r\n                <option value=\"breakdown\">Breakdown</option>\r\n                <option value=\"accident\">Accident</option>\r\n                <option value=\"harassment\">Harassment</option>\r\n                <option value=\"other\">Other</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 mb-1\">Severity</label>\r\n              <select\r\n                value={formData.severity}\r\n                onChange={(e) => setFormData((p) => ({ ...p, severity: e.target.value as any }))}\r\n                className=\"w-full border rounded px-3 py-2\"\r\n              >\r\n                <option value=\"low\">Low</option>\r\n                <option value=\"medium\">Medium</option>\r\n                <option value=\"high\">High</option>\r\n                <option value=\"critical\">Critical</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"flex items-center space-x-2\">\r\n            <input\r\n              id=\"anonymous\"\r\n              type=\"checkbox\"\r\n              checked={formData.isAnonymous}\r\n              onChange={(e) => setFormData((p) => ({ ...p, isAnonymous: e.target.checked }))}\r\n            />\r\n            <label htmlFor=\"anonymous\" className=\"text-sm text-gray-700\">Submit anonymously</label>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\r\n            <textarea\r\n              value={formData.description}\r\n              onChange={(e) => setFormData((p) => ({ ...p, description: e.target.value }))}\r\n              className=\"w-full border rounded px-3 py-2\"\r\n              rows={4}\r\n              placeholder=\"Describe the issue...\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"inline-flex items-center bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" /> : <Send className=\"w-4 h-4 mr-2\" />} \r\n            Submit Report\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["MATATU_SACCOS","stripSaccoFromRouteName","name","saccoRegex","s","r","ReportForm","navigate","useNavigate","routes","setRoutes","useState","isLoading","setIsLoading","isSubmitting","setIsSubmitting","error","setError","success","setSuccess","formData","setFormData","selectedSacco","setSelectedSacco","direction","setDirection","useEffect","res","apiService","e","handleSubmit","payload","jsxs","jsx","LoadingSpinner","p","Loader2","Send"],"mappings":"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"}