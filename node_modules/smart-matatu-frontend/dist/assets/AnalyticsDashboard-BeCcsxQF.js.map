{"version":3,"file":"AnalyticsDashboard-BeCcsxQF.js","sources":["../../src/screens/AnalyticsDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useApp } from '../contexts/AppContext'\r\nimport { useTranslation } from '../hooks/useTranslation'\r\nimport apiService from '../services/api'\r\n\r\ninterface AnalyticsData {\r\n  eventCounts: { _id: string; count: number }[]\r\n  userEngagement: {\r\n    avgEvents: number\r\n    totalUsers: number\r\n  }\r\n  performanceMetrics: {\r\n    metricType: string\r\n    value: number\r\n    endpoint?: string\r\n    timestamp: string\r\n    metadata?: any\r\n  }[]\r\n}\r\n\r\nconst AnalyticsDashboard: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { state } = useApp()\r\n  const [analyticsData, setAnalyticsData] = useState<AnalyticsData | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [period, setPeriod] = useState('7d')\r\n  const [error, setError] = useState<string | null>(null)\r\n\r\n  useEffect(() => {\r\n    loadAnalytics()\r\n  }, [period])\r\n\r\n  const loadAnalytics = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      \r\n      const response = await apiService.getAnalyticsDashboard(period)\r\n      setAnalyticsData(response.data || null)\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to load analytics data')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const trackPageView = async () => {\r\n    if (state.user) {\r\n      try {\r\n        await apiService.trackEvent('page_view', {\r\n          page: 'analytics_dashboard',\r\n          timestamp: new Date().toISOString()\r\n        }, undefined, state.user._id)\r\n      } catch (err) {\r\n        console.error('Failed to track page view:', err)\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    trackPageView()\r\n  }, [])\r\n\r\n  const formatMetricValue = (metricType: string, value: number) => {\r\n    switch (metricType) {\r\n      case 'api_response_time':\r\n        return `${value.toFixed(2)}ms`\r\n      case 'page_load_time':\r\n        return `${value.toFixed(2)}s`\r\n      case 'error_rate':\r\n        return `${(value * 100).toFixed(2)}%`\r\n      case 'user_engagement':\r\n        return value.toFixed(1)\r\n      default:\r\n        return value.toString()\r\n    }\r\n  }\r\n\r\n  const getMetricColor = (metricType: string, value: number) => {\r\n    switch (metricType) {\r\n      case 'api_response_time':\r\n        return value < 200 ? 'text-green-600' : value < 500 ? 'text-yellow-600' : 'text-red-600'\r\n      case 'page_load_time':\r\n        return value < 2 ? 'text-green-600' : value < 5 ? 'text-yellow-600' : 'text-red-600'\r\n      case 'error_rate':\r\n        return value < 0.01 ? 'text-green-600' : value < 0.05 ? 'text-yellow-600' : 'text-red-600'\r\n      case 'user_engagement':\r\n        return value > 5 ? 'text-green-600' : value > 2 ? 'text-yellow-600' : 'text-red-600'\r\n      default:\r\n        return 'text-gray-600'\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">{t('common.loading')}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"bg-red-50 border border-red-200 rounded-md p-6 max-w-md\">\r\n            <div className=\"flex\">\r\n              <div className=\"flex-shrink-0\">\r\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n              </div>\r\n              <div className=\"ml-3\">\r\n                <h3 className=\"text-sm font-medium text-red-800\">\r\n                  {t('analyticsDashboard.error')}\r\n                </h3>\r\n                <p className=\"mt-1 text-sm text-red-700\">{error}</p>\r\n                <button\r\n                  onClick={loadAnalytics}\r\n                  className=\"mt-3 bg-red-100 text-red-800 px-3 py-1 rounded-md text-sm hover:bg-red-200\"\r\n                >\r\n                  {t('common.retry')}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-8\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-gray-900\">\r\n                {t('analyticsDashboard.title')}\r\n              </h1>\r\n              <p className=\"mt-2 text-gray-600\">\r\n                {t('analyticsDashboard.subtitle')}\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"mt-4 sm:mt-0\">\r\n              <select\r\n                value={period}\r\n                onChange={(e) => setPeriod(e.target.value)}\r\n                className=\"block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md\"\r\n              >\r\n                <option value=\"7d\">{t('analyticsDashboard.last7Days')}</option>\r\n                <option value=\"30d\">{t('analyticsDashboard.last30Days')}</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {analyticsData && (\r\n          <>\r\n            {/* Key Metrics */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n              <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n                <div className=\"p-5\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <svg className=\"h-6 w-6 text-blue-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"ml-5 w-0 flex-1\">\r\n                      <dl>\r\n                        <dt className=\"text-sm font-medium text-gray-500 truncate\">\r\n                          {t('analyticsDashboard.totalEvents')}\r\n                        </dt>\r\n                        <dd className=\"text-lg font-medium text-gray-900\">\r\n                          {analyticsData.eventCounts.reduce((sum, event) => sum + event.count, 0)}\r\n                        </dd>\r\n                      </dl>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n                <div className=\"p-5\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <svg className=\"h-6 w-6 text-green-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197m13.5-9a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0z\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"ml-5 w-0 flex-1\">\r\n                      <dl>\r\n                        <dt className=\"text-sm font-medium text-gray-500 truncate\">\r\n                          {t('analyticsDashboard.activeUsers')}\r\n                        </dt>\r\n                        <dd className=\"text-lg font-medium text-gray-900\">\r\n                          {analyticsData.userEngagement.totalUsers}\r\n                        </dd>\r\n                      </dl>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n                <div className=\"p-5\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <svg className=\"h-6 w-6 text-yellow-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"ml-5 w-0 flex-1\">\r\n                      <dl>\r\n                        <dt className=\"text-sm font-medium text-gray-500 truncate\">\r\n                          {t('analyticsDashboard.avgEngagement')}\r\n                        </dt>\r\n                        <dd className=\"text-lg font-medium text-gray-900\">\r\n                          {analyticsData.userEngagement.avgEvents.toFixed(1)}\r\n                        </dd>\r\n                      </dl>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white overflow-hidden shadow rounded-lg\">\r\n                <div className=\"p-5\">\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <svg className=\"h-6 w-6 text-purple-600\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"ml-5 w-0 flex-1\">\r\n                      <dl>\r\n                        <dt className=\"text-sm font-medium text-gray-500 truncate\">\r\n                          {t('analyticsDashboard.performanceScore')}\r\n                        </dt>\r\n                        <dd className=\"text-lg font-medium text-gray-900\">\r\n                          {analyticsData.performanceMetrics.length > 0 ? 'Good' : 'N/A'}\r\n                        </dd>\r\n                      </dl>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Event Types Chart */}\r\n            <div className=\"bg-white shadow rounded-lg mb-8\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\r\n                  {t('analyticsDashboard.eventTypes')}\r\n                </h3>\r\n                <div className=\"space-y-4\">\r\n                  {analyticsData.eventCounts.map((event) => (\r\n                    <div key={event._id} className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center\">\r\n                        <div className=\"w-3 h-3 bg-blue-500 rounded-full mr-3\"></div>\r\n                        <span className=\"text-sm font-medium text-gray-900 capitalize\">\r\n                          {event._id.replace('_', ' ')}\r\n                        </span>\r\n                      </div>\r\n                      <span className=\"text-sm text-gray-500\">{event.count}</span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Performance Metrics */}\r\n            <div className=\"bg-white shadow rounded-lg\">\r\n              <div className=\"px-4 py-5 sm:p-6\">\r\n                <h3 className=\"text-lg leading-6 font-medium text-gray-900 mb-4\">\r\n                  {t('analyticsDashboard.performanceMetrics')}\r\n                </h3>\r\n                \r\n                {analyticsData.performanceMetrics.length > 0 ? (\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"min-w-full divide-y divide-gray-200\">\r\n                      <thead className=\"bg-gray-50\">\r\n                        <tr>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            {t('analyticsDashboard.metric')}\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            {t('analyticsDashboard.value')}\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            {t('analyticsDashboard.endpoint')}\r\n                          </th>\r\n                          <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                            {t('analyticsDashboard.timestamp')}\r\n                          </th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                        {analyticsData.performanceMetrics.slice(0, 10).map((metric, index) => (\r\n                          <tr key={index}>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900 capitalize\">\r\n                              {metric.metricType.replace('_', ' ')}\r\n                            </td>\r\n                            <td className={`px-6 py-4 whitespace-nowrap text-sm font-medium ${getMetricColor(metric.metricType, metric.value)}`}>\r\n                              {formatMetricValue(metric.metricType, metric.value)}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                              {metric.endpoint || '-'}\r\n                            </td>\r\n                            <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                              {new Date(metric.timestamp).toLocaleString()}\r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"text-center py-8\">\r\n                    <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\r\n                    </svg>\r\n                    <h3 className=\"mt-2 text-sm font-medium text-gray-900\">\r\n                      {t('analyticsDashboard.noMetrics')}\r\n                    </h3>\r\n                    <p className=\"mt-1 text-sm text-gray-500\">\r\n                      {t('analyticsDashboard.noMetricsDesc')}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AnalyticsDashboard"],"names":["AnalyticsDashboard","useTranslation","state","useApp","analyticsData","setAnalyticsData","useState","loading","setLoading","period","setPeriod","error","setError","useEffect","loadAnalytics","response","apiService","err","trackPageView","formatMetricValue","metricType","value","getMetricColor","jsxs","jsx","e","Fragment","sum","event","metric","index"],"mappings":"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"}