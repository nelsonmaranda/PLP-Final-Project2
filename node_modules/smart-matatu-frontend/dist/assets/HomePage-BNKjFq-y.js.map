{"version":3,"file":"HomePage-BNKjFq-y.js","sources":["../../src/hooks/useSWR.ts","../../src/screens/Home.tsx","../../src/screens/Dashboard.tsx","../../src/components/HomePage.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react'\r\n\r\ninterface SWROptions {\r\n  revalidateOnFocus?: boolean\r\n  revalidateOnReconnect?: boolean\r\n  refreshInterval?: number\r\n  retryCount?: number\r\n  retryDelay?: number\r\n  onError?: (error: Error) => void\r\n}\r\n\r\ninterface SWRResponse<T> {\r\n  data: T | undefined\r\n  error: Error | undefined\r\n  isLoading: boolean\r\n  isValidating: boolean\r\n  mutate: () => Promise<void>\r\n}\r\n\r\nexport function useSWR<T>(\r\n  key: string | null,\r\n  fetcher: () => Promise<T>,\r\n  options: SWROptions = {}\r\n): SWRResponse<T> {\r\n  const {\r\n    revalidateOnFocus = true,\r\n    revalidateOnReconnect = true,\r\n    refreshInterval = 0,\r\n    retryCount = 3,\r\n    retryDelay = 1000,\r\n    onError\r\n  } = options\r\n\r\n  const [data, setData] = useState<T | undefined>(undefined)\r\n  const [error, setError] = useState<Error | undefined>(undefined)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isValidating, setIsValidating] = useState(false)\r\n\r\n  const fetchData = useCallback(async (isRetry = false) => {\r\n    if (!key) return\r\n\r\n    if (!isRetry) {\r\n      setIsLoading(true)\r\n    }\r\n    setIsValidating(true)\r\n    setError(undefined)\r\n\r\n    let attempts = 0\r\n    const maxAttempts = retryCount + 1\r\n\r\n    while (attempts < maxAttempts) {\r\n      try {\r\n        const result = await fetcher()\r\n        setData(result)\r\n        setError(undefined)\r\n        break\r\n      } catch (err) {\r\n        attempts++\r\n        const error = err instanceof Error ? err : new Error('Unknown error')\r\n        \r\n        if (attempts >= maxAttempts) {\r\n          setError(error)\r\n          onError?.(error)\r\n        } else {\r\n          // Wait before retry with exponential backoff\r\n          await new Promise(resolve => setTimeout(resolve, retryDelay * Math.pow(2, attempts - 1)))\r\n        }\r\n      }\r\n    }\r\n\r\n    setIsLoading(false)\r\n    setIsValidating(false)\r\n  }, [key, fetcher, retryCount, retryDelay, onError])\r\n\r\n  const mutate = useCallback(async () => {\r\n    await fetchData(true)\r\n  }, [fetchData])\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [fetchData])\r\n\r\n  // Auto-refresh\r\n  useEffect(() => {\r\n    if (refreshInterval > 0) {\r\n      const interval = setInterval(() => {\r\n        fetchData(true)\r\n      }, refreshInterval)\r\n      return () => clearInterval(interval)\r\n    }\r\n  }, [fetchData, refreshInterval])\r\n\r\n  // Revalidate on focus\r\n  useEffect(() => {\r\n    if (!revalidateOnFocus) return\r\n\r\n    const handleFocus = () => {\r\n      fetchData(true)\r\n    }\r\n\r\n    window.addEventListener('focus', handleFocus)\r\n    return () => window.removeEventListener('focus', handleFocus)\r\n  }, [fetchData, revalidateOnFocus])\r\n\r\n  // Revalidate on reconnect\r\n  useEffect(() => {\r\n    if (!revalidateOnReconnect) return\r\n\r\n    const handleOnline = () => {\r\n      fetchData(true)\r\n    }\r\n\r\n    window.addEventListener('online', handleOnline)\r\n    return () => window.removeEventListener('online', handleOnline)\r\n  }, [fetchData, revalidateOnReconnect])\r\n\r\n  return {\r\n    data,\r\n    error,\r\n    isLoading,\r\n    isValidating,\r\n    mutate\r\n  }\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MapPin, BarChart3, Shield, Users, Clock, Star, ArrowRight } from 'lucide-react'\r\nimport apiService from '../services/api'\r\nimport { useTranslation } from '../hooks/useTranslation'\r\nimport { useSWR } from '../hooks/useSWR'\r\n\r\nexport default function Home() {\r\n  const { t } = useTranslation()\r\n  const [apiStatus, setApiStatus] = useState<'loading' | 'online' | 'offline'>('loading')\r\n\r\n  // Use SWR for analytics data with retry and caching\r\n  const { data: analyticsData } = useSWR(\r\n    'homepage-analytics',\r\n    () => apiService.getHomepageAnalytics(),\r\n    {\r\n      retryCount: 3,\r\n      retryDelay: 1000,\r\n      refreshInterval: 30000, // Refresh every 30 seconds\r\n      onError: (error) => console.warn('Analytics fetch failed:', error)\r\n    }\r\n  )\r\n\r\n  useEffect(() => {\r\n    const checkApiStatus = async () => {\r\n      try {\r\n        const res = await apiService.getHealth()\r\n        setApiStatus(res?.success ? 'online' : 'offline')\r\n      } catch {\r\n        setApiStatus('offline')\r\n      }\r\n    }\r\n    checkApiStatus()\r\n  }, [])\r\n\r\n  const statsData = analyticsData?.data || {\r\n    totalRoutes: 0,\r\n    totalReports: 0,\r\n    averageScore: 0,\r\n    totalUsers: 0\r\n  }\r\n\r\n  const stats = [\r\n    { label: t('home.activeRoutes'), value: statsData.totalRoutes.toLocaleString(), icon: MapPin },\r\n    { label: t('home.reportsToday'), value: statsData.totalReports.toLocaleString(), icon: BarChart3 },\r\n    { label: t('home.safetyRating'), value: `${(statsData.averageScore || 0).toFixed(1)}â˜…`, icon: Shield },\r\n    { label: t('home.activeUsers'), value: statsData.totalUsers.toLocaleString(), icon: Users },\r\n  ]\r\n\r\n  const features = [\r\n    {\r\n      title: t('home.realTimeTracking'),\r\n      description: t('home.realTimeTrackingDesc'),\r\n      icon: Clock,\r\n    },\r\n    {\r\n      title: t('home.safetyReports'),\r\n      description: t('home.safetyReportsDesc'),\r\n      icon: Shield,\r\n    },\r\n    {\r\n      title: t('home.reliabilityScores'),\r\n      description: t('home.reliabilityScoresDesc'),\r\n      icon: Star,\r\n    },\r\n    {\r\n      title: t('home.communityInsights'),\r\n      description: t('home.communityInsightsDesc'),\r\n      icon: Users,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <div className=\"min-h-screen\">\r\n      {/* Hero Section */}\r\n      <section className=\"hero\" role=\"banner\">\r\n        <div className=\"hero-content\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-4xl md:text-6xl font-bold text-gray-900 mb-6\">\r\n              {t('home.title')}\r\n            </h1>\r\n            <p className=\"text-xl text-gray-600 mb-8 max-w-3xl mx-auto\">\r\n              {t('home.subtitle')}\r\n            </p>\r\n            \r\n            {/* API Status */}\r\n            <div className=\"mb-8\" role=\"status\" aria-live=\"polite\">\r\n              {apiStatus === 'loading' && (\r\n                <div className=\"inline-flex items-center px-4 py-2 rounded-full bg-yellow-100 text-yellow-800\">\r\n                  <div className=\"loading-spinner mr-2\" aria-hidden=\"true\"></div>\r\n                  {t('home.checkingStatus')}\r\n                </div>\r\n              )}\r\n              {apiStatus === 'online' && (\r\n                <div className=\"status-online\">\r\n                  {t('home.systemOnline')}\r\n                </div>\r\n              )}\r\n              {apiStatus === 'offline' && (\r\n                <div className=\"status-offline\">\r\n                  {t('home.systemOffline')}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n              <Link to=\"/map\" className=\"btn btn-primary btn-lg\">\r\n                {t('home.viewMap')}\r\n                <ArrowRight className=\"w-5 h-5 ml-2\" aria-hidden=\"true\" />\r\n              </Link>\r\n              <Link to=\"/report\" className=\"btn btn-outline btn-lg\">\r\n                {t('home.reportTrip')}\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Stats Section */}\r\n      <section className=\"section bg-white\" aria-labelledby=\"stats-heading\">\r\n        <div className=\"container\">\r\n          <h2 id=\"stats-heading\" className=\"sr-only\">Platform Statistics</h2>\r\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\r\n            {stats.map((stat) => {\r\n              const Icon = stat.icon\r\n              return (\r\n                <div key={stat.label} className=\"text-center\">\r\n                  <div className=\"inline-flex items-center justify-center w-12 h-12 bg-primary-100 rounded-lg mb-4\">\r\n                    <Icon className=\"w-6 h-6 text-primary-600\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <div className=\"text-2xl font-bold text-gray-900\">{stat.value}</div>\r\n                  <div className=\"text-sm text-gray-600\">{stat.label}</div>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Features Section */}\r\n      <section className=\"section bg-gray-50\" aria-labelledby=\"features-heading\">\r\n        <div className=\"container\">\r\n          <div className=\"text-center mb-12\">\r\n            <h2 id=\"features-heading\" className=\"text-3xl font-bold text-gray-900 mb-4\">\r\n              {t('home.howItWorks')}\r\n            </h2>\r\n            <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\r\n              {t('home.howItWorksDesc')}\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\r\n            {features.map((feature) => {\r\n              const Icon = feature.icon\r\n              return (\r\n                <article key={feature.title} className=\"card\">\r\n                  <div className=\"card-content text-center\">\r\n                    <div className=\"inline-flex items-center justify-center w-12 h-12 bg-secondary-100 rounded-lg mb-4\">\r\n                      <Icon className=\"w-6 h-6 text-secondary-600\" aria-hidden=\"true\" />\r\n                    </div>\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                      {feature.title}\r\n                    </h3>\r\n                    <p className=\"text-gray-600 text-sm\">\r\n                      {feature.description}\r\n                    </p>\r\n                  </div>\r\n                </article>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* CTA Section */}\r\n      <section className=\"section bg-primary-600\" aria-labelledby=\"cta-heading\">\r\n        <div className=\"container text-center\">\r\n          <h2 id=\"cta-heading\" className=\"text-3xl font-bold text-white mb-4\">\r\n            {t('home.readyToStart')}\r\n          </h2>\r\n          <p className=\"text-xl text-primary-100 mb-8 max-w-2xl mx-auto\">\r\n            {t('home.readyToStartDesc')}\r\n          </p>\r\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n            <Link to=\"/signup\" className=\"btn btn-secondary btn-lg\">\r\n              {t('home.signUpNow')}\r\n            </Link>\r\n            <Link to=\"/map\" className=\"btn btn-outline btn-lg text-white border-white hover:bg-white hover:text-primary-600\">\r\n              {t('home.exploreMap')}\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { \r\n  MapPin, \r\n  Clock, \r\n  TrendingUp, \r\n  Shield, \r\n  Cloud, \r\n  AlertTriangle,\r\n  Star,\r\n  BarChart3,\r\n  Navigation,\r\n  Zap,\r\n  Eye,\r\n  Calendar,\r\n  Thermometer,\r\n  Droplets,\r\n  Wind\r\n} from 'lucide-react'\r\nimport { useApp } from '../contexts/AppContext'\r\nimport apiService from '../services/api'\r\nimport { Route, Report, WeatherData, FarePrediction, SafetyScore } from '../types'\r\nimport { useTranslation } from '../hooks/useTranslation'\r\n\r\ninterface DashboardStats {\r\n  totalRoutes: number\r\n  activeReports: number\r\n  averageFare: number\r\n  safetyRating: number\r\n  weatherCondition: string\r\n  temperature: number\r\n  humidity: number\r\n  windSpeed: number\r\n}\r\n\r\ninterface RouteInsight {\r\n  routeId: string\r\n  routeName: string\r\n  farePrediction: FarePrediction\r\n  safetyScore: SafetyScore\r\n  crowdDensity: {\r\n    level: 'low' | 'medium' | 'high'\r\n    percentage: number\r\n    predictedPeak: string\r\n    recommendedTime: string\r\n    lastUpdated: string\r\n  }\r\n  travelTime: number\r\n  recommendedTime: string\r\n  alternativeRoutes: string[]\r\n  weatherImpact: string\r\n  lastUpdated: string\r\n}\r\n\r\nexport default function Dashboard() {\r\n  const { state } = useApp()\r\n  const { t } = useTranslation()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [stats, setStats] = useState<DashboardStats | null>(null)\r\n  const [weather, setWeather] = useState<WeatherData | null>(null)\r\n  const [routeInsights, setRouteInsights] = useState<RouteInsight[]>([])\r\n  const [favoriteRoutes, setFavoriteRoutes] = useState<Route[]>([])\r\n  const [recentReports, setRecentReports] = useState<Report[]>([])\r\n  // Controls for insights limits\r\n  const [insightsLimit] = useState<number>(10)\r\n  const insightsDays = 7\r\n\r\n  // Load dashboard data\r\n  const loadDashboardData = useCallback(async () => {\r\n    if (!state.user) return\r\n\r\n    setIsLoading(true)\r\n    setError(null)\r\n\r\n    try {\r\n      // Load all dashboard data in parallel\r\n      const [\r\n        statsResponse,\r\n        weatherResponse,\r\n        insightsResponse,\r\n        favoritesResponse,\r\n        reportsResponse\r\n      ] = await Promise.all([\r\n        apiService.getDashboardStats(),\r\n        apiService.getWeatherData(),\r\n        apiService.getRouteInsights({ limit: insightsLimit, days: insightsDays }),\r\n        apiService.getFavoriteRoutes(state.user._id),\r\n        apiService.getUserReports(state.user._id)\r\n      ])\r\n\r\n      // Set dashboard stats\r\n      if (statsResponse.success && statsResponse.data) {\r\n        setStats(statsResponse.data)\r\n      }\r\n\r\n      // Set weather data\r\n      if (weatherResponse.success && weatherResponse.data) {\r\n        setWeather(weatherResponse.data)\r\n      }\r\n\r\n      // Set route insights\r\n      if (insightsResponse.success && insightsResponse.data) {\r\n        setRouteInsights(insightsResponse.data.insights)\r\n      }\r\n\r\n      // Set favorite routes\r\n      if (favoritesResponse.success && favoritesResponse.data) {\r\n        console.log('Favorite routes loaded:', favoritesResponse.data.routes)\r\n        setFavoriteRoutes(favoritesResponse.data.routes)\r\n      } else {\r\n        console.log('Failed to load favorite routes:', favoritesResponse)\r\n      }\r\n\r\n      // Set recent reports\r\n      if (reportsResponse.success && reportsResponse.data) {\r\n        console.log('Recent reports loaded:', reportsResponse.data.reports)\r\n        setRecentReports(reportsResponse.data.reports.slice(0, 5))\r\n      } else {\r\n        console.log('Failed to load recent reports:', reportsResponse)\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error loading dashboard data:', error)\r\n      setError('Failed to load dashboard data. Please try again.')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [state.user, insightsLimit])\r\n\r\n  useEffect(() => {\r\n    loadDashboardData()\r\n  }, [loadDashboardData])\r\n\r\n  // Get weather icon\r\n  const getWeatherIcon = (condition: string) => {\r\n    const conditionLower = condition.toLowerCase()\r\n    if (conditionLower.includes('rain')) return <Droplets className=\"w-6 h-6 text-blue-500\" />\r\n    if (conditionLower.includes('cloud')) return <Cloud className=\"w-6 h-6 text-gray-500\" />\r\n    if (conditionLower.includes('sun')) return <Zap className=\"w-6 h-6 text-yellow-500\" />\r\n    return <Cloud className=\"w-6 h-6 text-gray-500\" />\r\n  }\r\n\r\n  // Get crowd level color\r\n  const getCrowdLevelColor = (level: string) => {\r\n    switch (level) {\r\n      case 'low': return 'text-green-600 bg-green-100'\r\n      case 'medium': return 'text-yellow-600 bg-yellow-100'\r\n      case 'high': return 'text-red-600 bg-red-100'\r\n      default: return 'text-gray-600 bg-gray-100'\r\n    }\r\n  }\r\n\r\n  const getCrowdLabel = (level: 'low' | 'medium' | 'high') => {\r\n    switch (level) {\r\n      case 'low':\r\n        return t('dashboard.crowdLow')\r\n      case 'medium':\r\n        return t('dashboard.crowdMedium')\r\n      case 'high':\r\n        return t('dashboard.crowdHigh')\r\n      default:\r\n        return `${level} ${t('dashboard.crowdSuffix')}`\r\n    }\r\n  }\r\n\r\n  // Get safety score color\r\n  const getSafetyScoreColor = (score: number) => {\r\n    if (score >= 4) return 'text-green-600'\r\n    if (score >= 3) return 'text-yellow-600'\r\n    return 'text-red-600'\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-primary-500 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">{t('dashboard.loadingYourDashboard')}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <AlertTriangle className=\"w-16 h-16 text-red-400 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">{t('dashboard.errorTitle')}</h2>\r\n          <p className=\"text-gray-600 mb-4\">{error}</p>\r\n          <button\r\n            onClick={loadDashboardData}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            {t('dashboard.tryAgain')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Dashboard Header */}\r\n      <div className=\"bg-white shadow-sm border-b border-gray-200\">\r\n        <div className=\"px-6 py-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-gray-900\">\r\n                {t('dashboard.welcome')}, {state.user?.displayName}!\r\n              </h1>\r\n              <p className=\"text-gray-600 mt-1\">\r\n                {t('dashboard.headerSubtitle')}\r\n              </p>\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <div className=\"text-sm text-gray-500\">\r\n                {new Date().toLocaleDateString('en-KE', { \r\n                  weekday: 'long', \r\n                  year: 'numeric', \r\n                  month: 'long', \r\n                  day: 'numeric' \r\n                })}\r\n              </div>\r\n              <div className=\"text-lg font-semibold text-gray-900\">\r\n                {new Date().toLocaleTimeString('en-KE', { \r\n                  hour: '2-digit', \r\n                  minute: '2-digit' \r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"px-6 py-8\">\r\n        {/* Weather & Quick Stats */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6 mb-8\">\r\n          {/* Weather Card */}\r\n          {weather && (\r\n            <div className=\"bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl p-6 text-white\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h3 className=\"text-lg font-semibold\">{t('dashboard.currentWeather')}</h3>\r\n                {getWeatherIcon(weather.condition)}\r\n              </div>\r\n              <div className=\"space-y-2\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Thermometer className=\"w-4 h-4\" />\r\n                  <span className=\"text-2xl font-bold\">{weather.temperature}Â°C</span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Droplets className=\"w-4 h-4\" />\r\n                  <span>{weather.humidity}% {t('dashboard.humidityLabel')}</span>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <Wind className=\"w-4 h-4\" />\r\n                  <span>{weather.windSpeed} {t('dashboard.windSpeedLabel')}</span>\r\n                </div>\r\n                <p className=\"text-sm opacity-90\">{weather.condition}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Quick Stats */}\r\n          {stats && (\r\n            <>\r\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900\">{t('dashboard.activeRoutesTitle')}</h3>\r\n                  <MapPin className=\"w-6 h-6 text-primary-500\" />\r\n                </div>\r\n                <div className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n                  {stats.totalRoutes}\r\n                </div>\r\n                <p className=\"text-sm text-gray-600\">{t('dashboard.routesMonitored')}</p>\r\n              </div>\r\n\r\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900\">{t('dashboard.avgFareTitle')}</h3>\r\n                  <TrendingUp className=\"w-6 h-6 text-green-500\" />\r\n                </div>\r\n                <div className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n                  KES {stats.averageFare}\r\n                </div>\r\n                <p className=\"text-sm text-gray-600\">{t('dashboard.currentAverage')}</p>\r\n              </div>\r\n\r\n              <div className=\"bg-white rounded-xl p-6 shadow-sm border border-gray-200\">\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900\">{t('dashboard.safetyRating')}</h3>\r\n                  <Shield className=\"w-6 h-6 text-blue-500\" />\r\n                </div>\r\n                <div className=\"text-3xl font-bold text-gray-900 mb-2\">\r\n                  {stats.safetyRating.toFixed(1)}/5\r\n                </div>\r\n                <p className=\"text-sm text-gray-600\">{t('dashboard.overallSafety')}</p>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Main Content Grid */}\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          {/* Route Insights - Main Content */}\r\n          <div className=\"lg:col-span-2\">\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\r\n              <div className=\"p-6 border-b border-gray-200\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <h2 className=\"text-xl font-bold text-gray-900\">{t('dashboard.smartRouteInsights')}</h2>\r\n                  <Link to=\"/map\" className=\"btn btn-ghost btn-sm\">\r\n                    {t('dashboard.viewAllRoutesBtn')}\r\n                  </Link>\r\n                </div>\r\n                <p className=\"text-gray-600 mt-1\">\r\n                  {t('dashboard.aiRecommendations')}\r\n                </p>\r\n              </div>\r\n              <div className=\"p-6\">\r\n                <div className=\"mb-4\"></div>\r\n                {routeInsights.length === 0 ? (\r\n                  <div className=\"text-center py-8\">\r\n                    <Navigation className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n                    <p className=\"text-gray-500 mb-4\">{t('dashboard.noInsights')}</p>\r\n                    <Link to=\"/map\" className=\"btn btn-primary\">\r\n                      {t('dashboard.exploreRoutes')}\r\n                    </Link>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"space-y-4\">\r\n                    {routeInsights.slice(0, 5).map((insight, index) => (\r\n                      <div key={index} className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                        <div className=\"flex items-start justify-between mb-3\">\r\n                          <div className=\"flex-1\">\r\n                            <h3 className=\"font-semibold text-gray-900\">\r\n                              {insight.routeName}\r\n                            </h3>\r\n                            <p className=\"text-sm text-gray-600\">{t('dashboard.routeIdLabel')}: {insight.routeId}</p>\r\n                          </div>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <span className={`px-2 py-1 text-xs rounded-full ${getCrowdLevelColor(insight.crowdDensity.level)}`}>\r\n                              {getCrowdLabel(insight.crowdDensity.level)}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <TrendingUp className=\"w-4 h-4 text-green-500\" />\r\n                            <div>\r\n                              <div className=\"font-medium text-gray-900\">\r\n                                KES {insight.farePrediction.predictedFare}\r\n                              </div>\r\n                              <div className=\"text-xs text-gray-500\">{t('dashboard.predictedFareLabel')}</div>\r\n                            </div>\r\n                          </div>\r\n                          \r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <Shield className={`w-4 h-4 ${getSafetyScoreColor(insight.safetyScore.overallScore)}`} />\r\n                            <div>\r\n                              <div className={`font-medium ${getSafetyScoreColor(insight.safetyScore.overallScore)}`}>\r\n                                {insight.safetyScore.overallScore.toFixed(1)}/5\r\n                              </div>\r\n                              <div className=\"text-xs text-gray-500\">{t('dashboard.safetyScoreLabel')}</div>\r\n                            </div>\r\n                          </div>\r\n                          \r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <Clock className=\"w-4 h-4 text-blue-500\" />\r\n                            <div>\r\n                              <div className=\"font-medium text-gray-900\">\r\n                                {insight.travelTime} min\r\n                              </div>\r\n                              <div className=\"text-xs text-gray-500\">{t('dashboard.travelTimeLabel')}</div>\r\n                            </div>\r\n                          </div>\r\n                          \r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <Calendar className=\"w-4 h-4 text-purple-500\" />\r\n                            <div>\r\n                              <div className=\"font-medium text-gray-900\">\r\n                                {insight.recommendedTime}\r\n                              </div>\r\n                              <div className=\"text-xs text-gray-500\">{t('dashboard.bestTimeLabel')}</div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Sidebar */}\r\n          <div className=\"space-y-6\">\r\n            {/* Favorite Routes */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\r\n              <div className=\"p-6 border-b border-gray-200\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900\">{t('dashboard.favoriteRoutes')}</h3>\r\n                  <button\r\n                    onClick={loadDashboardData}\r\n                    disabled={isLoading}\r\n                    className=\"flex items-center space-x-1 px-2 py-1 text-xs bg-blue-100 text-blue-700 rounded hover:bg-blue-200 disabled:opacity-50\"\r\n                  >\r\n                    <svg className={`w-3 h-3 ${isLoading ? 'animate-spin' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n                    </svg>\r\n                    <span>{t('dashboard.refresh')}</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"p-6\">\r\n                {isLoading ? (\r\n                  <div className=\"text-center py-4\">\r\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-500 mx-auto mb-2\"></div>\r\n                    <p className=\"text-sm text-gray-500\">{t('dashboard.loading')}</p>\r\n                  </div>\r\n                ) : favoriteRoutes.length === 0 ? (\r\n                  <div className=\"text-center py-4\">\r\n                    <Star className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\r\n                    <p className=\"text-sm text-gray-500 mb-3\">{t('dashboard.noFavorites')}</p>\r\n                    <Link to=\"/map\" className=\"btn btn-ghost btn-sm\">\r\n                      {t('dashboard.viewAllRoutesBtn')}\r\n                    </Link>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"space-y-3\">\r\n                    {favoriteRoutes.slice(0, 3).map((route) => (\r\n                      <div key={route._id} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\r\n                        <div>\r\n                          <div className=\"font-medium text-gray-900\">\r\n                            {t('dashboard.routeLabel')} {route.routeNumber}\r\n                          </div>\r\n                          <div className=\"text-sm text-gray-600\">{route.name}</div>\r\n                        </div>\r\n                        <Link\r\n                          to={`/map?route=${route._id}`}\r\n                          className=\"btn btn-ghost btn-sm\"\r\n                        >\r\n                          {t('dashboard.viewLabel')}\r\n                        </Link>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Recent Reports */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\r\n              <div className=\"p-6 border-b border-gray-200\">\r\n                <div className=\"flex items-center justify-between\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900\">{t('dashboard.recentReports')}</h3>\r\n                  <button\r\n                    onClick={loadDashboardData}\r\n                    disabled={isLoading}\r\n                    className=\"flex items-center space-x-1 px-2 py-1 text-xs bg-blue-100 text-blue-700 rounded hover:bg-blue-200 disabled:opacity-50\"\r\n                  >\r\n                    <svg className={`w-3 h-3 ${isLoading ? 'animate-spin' : ''}`} fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n                    </svg>\r\n                    <span>{t('dashboard.refresh')}</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <div className=\"p-6\">\r\n                {isLoading ? (\r\n                  <div className=\"text-center py-4\">\r\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-500 mx-auto mb-2\"></div>\r\n                    <p className=\"text-sm text-gray-500\">{t('dashboard.loading')}</p>\r\n                  </div>\r\n                ) : recentReports.length === 0 ? (\r\n                  <div className=\"text-center py-4\">\r\n                    <BarChart3 className=\"w-8 h-8 text-gray-400 mx-auto mb-2\" />\r\n                    <p className=\"text-sm text-gray-500 mb-3\">{t('dashboard.noReports')}</p>\r\n                    <Link to=\"/report\" className=\"btn btn-ghost btn-sm\">\r\n                      {t('dashboard.submitReportBtn')}\r\n                    </Link>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"space-y-3\">\r\n                    {recentReports.slice(0, 3).map((report) => (\r\n                      <div key={report._id} className=\"flex items-center space-x-3\">\r\n                        <div className=\"w-2 h-2 bg-primary-500 rounded-full\"></div>\r\n                        <div className=\"flex-1 min-w-0\">\r\n                          <div className=\"text-sm font-medium text-gray-900 truncate\">\r\n                            {report.reportType}\r\n                          </div>\r\n                          <div className=\"text-xs text-gray-500\">\r\n                            {new Date(report.createdAt).toLocaleDateString()}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Quick Actions */}\r\n            <div className=\"bg-white rounded-xl shadow-sm border border-gray-200\">\r\n              <div className=\"p-6 border-b border-gray-200\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900\">{t('dashboard.quickActions')}</h3>\r\n              </div>\r\n              <div className=\"p-6 space-y-3\">\r\n                <Link to=\"/map\" className=\"flex items-center space-x-3 p-3 hover:bg-gray-50 rounded-lg transition-colors\">\r\n                  <MapPin className=\"w-5 h-5 text-primary-500\" />\r\n                  <span className=\"text-gray-900\">{t('dashboard.quickViewMap')}</span>\r\n                </Link>\r\n                <Link to=\"/report\" className=\"flex items-center space-x-3 p-3 hover:bg-gray-50 rounded-lg transition-colors\">\r\n                  <BarChart3 className=\"w-5 h-5 text-green-500\" />\r\n                  <span className=\"text-gray-900\">{t('dashboard.quickSubmitReport')}</span>\r\n                </Link>\r\n                <Link to=\"/profile\" className=\"flex items-center space-x-3 p-3 hover:bg-gray-50 rounded-lg transition-colors\">\r\n                  <Eye className=\"w-5 h-5 text-blue-500\" />\r\n                  <span className=\"text-gray-900\">{t('dashboard.quickViewProfile')}</span>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useApp } from '../contexts/AppContext'\r\nimport Home from '../screens/Home'\r\nimport Dashboard from '../screens/Dashboard'\r\n\r\nexport default function HomePage() {\r\n  const { state } = useApp()\r\n  \r\n  // Show dashboard for authenticated users, home page for non-authenticated users\r\n  return state.isAuthenticated ? <Dashboard /> : <Home />\r\n}\r\n"],"names":["useSWR","key","fetcher","options","revalidateOnFocus","revalidateOnReconnect","refreshInterval","retryCount","retryDelay","onError","data","setData","useState","error","setError","isLoading","setIsLoading","isValidating","setIsValidating","fetchData","useCallback","isRetry","attempts","maxAttempts","result","err","resolve","mutate","useEffect","interval","handleFocus","handleOnline","Home","useTranslation","apiStatus","setApiStatus","analyticsData","apiService","res","statsData","stats","MapPin","BarChart3","Shield","Users","features","Clock","Star","jsxs","jsx","Link","ArrowRight","stat","Icon","feature","Dashboard","state","useApp","t","setStats","weather","setWeather","routeInsights","setRouteInsights","favoriteRoutes","setFavoriteRoutes","recentReports","setRecentReports","insightsLimit","insightsDays","loadDashboardData","statsResponse","weatherResponse","insightsResponse","favoritesResponse","reportsResponse","getWeatherIcon","condition","conditionLower","Droplets","Cloud","Zap","getCrowdLevelColor","level","getCrowdLabel","getSafetyScoreColor","score","AlertTriangle","_a","Thermometer","Wind","Fragment","TrendingUp","Navigation","insight","index","Calendar","route","report","Eye","HomePage"],"mappings":"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"}