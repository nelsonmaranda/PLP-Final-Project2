{"version":3,"file":"SaccoDashboard-Dg9TuMXH.js","sources":["../../src/screens/SaccoDashboard.tsx"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport { \r\n  BarChart3, \r\n  Users, \r\n  TrendingUp, \r\n  Star,\r\n  MapPin,\r\n  DollarSign,\r\n  Activity,\r\n  MessageSquare,\r\n  RefreshCw\r\n} from 'lucide-react'\r\nimport apiService from '../services/api'\r\n\r\ninterface RoutePerformance {\r\n  routeId: string\r\n  routeName: string\r\n  routeNumber: string\r\n  efficiencyScore: number\r\n  revenue: number\r\n  passengerCount: number\r\n  onTimePercentage: number\r\n  safetyScore: number\r\n  trend: 'up' | 'down' | 'stable'\r\n}\r\n\r\ninterface DriverPerformance {\r\n  driverId: string\r\n  driverName: string\r\n  safetyScore: number\r\n  onTimePercentage: number\r\n  customerRating: number\r\n  incidentCount: number\r\n  routes: string[]\r\n  status: 'active' | 'suspended' | 'warning'\r\n}\r\n\r\ninterface CustomerFeedback {\r\n  id: string\r\n  routeId: string\r\n  routeName: string\r\n  rating: number\r\n  comment: string\r\n  category: 'safety' | 'comfort' | 'punctuality' | 'service' | 'other'\r\n  status: 'pending' | 'in_progress' | 'resolved'\r\n  createdAt: string\r\n  responseTime?: number\r\n}\r\n\r\ninterface FleetStatus {\r\n  totalVehicles: number\r\n  activeVehicles: number\r\n  maintenanceDue: number\r\n  averageAge: number\r\n  utilizationRate: number\r\n}\r\n\r\nexport default function SaccoDashboard() {\r\n  const [activeTab, setActiveTab] = useState('overview')\r\n  const [loading, setLoading] = useState(true)\r\n  const [routePerformance, setRoutePerformance] = useState<RoutePerformance[]>([])\r\n  const [driverPerformance, setDriverPerformance] = useState<DriverPerformance[]>([])\r\n  const [customerFeedback, setCustomerFeedback] = useState<CustomerFeedback[]>([])\r\n  const [fleetStatus, setFleetStatus] = useState<FleetStatus | null>(null)\r\n  const [dateRange, setDateRange] = useState('30d')\r\n  const [filterStatus, setFilterStatus] = useState('all')\r\n\r\n  useEffect(() => {\r\n    loadDashboardData()\r\n  }, [dateRange, filterStatus])\r\n\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setLoading(true)\r\n      \r\n      // Load route performance data\r\n      const routesResponse = await apiService.getRoutes()\r\n      if (routesResponse.success && routesResponse.data && routesResponse.data.routes) {\r\n        const performanceData = routesResponse.data.routes.map((route: any) => ({\r\n          routeId: route._id,\r\n          routeName: route.name,\r\n          routeNumber: route.routeNumber,\r\n          efficiencyScore: route.efficiencyScore || 75,\r\n          revenue: Math.floor(Math.random() * 50000) + 20000,\r\n          passengerCount: Math.floor(Math.random() * 1000) + 200,\r\n          onTimePercentage: Math.floor(Math.random() * 30) + 70,\r\n          safetyScore: Math.floor(Math.random() * 20) + 80,\r\n          trend: ['up', 'down', 'stable'][Math.floor(Math.random() * 3)] as 'up' | 'down' | 'stable'\r\n        }))\r\n        setRoutePerformance(performanceData)\r\n      }\r\n\r\n      // Load driver performance data\r\n      const driversData: DriverPerformance[] = [\r\n        {\r\n          driverId: '1',\r\n          driverName: 'John Mwangi',\r\n          safetyScore: 92,\r\n          onTimePercentage: 88,\r\n          customerRating: 4.5,\r\n          incidentCount: 1,\r\n          routes: ['Route 1', 'Route 2'],\r\n          status: 'active'\r\n        },\r\n        {\r\n          driverId: '2',\r\n          driverName: 'Mary Wanjiku',\r\n          safetyScore: 95,\r\n          onTimePercentage: 92,\r\n          customerRating: 4.8,\r\n          incidentCount: 0,\r\n          routes: ['Route 3', 'Route 4'],\r\n          status: 'active'\r\n        },\r\n        {\r\n          driverId: '3',\r\n          driverName: 'Peter Kimani',\r\n          safetyScore: 78,\r\n          onTimePercentage: 75,\r\n          customerRating: 3.9,\r\n          incidentCount: 3,\r\n          routes: ['Route 5'],\r\n          status: 'warning'\r\n        }\r\n      ]\r\n      setDriverPerformance(driversData)\r\n\r\n      // Load customer feedback\r\n      const feedbackData: CustomerFeedback[] = [\r\n        {\r\n          id: '1',\r\n          routeId: '1',\r\n          routeName: 'Route 1 - CBD to Westlands',\r\n          rating: 4,\r\n          comment: 'Driver was very professional and punctual',\r\n          category: 'service',\r\n          status: 'resolved',\r\n          createdAt: '2025-09-20T10:30:00Z',\r\n          responseTime: 2\r\n        },\r\n        {\r\n          id: '2',\r\n          routeId: '2',\r\n          routeName: 'Route 2 - CBD to Eastleigh',\r\n          rating: 2,\r\n          comment: 'Vehicle was overcrowded and uncomfortable',\r\n          category: 'comfort',\r\n          status: 'in_progress',\r\n          createdAt: '2025-09-21T14:20:00Z'\r\n        }\r\n      ]\r\n      setCustomerFeedback(feedbackData)\r\n\r\n      // Load fleet status\r\n      setFleetStatus({\r\n        totalVehicles: 25,\r\n        activeVehicles: 23,\r\n        maintenanceDue: 3,\r\n        averageAge: 4.2,\r\n        utilizationRate: 87\r\n      })\r\n\r\n    } catch (error) {\r\n      console.error('Error loading dashboard data:', error)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active': return 'text-green-600 bg-green-100'\r\n      case 'warning': return 'text-yellow-600 bg-yellow-100'\r\n      case 'suspended': return 'text-red-600 bg-red-100'\r\n      case 'resolved': return 'text-green-600 bg-green-100'\r\n      case 'in_progress': return 'text-blue-600 bg-blue-100'\r\n      case 'pending': return 'text-gray-600 bg-gray-100'\r\n      default: return 'text-gray-600 bg-gray-100'\r\n    }\r\n  }\r\n\r\n  const getTrendIcon = (trend: string) => {\r\n    switch (trend) {\r\n      case 'up': return <TrendingUp className=\"w-4 h-4 text-green-500\" />\r\n      case 'down': return <TrendingUp className=\"w-4 h-4 text-red-500 rotate-180\" />\r\n      default: return <Activity className=\"w-4 h-4 text-gray-500\" />\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <RefreshCw className=\"w-8 h-8 animate-spin mx-auto mb-4 text-blue-600\" />\r\n          <p className=\"text-gray-600\">Loading SACCO Dashboard...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"flex justify-between items-center py-6\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-gray-900\">SACCO Dashboard</h1>\r\n              <p className=\"text-gray-600 mt-1\">Manage your fleet, drivers, and routes</p>\r\n            </div>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <select\r\n                value={dateRange}\r\n                onChange={(e) => setDateRange(e.target.value)}\r\n                className=\"border border-gray-300 rounded-lg px-3 py-2 text-sm\"\r\n              >\r\n                <option value=\"7d\">Last 7 days</option>\r\n                <option value=\"30d\">Last 30 days</option>\r\n                <option value=\"90d\">Last 90 days</option>\r\n              </select>\r\n              <button\r\n                onClick={loadDashboardData}\r\n                className=\"flex items-center space-x-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700\"\r\n              >\r\n                <RefreshCw className=\"w-4 h-4\" />\r\n                <span>Refresh</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Navigation Tabs */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        <div className=\"border-b border-gray-200\">\r\n          <nav className=\"-mb-px flex space-x-8\">\r\n            {[\r\n              { id: 'overview', name: 'Overview', icon: BarChart3 },\r\n              { id: 'routes', name: 'Route Performance', icon: MapPin },\r\n              { id: 'drivers', name: 'Driver Management', icon: Users },\r\n              { id: 'feedback', name: 'Customer Feedback', icon: MessageSquare },\r\n              { id: 'fleet', name: 'Fleet Management', icon: Activity }\r\n            ].map((tab) => (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id)}\r\n                className={`flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm ${\r\n                  activeTab === tab.id\r\n                    ? 'border-blue-500 text-blue-600'\r\n                    : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                }`}\r\n              >\r\n                <tab.icon className=\"w-4 h-4\" />\r\n                <span>{tab.name}</span>\r\n              </button>\r\n            ))}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {activeTab === 'overview' && (\r\n          <div className=\"space-y-6\">\r\n            {/* Key Metrics */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n              <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"p-2 bg-blue-100 rounded-lg\">\r\n                    <MapPin className=\"w-6 h-6 text-blue-600\" />\r\n                  </div>\r\n                  <div className=\"ml-4\">\r\n                    <p className=\"text-sm font-medium text-gray-600\">Active Routes</p>\r\n                    <p className=\"text-2xl font-bold text-gray-900\">{routePerformance.length}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"p-2 bg-green-100 rounded-lg\">\r\n                    <Users className=\"w-6 h-6 text-green-600\" />\r\n                  </div>\r\n                  <div className=\"ml-4\">\r\n                    <p className=\"text-sm font-medium text-gray-600\">Active Drivers</p>\r\n                    <p className=\"text-2xl font-bold text-gray-900\">\r\n                      {driverPerformance.filter(d => d.status === 'active').length}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"p-2 bg-yellow-100 rounded-lg\">\r\n                    <DollarSign className=\"w-6 h-6 text-yellow-600\" />\r\n                  </div>\r\n                  <div className=\"ml-4\">\r\n                    <p className=\"text-sm font-medium text-gray-600\">Total Revenue</p>\r\n                    <p className=\"text-2xl font-bold text-gray-900\">\r\n                      KSh {routePerformance.reduce((sum, route) => sum + route.revenue, 0).toLocaleString()}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"p-2 bg-purple-100 rounded-lg\">\r\n                    <Star className=\"w-6 h-6 text-purple-600\" />\r\n                  </div>\r\n                  <div className=\"ml-4\">\r\n                    <p className=\"text-sm font-medium text-gray-600\">Avg Rating</p>\r\n                    <p className=\"text-2xl font-bold text-gray-900\">\r\n                      {(driverPerformance.reduce((sum, driver) => sum + driver.customerRating, 0) / driverPerformance.length).toFixed(1)}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Fleet Status */}\r\n            {fleetStatus && (\r\n              <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Fleet Status</h3>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                  <div className=\"text-center\">\r\n                    <p className=\"text-3xl font-bold text-blue-600\">{fleetStatus.activeVehicles}</p>\r\n                    <p className=\"text-sm text-gray-600\">Active Vehicles</p>\r\n                    <p className=\"text-xs text-gray-500\">of {fleetStatus.totalVehicles} total</p>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <p className=\"text-3xl font-bold text-yellow-600\">{fleetStatus.maintenanceDue}</p>\r\n                    <p className=\"text-sm text-gray-600\">Maintenance Due</p>\r\n                    <p className=\"text-xs text-gray-500\">vehicles need service</p>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <p className=\"text-3xl font-bold text-green-600\">{fleetStatus.utilizationRate}%</p>\r\n                    <p className=\"text-sm text-gray-600\">Utilization Rate</p>\r\n                    <p className=\"text-xs text-gray-500\">average fleet usage</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'routes' && (\r\n          <div className=\"bg-white rounded-lg shadow\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Route Performance</h3>\r\n            </div>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Route</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Efficiency</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Revenue</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Passengers</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">On-Time %</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Safety</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Trend</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {routePerformance.map((route) => (\r\n                    <tr key={route.routeId}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div>\r\n                          <div className=\"text-sm font-medium text-gray-900\">{route.routeNumber}</div>\r\n                          <div className=\"text-sm text-gray-500\">{route.routeName}</div>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          <div className=\"w-16 bg-gray-200 rounded-full h-2 mr-2\">\r\n                            <div \r\n                              className=\"bg-blue-600 h-2 rounded-full\" \r\n                              style={{ width: `${route.efficiencyScore}%` }}\r\n                            ></div>\r\n                          </div>\r\n                          <span className=\"text-sm text-gray-900\">{route.efficiencyScore}%</span>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        KSh {route.revenue.toLocaleString()}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {route.passengerCount}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {route.onTimePercentage}%\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {route.safetyScore}%\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        {getTrendIcon(route.trend)}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'drivers' && (\r\n          <div className=\"bg-white rounded-lg shadow\">\r\n            <div className=\"px-6 py-4 border-b border-gray-200\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Driver Performance</h3>\r\n            </div>\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Driver</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Safety Score</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">On-Time %</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Rating</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Incidents</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Routes</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  {driverPerformance.map((driver) => (\r\n                    <tr key={driver.driverId}>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"text-sm font-medium text-gray-900\">{driver.driverName}</div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          <div className=\"w-16 bg-gray-200 rounded-full h-2 mr-2\">\r\n                            <div \r\n                              className=\"bg-green-600 h-2 rounded-full\" \r\n                              style={{ width: `${driver.safetyScore}%` }}\r\n                            ></div>\r\n                          </div>\r\n                          <span className=\"text-sm text-gray-900\">{driver.safetyScore}%</span>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {driver.onTimePercentage}%\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <div className=\"flex items-center\">\r\n                          <Star className=\"w-4 h-4 text-yellow-400 fill-current\" />\r\n                          <span className=\"ml-1 text-sm text-gray-900\">{driver.customerRating}</span>\r\n                        </div>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\r\n                        {driver.incidentCount}\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(driver.status)}`}>\r\n                          {driver.status}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">\r\n                        {driver.routes.join(', ')}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'feedback' && (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"bg-white rounded-lg shadow\">\r\n              <div className=\"px-6 py-4 border-b border-gray-200\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Customer Feedback</h3>\r\n                  <select\r\n                    value={filterStatus}\r\n                    onChange={(e) => setFilterStatus(e.target.value)}\r\n                    className=\"border border-gray-300 rounded-lg px-3 py-2 text-sm\"\r\n                  >\r\n                    <option value=\"all\">All Status</option>\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"in_progress\">In Progress</option>\r\n                    <option value=\"resolved\">Resolved</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"divide-y divide-gray-200\">\r\n                {customerFeedback\r\n                  .filter(feedback => filterStatus === 'all' || feedback.status === filterStatus)\r\n                  .map((feedback) => (\r\n                    <div key={feedback.id} className=\"p-6\">\r\n                      <div className=\"flex items-start justify-between\">\r\n                        <div className=\"flex-1\">\r\n                          <div className=\"flex items-center space-x-2 mb-2\">\r\n                            <h4 className=\"text-sm font-medium text-gray-900\">{feedback.routeName}</h4>\r\n                            <div className=\"flex items-center\">\r\n                              {[...Array(5)].map((_, i) => (\r\n                                <Star\r\n                                  key={i}\r\n                                  className={`w-4 h-4 ${\r\n                                    i < feedback.rating ? 'text-yellow-400 fill-current' : 'text-gray-300'\r\n                                  }`}\r\n                                />\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                          <p className=\"text-sm text-gray-600 mb-2\">{feedback.comment}</p>\r\n                          <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\r\n                            <span className=\"capitalize\">{feedback.category}</span>\r\n                            <span>•</span>\r\n                            <span>{new Date(feedback.createdAt).toLocaleDateString()}</span>\r\n                            {feedback.responseTime && (\r\n                              <>\r\n                                <span>•</span>\r\n                                <span>Resolved in {feedback.responseTime} days</span>\r\n                              </>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                        <span className={`inline-flex px-2 py-1 text-xs font-semibold rounded-full ${getStatusColor(feedback.status)}`}>\r\n                          {feedback.status}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'fleet' && fleetStatus && (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Fleet Overview</h3>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm text-gray-600\">Total Vehicles</span>\r\n                    <span className=\"text-lg font-semibold\">{fleetStatus.totalVehicles}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm text-gray-600\">Active Vehicles</span>\r\n                    <span className=\"text-lg font-semibold text-green-600\">{fleetStatus.activeVehicles}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm text-gray-600\">Maintenance Due</span>\r\n                    <span className=\"text-lg font-semibold text-yellow-600\">{fleetStatus.maintenanceDue}</span>\r\n                  </div>\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <span className=\"text-sm text-gray-600\">Average Age</span>\r\n                    <span className=\"text-lg font-semibold\">{fleetStatus.averageAge} years</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"bg-white p-6 rounded-lg shadow\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Utilization Rate</h3>\r\n                <div className=\"text-center\">\r\n                  <div className=\"relative w-32 h-32 mx-auto mb-4\">\r\n                    <svg className=\"w-32 h-32 transform -rotate-90\" viewBox=\"0 0 36 36\">\r\n                      <path\r\n                        className=\"text-gray-200\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"3\"\r\n                        fill=\"none\"\r\n                        d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                      />\r\n                      <path\r\n                        className=\"text-blue-600\"\r\n                        stroke=\"currentColor\"\r\n                        strokeWidth=\"3\"\r\n                        fill=\"none\"\r\n                        strokeDasharray={`${fleetStatus.utilizationRate}, 100`}\r\n                        d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\r\n                      />\r\n                    </svg>\r\n                    <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                      <span className=\"text-2xl font-bold text-gray-900\">{fleetStatus.utilizationRate}%</span>\r\n                    </div>\r\n                  </div>\r\n                  <p className=\"text-sm text-gray-600\">Fleet Utilization</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["SaccoDashboard","activeTab","setActiveTab","useState","loading","setLoading","routePerformance","setRoutePerformance","driverPerformance","setDriverPerformance","customerFeedback","setCustomerFeedback","fleetStatus","setFleetStatus","dateRange","setDateRange","filterStatus","setFilterStatus","useEffect","loadDashboardData","routesResponse","apiService","performanceData","route","error","getStatusColor","status","getTrendIcon","trend","jsx","TrendingUp","Activity","jsxs","RefreshCw","e","BarChart3","MapPin","Users","MessageSquare","tab","d","DollarSign","sum","Star","driver","feedback","_","i","Fragment"],"mappings":"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"}