{"version":3,"file":"Profile-CbRIeswA.js","sources":["../../src/screens/Profile.tsx"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { \r\n  User, \r\n  History, \r\n  Heart, \r\n  BarChart3, \r\n  Edit3, \r\n  Save, \r\n  X,\r\n  MapPin,\r\n  Clock,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Star,\r\n  RefreshCw\r\n} from 'lucide-react'\r\nimport { useApp } from '../contexts/AppContext'\r\nimport apiService from '../services/api'\r\nimport { Route, PopulatedReport } from '../types'\r\nimport { useTranslation } from '../hooks/useTranslation'\r\n\r\nexport default function Profile() {\r\n  const { t } = useTranslation()\r\n  const { state, setUser } = useApp()\r\n  const [activeTab, setActiveTab] = useState<'profile' | 'reports' | 'favorites' | 'analytics'>('profile')\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [success, setSuccess] = useState(false)\r\n  \r\n  // Profile editing state\r\n  const [profileData, setProfileData] = useState({\r\n    displayName: state.user?.displayName || '',\r\n    email: state.user?.email || ''\r\n  })\r\n  const [uploading, setUploading] = useState(false)\r\n  const [avatarUrl, setAvatarUrl] = useState<string | null>(state.user?.avatarUrl || null)\r\n\r\n  // Sync avatar URL when user state changes\r\n  useEffect(() => {\r\n    if (state.user?.avatarUrl) {\r\n      setAvatarUrl(state.user.avatarUrl)\r\n    }\r\n  }, [state.user?.avatarUrl])\r\n  \r\n  // Reports state\r\n  const [reports, setReports] = useState<PopulatedReport[]>([])\r\n  const [reportsLoading, setReportsLoading] = useState(false)\r\n  \r\n  // Favorites state\r\n  const [favoriteRoutes, setFavoriteRoutes] = useState<Route[]>([])\r\n  const [favoritesLoading, setFavoritesLoading] = useState(false)\r\n  const favoritesLoadingRef = useRef(false)\r\n  \r\n  // Analytics state\r\n  const [analytics, setAnalytics] = useState({\r\n    totalReports: 0,\r\n    reportsThisMonth: 0,\r\n    favoriteRoutesCount: 0,\r\n    averageRating: 0,\r\n    mostReportedRoute: null as string | null\r\n  })\r\n\r\n  // Load user reports\r\n  const loadReports = useCallback(async () => {\r\n    if (!state.user) return\r\n    \r\n    setReportsLoading(true)\r\n    try {\r\n      console.log('Loading reports for user:', state.user._id)\r\n      const response = await apiService.getUserReports(state.user._id)\r\n      console.log('Reports response:', response)\r\n      if (response.success && response.data) {\r\n        console.log('Reports data:', response.data.reports)\r\n        setReports((response.data.reports || []) as PopulatedReport[])\r\n      } else {\r\n        console.log('Reports response failed:', response)\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading reports:', error)\r\n    } finally {\r\n      setReportsLoading(false)\r\n    }\r\n  }, [state.user?._id])\r\n\r\n  // Load favorite routes\r\n  const loadFavorites = useCallback(async () => {\r\n    if (!state.user) return\r\n    \r\n    // Prevent multiple simultaneous calls using ref\r\n    if (favoritesLoadingRef.current) {\r\n      console.log('Favorites already loading, skipping...')\r\n      return\r\n    }\r\n    \r\n    console.log('Setting favorites loading to true')\r\n    favoritesLoadingRef.current = true\r\n    setFavoritesLoading(true)\r\n    try {\r\n      console.log('Loading favorites for user:', state.user._id)\r\n      const response = await apiService.getFavoriteRoutes(state.user._id)\r\n      console.log('Favorites response:', response)\r\n      if (response.success && response.data) {\r\n        console.log('Favorites data:', response.data.routes)\r\n        setFavoriteRoutes(response.data.routes || [])\r\n      } else {\r\n        console.log('Favorites response failed:', response)\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading favorites:', error)\r\n    } finally {\r\n      console.log('Setting favorites loading to false')\r\n      favoritesLoadingRef.current = false\r\n      setFavoritesLoading(false)\r\n    }\r\n  }, [state.user?._id])\r\n\r\n  // Load analytics\r\n  const loadAnalytics = useCallback(async () => {\r\n    if (!state.user) return\r\n    \r\n    try {\r\n      console.log('Loading analytics for user:', state.user._id)\r\n      const response = await apiService.getUserAnalytics(state.user._id)\r\n      console.log('Analytics response:', response)\r\n      if (response.success && response.data) {\r\n        console.log('Analytics data:', response.data)\r\n        setAnalytics(response.data)\r\n      } else {\r\n        console.log('Analytics response failed:', response)\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading analytics:', error)\r\n    }\r\n  }, [state.user?._id])\r\n\r\n  // Remove favorite route\r\n  const removeFavorite = useCallback(async (routeId: string) => {\r\n    if (!state.user) return\r\n    \r\n    try {\r\n      const response = await apiService.removeFavoriteRoute(state.user._id, routeId)\r\n      if (response.success) {\r\n        // Refresh favorites list\r\n        loadFavorites()\r\n      }\r\n    } catch (error) {\r\n      console.error('Error removing favorite:', error)\r\n    }\r\n  }, [state.user?._id]) // Remove loadFavorites from dependencies\r\n\r\n  // Load profile photo from database\r\n  const loadProfilePhoto = useCallback(async () => {\r\n    if (!state.user) {\r\n      console.log('No user found, skipping photo load')\r\n      return\r\n    }\r\n    \r\n    try {\r\n      console.log('Loading profile photo for user:', state.user._id)\r\n      const response = await apiService.getUserPhoto(state.user._id)\r\n      console.log('Photo API response:', response)\r\n      \r\n      if (response.success && response.data) {\r\n        console.log('Profile photo loaded successfully:', response.data.url.substring(0, 50) + '...')\r\n        setAvatarUrl(response.data.url)\r\n        // Update the user state with the photo URL\r\n        setUser({ ...(state.user as any), avatarUrl: response.data.url })\r\n      } else {\r\n        console.log('No profile photo found in response:', response)\r\n        // Don't use blob URLs from user state as they're temporary\r\n        if (state.user.avatarUrl && !state.user.avatarUrl.startsWith('blob:')) {\r\n          console.log('Using existing avatarUrl from user state:', state.user.avatarUrl.substring(0, 50) + '...')\r\n          setAvatarUrl(state.user.avatarUrl)\r\n        } else {\r\n          console.log('No valid avatarUrl found, using default avatar')\r\n          setAvatarUrl('')\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log('Error loading profile photo:', error)\r\n      // Don't use blob URLs as fallback since they're temporary\r\n      if (state.user.avatarUrl && !state.user.avatarUrl.startsWith('blob:')) {\r\n        console.log('Using fallback avatarUrl from user state:', state.user.avatarUrl.substring(0, 50) + '...')\r\n        setAvatarUrl(state.user.avatarUrl)\r\n      } else {\r\n        console.log('No valid fallback avatarUrl, using default avatar')\r\n        setAvatarUrl('')\r\n      }\r\n    }\r\n  }, [state.user?._id, setUser]) // Only depend on user ID\r\n\r\n  // Load data when component mounts or user changes\r\n  useEffect(() => {\r\n    if (state.user) {\r\n      loadProfilePhoto()\r\n      loadReports()\r\n      loadFavorites()\r\n      loadAnalytics()\r\n    }\r\n  }, [state.user?._id]) // Only depend on user ID, not the entire user object\r\n\r\n  // Load data when active tab changes\r\n  useEffect(() => {\r\n    if (state.user) {\r\n      switch (activeTab) {\r\n        case 'reports':\r\n          loadReports()\r\n          break\r\n        case 'favorites':\r\n          loadFavorites()\r\n          break\r\n        case 'analytics':\r\n          loadAnalytics()\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n  }, [activeTab, state.user?._id]) // Only depend on activeTab and user ID\r\n\r\n  // Handle profile update\r\n  const handleProfileUpdate = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (!state.user) return\r\n\r\n    setIsLoading(true)\r\n    setError(null)\r\n    setSuccess(false)\r\n\r\n    try {\r\n      const response = await apiService.updateProfile(state.user._id, profileData)\r\n      if (response.success && response.data) {\r\n        setUser(response.data.user)\r\n        setSuccess(true)\r\n        setIsEditing(false)\r\n        setTimeout(() => setSuccess(false), 3000)\r\n      } else {\r\n        setError(t('profile.updateError'))\r\n      }\r\n    } catch (error) {\r\n      console.error('Profile update error:', error)\r\n      setError(t('profile.updateError'))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handlePhotoChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!e.target.files || e.target.files.length === 0) return\r\n    const file = e.target.files[0]\r\n    try {\r\n      setUploading(true)\r\n      \r\n      // Upload the file to the backend\r\n      const resp = await apiService.uploadFile(file, 'profile')\r\n      console.log('Upload response:', resp)\r\n      \r\n      if ((resp as any)?.success && (resp as any)?.data?.url) {\r\n        const url = (resp as any).data.url\r\n        console.log('Photo uploaded successfully, URL:', url.substring(0, 50) + '...')\r\n        \r\n        // Set the uploaded photo URL\r\n        setAvatarUrl(url)\r\n        \r\n        // Update user profile with the uploaded photo URL\r\n        await apiService.updateProfile(state.user!._id, { \r\n          displayName: state.user!.displayName, \r\n          email: state.user!.email, \r\n          avatarUrl: url \r\n        })\r\n        \r\n        // Update user state with the uploaded photo URL\r\n        setUser({ ...(state.user as any), avatarUrl: url })\r\n        \r\n        console.log('Profile updated with uploaded photo URL')\r\n      } else {\r\n        console.error('Upload failed or invalid response:', resp)\r\n        alert('Failed to upload photo. Please try again.')\r\n      }\r\n    } catch (err) {\r\n      console.error('Photo upload failed:', err)\r\n      alert('Failed to upload photo. Please try again.')\r\n    } finally {\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  // Add a simple URL input method as an alternative\r\n  const handleAvatarUrlChange = async (url: string) => {\r\n    try {\r\n      setUploading(true)\r\n      setAvatarUrl(url)\r\n      // Update profile with the new avatar URL\r\n      await apiService.updateProfile(state.user!._id, { displayName: state.user!.displayName, email: state.user!.email, avatarUrl: url })\r\n      setUser({ ...(state.user as any), avatarUrl: url })\r\n    } catch (err) {\r\n      console.error('Avatar URL update failed', err)\r\n    } finally {\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  // Handle input change\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setProfileData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }))\r\n  }\r\n\r\n\r\n  // Format date\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-KE', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    })\r\n  }\r\n\r\n  // Get severity color\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case 'low': return 'text-green-600 bg-green-100'\r\n      case 'medium': return 'text-yellow-600 bg-yellow-100'\r\n      case 'high': return 'text-red-600 bg-red-100'\r\n      default: return 'text-gray-600 bg-gray-100'\r\n    }\r\n  }\r\n\r\n  if (!state.user) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <User className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">{t('profile.pleaseLogin')}</h2>\r\n          <p className=\"text-gray-600 mb-4\">{t('profile.loginRequired')}</p>\r\n          <Link to=\"/login\" className=\"btn btn-primary\">\r\n            {t('profile.goToLogin')}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"px-6 py-8\">\r\n        {/* Header */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"w-16 h-16 rounded-full overflow-hidden bg-primary-500 flex items-center justify-center\">\r\n              {avatarUrl ? (\r\n                <img src={avatarUrl} alt=\"Avatar\" className=\"w-16 h-16 object-cover\" />\r\n              ) : (\r\n                <User className=\"w-8 h-8 text-white\" />\r\n              )}\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">{state.user.displayName}</h1>\r\n              <p className=\"text-gray-600\">{state.user.email}</p>\r\n              <p className=\"text-sm text-gray-500 capitalize\">{t('profile.role')}: {t(`roles.${state.user.role}`)}</p>\r\n            </div>\r\n            <button\r\n              onClick={() => setIsEditing(!isEditing)}\r\n              className=\"btn btn-ghost btn-sm\"\r\n            >\r\n              <Edit3 className=\"w-4 h-4 mr-2\" />\r\n              {isEditing ? t('common.cancel') : t('profile.personalInfo.editProfile')}\r\n            </button>\r\n            <div className=\"ml-4 flex flex-col space-y-2\">\r\n              <label className=\"btn btn-outline btn-sm cursor-pointer\">\r\n                {uploading ? t('profile.personalInfo.uploading') : t('profile.personalInfo.uploadPhoto')}\r\n                <input type=\"file\" accept=\"image/*\" className=\"hidden\" onChange={handlePhotoChange} />\r\n              </label>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <input\r\n                  type=\"url\"\r\n                  placeholder={t('profile.personalInfo.orEnterImageUrl')}\r\n                  className=\"px-2 py-1 text-xs border rounded w-48\"\r\n                  onKeyPress={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                      const target = e.target as HTMLInputElement;\r\n                      if (target.value) {\r\n                        handleAvatarUrlChange(target.value);\r\n                        target.value = '';\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n                <button\r\n                  onClick={(e) => {\r\n                    const input = e.currentTarget.previousElementSibling as HTMLInputElement;\r\n                    if (input?.value) {\r\n                      handleAvatarUrlChange(input.value);\r\n                      input.value = '';\r\n                    }\r\n                  }}\r\n                  className=\"btn btn-ghost btn-xs\"\r\n                  disabled={uploading}\r\n                >\r\n{t('profile.personalInfo.set')}\r\n                </button>\r\n                    <button\r\n                      onClick={async () => {\r\n                        if (!state.user) return\r\n                        try {\r\n                          const response = await apiService.deleteUserPhoto(state.user._id)\r\n                          if (response.success) {\r\n                            setAvatarUrl('')\r\n                            setUser({ ...(state.user as any), avatarUrl: '' })\r\n                            alert('Profile photo deleted successfully')\r\n                          }\r\n                        } catch (error) {\r\n                          console.error('Error deleting photo:', error)\r\n                          alert('Failed to delete photo')\r\n                        }\r\n                      }}\r\n                      className=\"px-3 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700\"\r\n                    >\r\n{t('profile.personalInfo.deletePhoto')}\r\n                    </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 mb-6\">\r\n          <div className=\"border-b border-gray-200\">\r\n            <nav className=\"flex space-x-8 px-6\">\r\n              {[\r\n                { id: 'profile', name: t('profile.tabs.personal'), icon: User },\r\n                { id: 'reports', name: t('profile.tabs.reports'), icon: History },\r\n                { id: 'favorites', name: t('profile.tabs.favorites'), icon: Heart },\r\n                { id: 'analytics', name: t('profile.tabs.analytics'), icon: BarChart3 }\r\n              ].map((tab) => {\r\n                const Icon = tab.icon\r\n                return (\r\n                  <button\r\n                    key={tab.id}\r\n                    onClick={() => setActiveTab(tab.id as any)}\r\n                    className={`py-4 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\r\n                      activeTab === tab.id\r\n                        ? 'border-primary-500 text-primary-600'\r\n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                    }`}\r\n                  >\r\n                    <Icon className=\"w-4 h-4\" />\r\n                    <span>{tab.name}</span>\r\n                  </button>\r\n                )\r\n              })}\r\n            </nav>\r\n          </div>\r\n\r\n          <div className=\"p-6\">\r\n            {/* Profile Tab */}\r\n            {activeTab === 'profile' && (\r\n              <div>\r\n                {isEditing ? (\r\n                  <form onSubmit={handleProfileUpdate} className=\"space-y-4\">\r\n                    {error && (\r\n                      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n                        <div className=\"flex items-center\">\r\n                          <AlertTriangle className=\"h-5 w-5 text-red-400 mr-2\" />\r\n                          <p className=\"text-sm text-red-800\">{error}</p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    \r\n                    {success && (\r\n                      <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n                        <div className=\"flex items-center\">\r\n                          <CheckCircle className=\"h-5 w-5 text-green-400 mr-2\" />\r\n                          <p className=\"text-sm text-green-800\">Profile updated successfully!</p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div>\r\n                      <label htmlFor=\"displayName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        {t('profile.personalInfo.displayName')}\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"displayName\"\r\n                        name=\"displayName\"\r\n                        value={profileData.displayName}\r\n                        onChange={handleInputChange}\r\n                        className=\"input w-full\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        {t('profile.personalInfo.email')}\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={profileData.email}\r\n                        onChange={handleInputChange}\r\n                        className=\"input w-full\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"flex space-x-3\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={isLoading}\r\n                        className=\"btn btn-primary\"\r\n                      >\r\n                        {isLoading ? (\r\n                          <>\r\n                            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                            Saving...\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <Save className=\"w-4 h-4 mr-2\" />\r\n                            Save Changes\r\n                          </>\r\n                        )}\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => setIsEditing(false)}\r\n                        className=\"btn btn-ghost\"\r\n                      >\r\n                        <X className=\"w-4 h-4 mr-2\" />\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                ) : (\r\n                  <div className=\"space-y-6\">\r\n                    <div>\r\n                      <h3 className=\"text-lg font-medium text-gray-900 mb-4\">{t('profile.accountInformation')}</h3>\r\n                      <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">{t('profile.personalInfo.displayName')}</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900\">{state.user.displayName}</dd>\r\n                        </div>\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">{t('profile.personalInfo.email')}</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900\">{state.user.email}</dd>\r\n                        </div>\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">{t('profile.accountType')}</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900 capitalize\">{t(`roles.${state.user.role}`)}</dd>\r\n                        </div>\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">{t('profile.memberSince')}</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900\">\r\n                            {new Date(state.user.createdAt || Date.now()).toLocaleDateString('en-KE')}\r\n                          </dd>\r\n                        </div>\r\n                      </dl>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Reports Tab */}\r\n            {activeTab === 'reports' && (\r\n              <div>\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h3 className=\"text-lg font-medium text-gray-900\">{t('profile.myTripReports')}</h3>\r\n                  <button\r\n                    onClick={loadReports}\r\n                    disabled={reportsLoading}\r\n                    className=\"flex items-center space-x-2 px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 disabled:opacity-50\"\r\n                  >\r\n                    <RefreshCw className={`w-4 h-4 ${reportsLoading ? 'animate-spin' : ''}`} />\r\n                    <span>{t('profile.refresh')}</span>\r\n                  </button>\r\n                </div>\r\n                {reportsLoading ? (\r\n                  <div className=\"flex items-center justify-center py-8\">\r\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-500\"></div>\r\n                  </div>\r\n                ) : reports.length === 0 ? (\r\n                  <div className=\"text-center py-8\">\r\n                    <History className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n                    <p className=\"text-gray-500 mb-4\">{t('profile.noReportsYet')}</p>\r\n                    <Link to=\"/report\" className=\"btn btn-primary\">\r\n                      {t('profile.submitFirstReport')}\r\n                    </Link>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"space-y-4\">\r\n                    {reports.map((report) => (\r\n                      <div key={report._id} className=\"border border-gray-200 rounded-lg p-4\">\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"flex items-center justify-between mb-2\">\r\n                              <span className={`px-2 py-1 text-xs rounded-full ${\r\n                                report.status === 'resolved' ? 'bg-green-100 text-green-800' :\r\n                                report.status === 'pending' ? 'bg-yellow-100 text-yellow-800' :\r\n                                'bg-gray-100 text-gray-800'\r\n                              }`}>\r\n                                {report.status}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"flex items-center space-x-2 mb-2\">\r\n                              <MapPin className=\"w-4 h-4 text-gray-400\" />\r\n                              <span className=\"text-sm font-medium text-gray-900\">\r\n                                {typeof report.routeId === 'object' && report.routeId?.name \r\n                                  ? `${report.routeId.name} (${report.routeId.routeNumber})` \r\n                                  : `Route ${report.routeId}`}\r\n                              </span>\r\n                              <span className={`px-2 py-1 text-xs rounded-full ${getSeverityColor(report.severity)}`}>\r\n                                {report.severity}\r\n                              </span>\r\n                            </div>\r\n                            <p className=\"text-sm text-gray-600 mb-2\">{report.description}</p>\r\n                            <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\r\n                              <div className=\"flex items-center\">\r\n                                <Clock className=\"w-3 h-3 mr-1\" />\r\n                                {formatDate(report.createdAt)}\r\n                              </div>\r\n                              <span className=\"capitalize\">Type: {report.reportType}</span>\r\n                              {typeof report.routeId === 'object' && report.routeId?.operator && (\r\n                                <span className=\"text-blue-600\">Operator: {report.routeId.operator}</span>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Favorites Tab */}\r\n            {activeTab === 'favorites' && (\r\n              <div>\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h3 className=\"text-lg font-medium text-gray-900\">{t('profile.ratedRoutes')}</h3>\r\n                  <button\r\n                    onClick={loadFavorites}\r\n                    disabled={favoritesLoading}\r\n                    className=\"flex items-center space-x-2 px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 disabled:opacity-50\"\r\n                  >\r\n                    <RefreshCw className={`w-4 h-4 ${favoritesLoading ? 'animate-spin' : ''}`} />\r\n                    <span>{t('profile.refresh')}</span>\r\n                  </button>\r\n                </div>\r\n                {favoritesLoading ? (\r\n                  <div className=\"flex items-center justify-center py-8\">\r\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-500\"></div>\r\n                  </div>\r\n                ) : favoriteRoutes.length === 0 ? (\r\n                  <div className=\"text-center py-8\">\r\n                    <Heart className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n                    <p className=\"text-gray-500 mb-4\">{t('profile.noRatedRoutes')}</p>\r\n                    <div className=\"space-y-4\">\r\n                      <div className=\"flex items-center space-x-2 justify-center\">\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Enter Route ID to rate\"\r\n                          className=\"px-3 py-2 border rounded-lg w-64\"\r\n                          id=\"routeIdInput\"\r\n                        />\r\n                        <button\r\n                          onClick={async () => {\r\n                            const input = document.getElementById('routeIdInput') as HTMLInputElement;\r\n                            const routeId = input?.value?.trim();\r\n                            if (routeId && state.user) {\r\n                              try {\r\n                                const response = await apiService.addFavoriteRoute(state.user._id, routeId);\r\n                                if (response.success) {\r\n                                  loadFavorites();\r\n                                  input.value = '';\r\n                                }\r\n                              } catch (error) {\r\n                                console.error('Error adding favorite:', error);\r\n                              }\r\n                            }\r\n                          }}\r\n                          className=\"btn btn-primary btn-sm\"\r\n                        >\r\n                          Rate\r\n                        </button>\r\n                      </div>\r\n                      <Link to=\"/map\" className=\"btn btn-primary\">\r\n                        {t('profile.exploreRoutes')}\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"space-y-4\">\r\n                    {favoriteRoutes.map((route) => (\r\n                      <div key={route._id} className=\"border border-gray-200 rounded-lg p-4\">\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"flex items-center space-x-2 mb-1\">\r\n                              <h4 className=\"text-sm font-medium text-gray-900\">{route.name}</h4>\r\n                              <span className=\"px-2 py-1 text-xs bg-yellow-100 text-yellow-800 rounded-full\">\r\n{t('profile.personalInfo.rated')}\r\n                              </span>\r\n                            </div>\r\n                            <p className=\"text-sm text-gray-600\">{route.operator}</p>\r\n                            <p className=\"text-xs text-gray-500\">Route {route.routeNumber}</p>\r\n                            <div className=\"flex items-center space-x-1 mt-2\">\r\n                              <Star className=\"w-4 h-4 text-yellow-400 fill-current\" />\r\n                              <span className=\"text-sm text-gray-600\">{t('profile.personalInfo.youRatedThisRoute')}</span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <Link\r\n                              to={`/map?route=${route._id}`}\r\n                              className=\"btn btn-ghost btn-sm\"\r\n                            >\r\n{t('profile.personalInfo.view')}\r\n                            </Link>\r\n                            <button\r\n                              onClick={() => removeFavorite(route._id)}\r\n                              className=\"btn btn-ghost btn-sm text-red-600 hover:text-red-700\"\r\n                            >\r\n                              <X className=\"w-4 h-4\" />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Analytics Tab */}\r\n            {activeTab === 'analytics' && (\r\n              <div>\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h3 className=\"text-lg font-medium text-gray-900\">{t('profile.yourAnalytics')}</h3>\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <button\r\n                      onClick={loadAnalytics}\r\n                      className=\"flex items-center space-x-2 px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200\"\r\n                    >\r\n                      <RefreshCw className=\"w-4 h-4\" />\r\n                      <span>{t('profile.refresh')}</span>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n                  <div className=\"bg-blue-50 rounded-lg p-4\">\r\n                    <div className=\"flex items-center\">\r\n                      <History className=\"w-8 h-8 text-blue-600\" />\r\n                      <div className=\"ml-3\">\r\n                        <p className=\"text-sm font-medium text-blue-600\">{t('profile.totalReports')}</p>\r\n                        <p className=\"text-2xl font-bold text-blue-900\">{analytics.totalReports}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bg-green-50 rounded-lg p-4\">\r\n                    <div className=\"flex items-center\">\r\n                      <Clock className=\"w-8 h-8 text-green-600\" />\r\n                      <div className=\"ml-3\">\r\n                        <p className=\"text-sm font-medium text-green-600\">{t('profile.thisMonth')}</p>\r\n                        <p className=\"text-2xl font-bold text-green-900\">{analytics.reportsThisMonth}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bg-purple-50 rounded-lg p-4\">\r\n                    <div className=\"flex items-center\">\r\n                      <Heart className=\"w-8 h-8 text-purple-600\" />\r\n                      <div className=\"ml-3\">\r\n                        <p className=\"text-sm font-medium text-purple-600\">{t('profile.favorites')}</p>\r\n                        <p className=\"text-2xl font-bold text-purple-900\">{analytics.favoriteRoutesCount}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bg-yellow-50 rounded-lg p-4\">\r\n                    <div className=\"flex items-center\">\r\n                      <Star className=\"w-8 h-8 text-yellow-600\" />\r\n                      <div className=\"ml-3\">\r\n                        <p className=\"text-sm font-medium text-yellow-600\">{t('profile.avgRating')}</p>\r\n                        <p className=\"text-2xl font-bold text-yellow-900\">{analytics.averageRating.toFixed(1)}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {analytics.mostReportedRoute && (\r\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                    <h4 className=\"text-sm font-medium text-gray-900 mb-2\">{t('profile.personalInfo.mostReportedRoute')}</h4>\r\n                    <p className=\"text-sm text-gray-600\">{analytics.mostReportedRoute}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["Profile","useTranslation","state","setUser","useApp","activeTab","setActiveTab","useState","isEditing","setIsEditing","isLoading","setIsLoading","error","setError","success","setSuccess","profileData","setProfileData","_a","_b","uploading","setUploading","avatarUrl","setAvatarUrl","_c","useEffect","_d","reports","setReports","reportsLoading","setReportsLoading","favoriteRoutes","setFavoriteRoutes","favoritesLoading","setFavoritesLoading","favoritesLoadingRef","useRef","analytics","setAnalytics","loadReports","useCallback","response","apiService","_e","loadFavorites","_f","loadAnalytics","_g","removeFavorite","routeId","_h","loadProfilePhoto","_i","_j","_k","handleProfileUpdate","e","handlePhotoChange","file","resp","url","err","handleAvatarUrlChange","handleInputChange","name","value","prev","formatDate","dateString","getSeverityColor","severity","jsxs","jsx","User","Edit3","target","input","History","Heart","BarChart3","tab","Icon","AlertTriangle","CheckCircle","Fragment","Save","X","RefreshCw","Link","report","MapPin","Clock","route","Star"],"mappings":"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"}