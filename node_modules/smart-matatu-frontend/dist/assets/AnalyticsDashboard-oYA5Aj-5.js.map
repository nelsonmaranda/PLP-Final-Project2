{"version":3,"file":"AnalyticsDashboard-oYA5Aj-5.js","sources":["../../src/screens/AnalyticsDashboard.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react'\r\nimport { \r\n  TrendingUp, \r\n  Clock, \r\n  Target, \r\n  AlertTriangle,\r\n  CheckCircle,\r\n  ArrowUp,\r\n  ArrowDown,\r\n  Minus,\r\n  Loader2,\r\n  RefreshCw,\r\n  Filter,\r\n  Calendar,\r\n  Zap,\r\n  DollarSign,\r\n  Star\r\n} from 'lucide-react'\r\nimport { useApp } from '../contexts/AppContext'\r\nimport apiService from '../services/api'\r\nimport { \r\n  RouteEfficiencyScore, \r\n  TravelTimePrediction, \r\n  AlternativeRoute, \r\n  TrendAnalysis, \r\n  DemandForecast, \r\n  UserRecommendation \r\n} from '../types'\r\n\r\nexport default function AnalyticsDashboard() {\r\n  const { state } = useApp()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [activeTab, setActiveTab] = useState<'efficiency' | 'predictions' | 'trends' | 'recommendations'>('efficiency')\r\n  \r\n  // Data states\r\n  const [efficiencyScores, setEfficiencyScores] = useState<RouteEfficiencyScore[]>([])\r\n  const [travelPredictions, setTravelPredictions] = useState<TravelTimePrediction[]>([])\r\n  const [alternativeRoutes, setAlternativeRoutes] = useState<AlternativeRoute[]>([])\r\n  const [trendAnalysis, setTrendAnalysis] = useState<TrendAnalysis[]>([])\r\n  const [demandForecasts, setDemandForecasts] = useState<DemandForecast[]>([])\r\n  const [userRecommendations, setUserRecommendations] = useState<UserRecommendation | null>(null)\r\n\r\n  // Filter states\r\n  const [selectedRoute, setSelectedRoute] = useState<string>('')\r\n  const [timeSlot, setTimeSlot] = useState<string>('08:00')\r\n  const [period, setPeriod] = useState<'daily' | 'weekly' | 'monthly'>('weekly')\r\n\r\n  const loadAnalyticsData = useCallback(async () => {\r\n    if (!state.user?._id) {\r\n      setError('User not authenticated.')\r\n      setIsLoading(false)\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    setError(null)\r\n\r\n    try {\r\n      // Load all analytics data in parallel\r\n      const [\r\n        recommendationsResponse,\r\n        // Add more parallel calls as needed\r\n      ] = await Promise.all([\r\n        apiService.getUserRecommendations(state.user._id),\r\n        // Add more API calls here\r\n      ])\r\n\r\n      // Set user recommendations\r\n      if (recommendationsResponse.success && recommendationsResponse.data) {\r\n        setUserRecommendations(recommendationsResponse.data)\r\n      }\r\n\r\n      // Mock data for demonstration (replace with real API calls)\r\n      setEfficiencyScores([\r\n        {\r\n          routeId: '1',\r\n          routeName: 'Route 46 - CBD to Westlands',\r\n          efficiencyScore: 85,\r\n          factors: {\r\n            reliability: 80,\r\n            speed: 75,\r\n            safety: 90,\r\n            comfort: 85,\r\n            cost: 70,\r\n            frequency: 95\r\n          },\r\n          recommendations: ['Increase frequency during peak hours', 'Improve vehicle comfort'],\r\n          lastUpdated: new Date().toISOString()\r\n        },\r\n        {\r\n          routeId: '2',\r\n          routeName: 'Route 34 - Eastleigh to CBD',\r\n          efficiencyScore: 72,\r\n          factors: {\r\n            reliability: 65,\r\n            speed: 80,\r\n            safety: 75,\r\n            comfort: 70,\r\n            cost: 85,\r\n            frequency: 60\r\n          },\r\n          recommendations: ['Improve on-time performance', 'Address safety concerns'],\r\n          lastUpdated: new Date().toISOString()\r\n        }\r\n      ])\r\n\r\n      setTravelPredictions([\r\n        {\r\n          routeId: '1',\r\n          fromStop: 'Kencom',\r\n          toStop: 'Westlands',\r\n          predictedTime: 25,\r\n          confidence: 85,\r\n          factors: {\r\n            timeOfDay: 1.2,\r\n            dayOfWeek: 1.0,\r\n            weather: 1.1,\r\n            traffic: 1.3,\r\n            historical: 0.9\r\n          },\r\n          alternativeTimes: {\r\n            optimistic: 20,\r\n            realistic: 25,\r\n            pessimistic: 32\r\n          },\r\n          lastUpdated: new Date().toISOString()\r\n        }\r\n      ])\r\n\r\n      setAlternativeRoutes([\r\n        {\r\n          routeId: '2',\r\n          routeName: 'Route 34 - Alternative Route',\r\n          totalTime: 30,\r\n          totalCost: 45,\r\n          efficiency: 78,\r\n          reasons: ['Affordable fare', 'Multiple stops available'],\r\n          stops: ['Kencom', 'Museum Hill', 'Eastleigh', 'Westlands']\r\n        }\r\n      ])\r\n\r\n      setTrendAnalysis([\r\n        {\r\n          routeId: '1',\r\n          period: 'weekly',\r\n          trends: {\r\n            ridership: {\r\n              current: 150,\r\n              previous: 120,\r\n              change: 25,\r\n              trend: 'increasing'\r\n            },\r\n            efficiency: {\r\n              current: 85,\r\n              previous: 80,\r\n              change: 6.25,\r\n              trend: 'improving'\r\n            },\r\n            safety: {\r\n              current: 2,\r\n              previous: 5,\r\n              change: -60,\r\n              trend: 'safer'\r\n            },\r\n            cost: {\r\n              current: 50,\r\n              previous: 50,\r\n              change: 0,\r\n              trend: 'stable'\r\n            }\r\n          },\r\n          insights: ['Ridership is increasing significantly', 'Safety incidents have decreased'],\r\n          lastUpdated: new Date().toISOString()\r\n        }\r\n      ])\r\n\r\n      setDemandForecasts([\r\n        {\r\n          routeId: '1',\r\n          timeSlot: '08:00',\r\n          predictedDemand: 85,\r\n          confidence: 80,\r\n          factors: {\r\n            historical: 75,\r\n            weather: 1.0,\r\n            events: 1.1,\r\n            seasonality: 1.0\r\n          },\r\n          recommendations: ['Consider increasing frequency during this time'],\r\n          lastUpdated: new Date().toISOString()\r\n        }\r\n      ])\r\n\r\n    } catch (error) {\r\n      console.error('Error loading analytics data:', error)\r\n      setError('Failed to load analytics data. Please try again.')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [state.user?._id])\r\n\r\n  useEffect(() => {\r\n    loadAnalyticsData()\r\n  }, [loadAnalyticsData])\r\n\r\n  const getTrendIcon = (trend: 'increasing' | 'decreasing' | 'stable' | 'improving' | 'declining' | 'safer' | 'riskier') => {\r\n    switch (trend) {\r\n      case 'increasing':\r\n      case 'improving':\r\n      case 'safer':\r\n        return <ArrowUp className=\"w-4 h-4 text-green-500\" />\r\n      case 'decreasing':\r\n      case 'declining':\r\n      case 'riskier':\r\n        return <ArrowDown className=\"w-4 h-4 text-red-500\" />\r\n      default:\r\n        return <Minus className=\"w-4 h-4 text-gray-500\" />\r\n    }\r\n  }\r\n\r\n  const getTrendColor = (trend: 'increasing' | 'decreasing' | 'stable' | 'improving' | 'declining' | 'safer' | 'riskier') => {\r\n    switch (trend) {\r\n      case 'increasing':\r\n      case 'improving':\r\n      case 'safer':\r\n        return 'text-green-600'\r\n      case 'decreasing':\r\n      case 'declining':\r\n      case 'riskier':\r\n        return 'text-red-600'\r\n      default:\r\n        return 'text-gray-600'\r\n    }\r\n  }\r\n\r\n  const getEfficiencyColor = (score: number) => {\r\n    if (score >= 80) return 'text-green-600'\r\n    if (score >= 60) return 'text-yellow-600'\r\n    return 'text-red-600'\r\n  }\r\n\r\n  const getEfficiencyBgColor = (score: number) => {\r\n    if (score >= 80) return 'bg-green-100'\r\n    if (score >= 60) return 'bg-yellow-100'\r\n    return 'bg-red-100'\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"text-center\">\r\n          <Loader2 className=\"h-10 w-10 text-primary-500 animate-spin\" />\r\n          <p className=\"text-gray-600 mt-4\">Loading Advanced Analytics...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"text-center p-6 bg-white rounded-lg shadow-md\">\r\n          <AlertTriangle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\r\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">Error Loading Analytics</h2>\r\n          <p className=\"text-gray-600 mb-4\">{error}</p>\r\n          <button \r\n            onClick={loadAnalyticsData} \r\n            className=\"btn btn-primary\"\r\n          >\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            Retry\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"px-6 py-8\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Advanced Analytics</h1>\r\n          <p className=\"text-gray-600\">Comprehensive insights and predictions for route optimization</p>\r\n        </div>\r\n\r\n        {/* Tab Navigation */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"border-b border-gray-200\">\r\n            <nav className=\"-mb-px flex space-x-8\">\r\n              {[\r\n                { id: 'efficiency', name: 'Route Efficiency', icon: Target },\r\n                { id: 'predictions', name: 'Travel Predictions', icon: Clock },\r\n                { id: 'trends', name: 'Trend Analysis', icon: TrendingUp },\r\n                { id: 'recommendations', name: 'Recommendations', icon: Star }\r\n              ].map((tab) => {\r\n                const Icon = tab.icon\r\n                return (\r\n                  <button\r\n                    key={tab.id}\r\n                    onClick={() => setActiveTab(tab.id as any)}\r\n                    className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\r\n                      activeTab === tab.id\r\n                        ? 'border-primary-500 text-primary-600'\r\n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                    }`}\r\n                  >\r\n                    <Icon className=\"w-4 h-4\" />\r\n                    <span>{tab.name}</span>\r\n                  </button>\r\n                )\r\n              })}\r\n            </nav>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tab Content */}\r\n        <div className=\"space-y-6\">\r\n          {/* Route Efficiency Tab */}\r\n          {activeTab === 'efficiency' && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h2 className=\"text-2xl font-bold text-gray-900\">Route Efficiency Scores</h2>\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <select\r\n                    value={selectedRoute}\r\n                    onChange={(e) => setSelectedRoute(e.target.value)}\r\n                    className=\"form-select\"\r\n                  >\r\n                    <option value=\"\">All Routes</option>\r\n                    <option value=\"1\">Route 46 - CBD to Westlands</option>\r\n                    <option value=\"2\">Route 34 - Eastleigh to CBD</option>\r\n                  </select>\r\n                  <button className=\"btn btn-outline\">\r\n                    <Filter className=\"w-4 h-4 mr-2\" />\r\n                    Filter\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {efficiencyScores.map((score) => (\r\n                  <div key={score.routeId} className=\"card p-6\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                      <h3 className=\"text-lg font-semibold text-gray-900\">{score.routeName}</h3>\r\n                      <div className={`px-3 py-1 rounded-full text-sm font-medium ${getEfficiencyBgColor(score.efficiencyScore)} ${getEfficiencyColor(score.efficiencyScore)}`}>\r\n                        {score.efficiencyScore}/100\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-4\">\r\n                      {/* Efficiency Factors */}\r\n                      <div className=\"grid grid-cols-2 gap-4\">\r\n                        {Object.entries(score.factors).map(([key, value]) => (\r\n                          <div key={key} className=\"flex items-center justify-between\">\r\n                            <span className=\"text-sm text-gray-600 capitalize\">{key}</span>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                              <div className=\"w-16 bg-gray-200 rounded-full h-2\">\r\n                                <div \r\n                                  className=\"bg-primary-500 h-2 rounded-full\" \r\n                                  style={{ width: `${value}%` }}\r\n                                ></div>\r\n                              </div>\r\n                              <span className=\"text-sm font-medium text-gray-900\">{value}</span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n\r\n                      {/* Recommendations */}\r\n                      {score.recommendations.length > 0 && (\r\n                        <div>\r\n                          <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Recommendations</h4>\r\n                          <ul className=\"space-y-1\">\r\n                            {score.recommendations.map((rec, index) => (\r\n                              <li key={index} className=\"flex items-start space-x-2 text-sm text-gray-600\">\r\n                                <CheckCircle className=\"w-4 h-4 text-green-500 mt-0.5 flex-shrink-0\" />\r\n                                <span>{rec}</span>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Travel Predictions Tab */}\r\n          {activeTab === 'predictions' && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h2 className=\"text-2xl font-bold text-gray-900\">Travel Time Predictions</h2>\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <input\r\n                    type=\"time\"\r\n                    value={timeSlot}\r\n                    onChange={(e) => setTimeSlot(e.target.value)}\r\n                    className=\"form-input\"\r\n                  />\r\n                  <button className=\"btn btn-primary\">\r\n                    <Zap className=\"w-4 h-4 mr-2\" />\r\n                    Predict\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {travelPredictions.map((prediction, index) => (\r\n                  <div key={index} className=\"card p-6\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                      <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                        {prediction.fromStop} → {prediction.toStop}\r\n                      </h3>\r\n                      <div className=\"text-right\">\r\n                        <div className=\"text-2xl font-bold text-primary-600\">{prediction.predictedTime} min</div>\r\n                        <div className=\"text-sm text-gray-500\">{prediction.confidence}% confidence</div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-4\">\r\n                      {/* Alternative Times */}\r\n                      <div className=\"grid grid-cols-3 gap-4\">\r\n                        <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                          <div className=\"text-lg font-semibold text-green-600\">{prediction.alternativeTimes.optimistic} min</div>\r\n                          <div className=\"text-xs text-green-600\">Optimistic</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                          <div className=\"text-lg font-semibold text-blue-600\">{prediction.alternativeTimes.realistic} min</div>\r\n                          <div className=\"text-xs text-blue-600\">Realistic</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-red-50 rounded-lg\">\r\n                          <div className=\"text-lg font-semibold text-red-600\">{prediction.alternativeTimes.pessimistic} min</div>\r\n                          <div className=\"text-xs text-red-600\">Pessimistic</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Factors */}\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Factors</h4>\r\n                        <div className=\"grid grid-cols-2 gap-2 text-sm\">\r\n                          {Object.entries(prediction.factors).map(([key, value]) => (\r\n                            <div key={key} className=\"flex justify-between\">\r\n                              <span className=\"text-gray-600 capitalize\">{key.replace(/([A-Z])/g, ' $1')}</span>\r\n                              <span className=\"font-medium\">{value.toFixed(2)}x</span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Alternative Routes */}\r\n              {alternativeRoutes.length > 0 && (\r\n                <div>\r\n                  <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Alternative Routes</h3>\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                    {alternativeRoutes.map((route, index) => (\r\n                      <div key={index} className=\"card p-4\">\r\n                        <div className=\"flex items-center justify-between mb-2\">\r\n                          <h4 className=\"font-semibold text-gray-900\">{route.routeName}</h4>\r\n                          <div className=\"text-sm text-gray-500\">{route.efficiency}/100</div>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\r\n                          <div className=\"flex items-center space-x-1\">\r\n                            <Clock className=\"w-4 h-4\" />\r\n                            <span>{route.totalTime} min</span>\r\n                          </div>\r\n                          <div className=\"flex items-center space-x-1\">\r\n                            <DollarSign className=\"w-4 h-4\" />\r\n                            <span>Ksh {route.totalCost}</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                          <div className=\"text-xs text-gray-500\">Reasons: {route.reasons.join(', ')}</div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {/* Trend Analysis Tab */}\r\n          {activeTab === 'trends' && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h2 className=\"text-2xl font-bold text-gray-900\">Trend Analysis</h2>\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <select\r\n                    value={period}\r\n                    onChange={(e) => setPeriod(e.target.value as any)}\r\n                    className=\"form-select\"\r\n                  >\r\n                    <option value=\"daily\">Daily</option>\r\n                    <option value=\"weekly\">Weekly</option>\r\n                    <option value=\"monthly\">Monthly</option>\r\n                  </select>\r\n                  <button className=\"btn btn-outline\">\r\n                    <Calendar className=\"w-4 h-4 mr-2\" />\r\n                    Update\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {trendAnalysis.map((trend, index) => (\r\n                  <div key={index} className=\"card p-6\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Route Trends ({trend.period})</h3>\r\n                    \r\n                    <div className=\"space-y-4\">\r\n                      {Object.entries(trend.trends).map(([key, data]) => (\r\n                        <div key={key} className=\"border rounded-lg p-4\">\r\n                          <div className=\"flex items-center justify-between mb-2\">\r\n                            <span className=\"font-medium text-gray-900 capitalize\">{key}</span>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                              {getTrendIcon(data.trend)}\r\n                              <span className={`text-sm font-medium ${getTrendColor(data.trend)}`}>\r\n                                {data.change > 0 ? '+' : ''}{data.change.toFixed(1)}%\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex items-center justify-between text-sm text-gray-600\">\r\n                            <span>Current: {data.current}</span>\r\n                            <span>Previous: {data.previous}</span>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n\r\n                    {trend.insights.length > 0 && (\r\n                      <div className=\"mt-4\">\r\n                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Insights</h4>\r\n                        <ul className=\"space-y-1\">\r\n                          {trend.insights.map((insight, idx) => (\r\n                            <li key={idx} className=\"flex items-start space-x-2 text-sm text-gray-600\">\r\n                              <AlertTriangle className=\"w-4 h-4 text-blue-500 mt-0.5 flex-shrink-0\" />\r\n                              <span>{insight}</span>\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Recommendations Tab */}\r\n          {activeTab === 'recommendations' && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h2 className=\"text-2xl font-bold text-gray-900\">Personalized Recommendations</h2>\r\n                <button className=\"btn btn-primary\">\r\n                  <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n                  Refresh\r\n                </button>\r\n              </div>\r\n\r\n              {userRecommendations && (\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  {/* User Preferences */}\r\n                  <div className=\"card p-6\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Your Preferences</h3>\r\n                    <div className=\"space-y-3\">\r\n                      {Object.entries(userRecommendations.preferences).map(([key, value]) => (\r\n                        <div key={key} className=\"flex items-center justify-between\">\r\n                          <span className=\"text-sm text-gray-600 capitalize\">{key}</span>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <div className=\"w-20 bg-gray-200 rounded-full h-2\">\r\n                              <div \r\n                                className=\"bg-primary-500 h-2 rounded-full\" \r\n                                style={{ width: `${value * 100}%` }}\r\n                              ></div>\r\n                            </div>\r\n                            <span className=\"text-sm font-medium text-gray-900\">{Math.round(value * 100)}%</span>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Recommendations */}\r\n                  <div className=\"card p-6\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Recommended Routes</h3>\r\n                    <div className=\"space-y-3\">\r\n                      {userRecommendations.recommendations.map((rec, index) => (\r\n                        <div key={index} className=\"border rounded-lg p-4 hover:bg-gray-50\">\r\n                          <div className=\"flex items-center justify-between mb-2\">\r\n                            <h4 className=\"font-medium text-gray-900\">{rec.routeName}</h4>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                              <Star className=\"w-4 h-4 text-yellow-500\" />\r\n                              <span className=\"text-sm font-medium text-gray-900\">{rec.score}/100</span>\r\n                            </div>\r\n                          </div>\r\n                          <p className=\"text-sm text-gray-600 mb-2\">{rec.reason}</p>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <span className={`px-2 py-1 text-xs rounded-full ${\r\n                              rec.type === 'efficiency' ? 'bg-blue-100 text-blue-800' :\r\n                              rec.type === 'safety' ? 'bg-green-100 text-green-800' :\r\n                              rec.type === 'cost' ? 'bg-yellow-100 text-yellow-800' :\r\n                              'bg-purple-100 text-purple-800'\r\n                            }`}>\r\n                              {rec.type}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Demand Forecasts */}\r\n              {demandForecasts.length > 0 && (\r\n                <div>\r\n                  <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">Demand Forecasts</h3>\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                    {demandForecasts.map((forecast, index) => (\r\n                      <div key={index} className=\"card p-4\">\r\n                        <div className=\"flex items-center justify-between mb-2\">\r\n                          <h4 className=\"font-semibold text-gray-900\">Time Slot: {forecast.timeSlot}</h4>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"text-lg font-bold text-primary-600\">{forecast.predictedDemand}%</div>\r\n                            <div className=\"text-sm text-gray-500\">{forecast.confidence}% confidence</div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"w-full bg-gray-200 rounded-full h-2 mb-2\">\r\n                          <div \r\n                            className=\"bg-primary-500 h-2 rounded-full\" \r\n                            style={{ width: `${forecast.predictedDemand}%` }}\r\n                          ></div>\r\n                        </div>\r\n                        {forecast.recommendations.length > 0 && (\r\n                          <div className=\"text-sm text-gray-600\">\r\n                            {forecast.recommendations[0]}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["AnalyticsDashboard","state","useApp","isLoading","setIsLoading","useState","error","setError","activeTab","setActiveTab","efficiencyScores","setEfficiencyScores","travelPredictions","setTravelPredictions","alternativeRoutes","setAlternativeRoutes","trendAnalysis","setTrendAnalysis","demandForecasts","setDemandForecasts","userRecommendations","setUserRecommendations","selectedRoute","setSelectedRoute","timeSlot","setTimeSlot","period","setPeriod","loadAnalyticsData","useCallback","_a","recommendationsResponse","apiService","useEffect","getTrendIcon","trend","jsx","ArrowUp","ArrowDown","Minus","getTrendColor","getEfficiencyColor","score","getEfficiencyBgColor","jsxs","Loader2","AlertTriangle","RefreshCw","Target","Clock","TrendingUp","Star","tab","Icon","e","Filter","key","value","rec","index","CheckCircle","Zap","prediction","route","DollarSign","Calendar","data","insight","idx","forecast"],"mappings":"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"}