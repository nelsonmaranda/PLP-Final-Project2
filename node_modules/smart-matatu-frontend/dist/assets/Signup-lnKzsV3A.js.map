{"version":3,"file":"Signup-lnKzsV3A.js","sources":["../../src/screens/Signup.tsx"],"sourcesContent":["import { useState, useCallback } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Mail, Lock, User, Eye, EyeOff, ArrowLeft, Check, AlertCircle, Loader2 } from 'lucide-react'\r\nimport apiService from '../services/api'\r\nimport { SignupFormData } from '../types'\r\nimport { useApp } from '../contexts/AppContext'\r\n\r\nexport default function Signup() {\r\n  const { setUser } = useApp()\r\n  const navigate = useNavigate()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [success, setSuccess] = useState(false)\r\n  const [formData, setFormData] = useState<SignupFormData>({\r\n    displayName: '',\r\n    email: '',\r\n    password: ''\r\n  })\r\n  const [errors, setErrors] = useState<Record<string, string>>({})\r\n\r\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }))\r\n    \r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }))\r\n    }\r\n    \r\n    // Clear global error and success when user starts typing (debounced)\r\n    if (error) {\r\n      setError(null)\r\n    }\r\n    if (success) {\r\n      setSuccess(false)\r\n    }\r\n  }, [errors, error, success])\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {}\r\n\r\n    if (!formData.displayName.trim()) {\r\n      newErrors.displayName = 'Display name is required'\r\n    }\r\n\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = 'Email is required'\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = 'Email is invalid'\r\n    }\r\n\r\n    if (!formData.password) {\r\n      newErrors.password = 'Password is required'\r\n    } else if (formData.password.length < 8) {\r\n      newErrors.password = 'Password must be at least 8 characters'\r\n    }\r\n\r\n    setErrors(newErrors)\r\n    return Object.keys(newErrors).length === 0\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!validateForm()) {\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    setError(null)\r\n    setSuccess(false) // Clear any previous success state\r\n\r\n    try {\r\n      const response = await apiService.signup(formData)\r\n      \r\n      // Strict validation: must have success=true, data object, user object, and token\r\n      if (response.success && response.data && response.data.user && response.data.token) {\r\n        // Update user state in context directly from signup response\r\n        setUser(response.data.user)\r\n        // Show success message and reset form\r\n        setSuccess(true)\r\n        setFormData({\r\n          displayName: '',\r\n          email: '',\r\n          password: ''\r\n        })\r\n        // Redirect to home page after successful signup\r\n        setTimeout(() => {\r\n          navigate('/')\r\n        }, 1500) // Wait 1.5 seconds to show success message\r\n      } else {\r\n        setError('Registration failed. Please check your information and try again.')\r\n      }\r\n    } catch (err) {\r\n      console.error('Signup error:', err)\r\n      setError('Failed to create account. Please check your information and try again.')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const passwordRequirements = [\r\n    { text: 'At least 8 characters', met: formData.password.length >= 8 },\r\n    { text: 'Contains uppercase letter', met: /[A-Z]/.test(formData.password) },\r\n    { text: 'Contains lowercase letter', met: /[a-z]/.test(formData.password) },\r\n    { text: 'Contains number', met: /\\d/.test(formData.password) },\r\n  ]\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <div className=\"flex justify-center\">\r\n          <Link to=\"/\" className=\"flex items-center space-x-2\">\r\n            <div className=\"w-10 h-10 bg-primary-500 rounded-lg flex items-center justify-center\">\r\n              <User className=\"w-6 h-6 text-white\" />\r\n            </div>\r\n            <span className=\"text-2xl font-bold text-gray-900\">Smart Matatu</span>\r\n          </Link>\r\n        </div>\r\n        <h1 className=\"mt-6 text-center text-3xl font-bold text-gray-900\">\r\n          Create your account\r\n        </h1>\r\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n          Join thousands of Nairobi commuters\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <div className=\"card\">\r\n          <div className=\"card-content\">\r\n            {error && (\r\n              <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\" role=\"alert\" aria-live=\"polite\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <AlertCircle className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <div className=\"ml-3\">\r\n                    <p className=\"text-sm font-medium text-red-800\">{error}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {success && (\r\n              <div className=\"mb-6 p-4 bg-green-50 border border-green-200 rounded-lg\" role=\"alert\" aria-live=\"polite\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Check className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <div className=\"ml-3\">\r\n                    <p className=\"text-sm font-medium text-green-800\">\r\n                      Account created successfully! You can now sign in with your credentials.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              {/* Display Name */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"displayName\" className=\"form-label\">\r\n                  Display Name\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <User className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <input\r\n                    id=\"displayName\"\r\n                    name=\"displayName\"\r\n                    type=\"text\"\r\n                    autoComplete=\"name\"\r\n                    value={formData.displayName}\r\n                    onChange={handleInputChange}\r\n                    className={`form-input pl-10 ${errors.displayName ? 'border-red-500' : ''}`}\r\n                    placeholder=\"Enter your display name\"\r\n                    aria-describedby={errors.displayName ? 'displayName-error' : 'displayName-help'}\r\n                    aria-invalid={!!errors.displayName}\r\n                  />\r\n                </div>\r\n                {errors.displayName && (\r\n                  <p className=\"form-error\" data-testid=\"displayName-error\" id=\"displayName-error\" role=\"alert\">{errors.displayName}</p>\r\n                )}\r\n                <p id=\"displayName-help\" className=\"sr-only\">Enter your display name as it will appear to other users</p>\r\n              </div>\r\n\r\n              {/* Email */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\" className=\"form-label\">\r\n                  Email address\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <Mail className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <input\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    autoComplete=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleInputChange}\r\n                    className={`form-input pl-10 ${errors.email ? 'border-red-500' : ''}`}\r\n                    placeholder=\"Enter your email\"\r\n                    aria-describedby={errors.email ? 'email-error' : 'email-help'}\r\n                    aria-invalid={!!errors.email}\r\n                  />\r\n                </div>\r\n                {errors.email && (\r\n                  <p className=\"form-error\" data-testid=\"email-error\" id=\"email-error\" role=\"alert\">{errors.email}</p>\r\n                )}\r\n                <p id=\"email-help\" className=\"sr-only\">Enter your email address for account verification</p>\r\n              </div>\r\n\r\n              {/* Password */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\" className=\"form-label\">\r\n                  Password\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <Lock className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <input\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    autoComplete=\"new-password\"\r\n                    value={formData.password}\r\n                    onChange={handleInputChange}\r\n                    className={`form-input pl-10 pr-10 ${errors.password ? 'border-red-500' : ''}`}\r\n                    placeholder=\"Create a password\"\r\n                    aria-describedby={errors.password ? 'password-error' : 'password-help'}\r\n                    aria-invalid={!!errors.password}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n                  >\r\n                    {showPassword ? (\r\n                      <EyeOff className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                    ) : (\r\n                      <Eye className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                    )}\r\n                  </button>\r\n                </div>\r\n                {errors.password && (\r\n                  <p className=\"form-error\" data-testid=\"password-error\" id=\"password-error\" role=\"alert\">{errors.password}</p>\r\n                )}\r\n                <p id=\"password-help\" className=\"sr-only\">Create a password with at least 8 characters</p>\r\n                \r\n                {/* Password Requirements */}\r\n                {formData.password && (\r\n                  <div className=\"mt-2 space-y-1\">\r\n                    {passwordRequirements.map((req, index) => (\r\n                      <div key={index} className=\"flex items-center text-xs\">\r\n                        <Check className={`w-3 h-3 mr-2 ${req.met ? 'text-green-500' : 'text-gray-400'}`} />\r\n                        <span className={req.met ? 'text-green-600' : 'text-gray-500'}>\r\n                          {req.text}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Submit Button */}\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isLoading}\r\n                  className=\"btn btn-primary w-full\"\r\n                  aria-label={isLoading ? 'Creating account...' : 'Create your account'}\r\n                >\r\n                  {isLoading ? (\r\n                    <>\r\n                      <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" aria-hidden=\"true\" />\r\n                      Creating account...\r\n                    </>\r\n                  ) : (\r\n                    'Create account'\r\n                  )}\r\n                </button>\r\n              </div>\r\n\r\n              {/* Sign In Link */}\r\n              <div className=\"text-center\">\r\n                <p className=\"text-sm text-gray-600\">\r\n                  Already have an account?{' '}\r\n                  <Link to=\"/login\" className=\"font-medium text-primary-600 hover:text-primary-500\">\r\n                    Sign in here\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Back to Home */}\r\n        <div className=\"mt-6 text-center\">\r\n          <Link\r\n            to=\"/\"\r\n            className=\"inline-flex items-center text-sm text-gray-600 hover:text-gray-900\"\r\n          >\r\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n            Back to home\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["Signup","setUser","useApp","navigate","useNavigate","isLoading","setIsLoading","useState","showPassword","setShowPassword","error","setError","success","setSuccess","formData","setFormData","errors","setErrors","handleInputChange","useCallback","e","name","value","prev","validateForm","newErrors","handleSubmit","response","apiService","err","passwordRequirements","jsxs","jsx","Link","User","AlertCircle","Check","Mail","Lock","EyeOff","Eye","req","index","Fragment","Loader2","ArrowLeft"],"mappings":"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"}