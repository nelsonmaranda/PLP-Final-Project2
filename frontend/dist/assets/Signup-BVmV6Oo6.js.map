{"version":3,"file":"Signup-BVmV6Oo6.js","sources":["../../src/components/RoleSelector.tsx","../../src/screens/Signup.tsx"],"sourcesContent":["import { Building2, Gavel, User, Shield, Crown } from 'lucide-react'\r\n\r\ninterface RoleSelectorProps {\r\n  selectedRole: string\r\n  onRoleChange: (role: string) => void\r\n  language: 'en' | 'sw'\r\n}\r\n\r\nexport default function RoleSelector({ selectedRole, onRoleChange, language }: RoleSelectorProps) {\r\n  const roles = [\r\n    {\r\n      id: 'user',\r\n      name: language === 'sw' ? 'Mtumiaji wa Kawaida' : 'Regular User',\r\n      description: language === 'sw' \r\n        ? 'Pata taarifa za matatu na uwasilie ripoti' \r\n        : 'Get matatu information and submit reports',\r\n      icon: User,\r\n      color: 'bg-gray-100 text-gray-800 border-gray-300',\r\n      selectedColor: 'bg-gray-200 text-gray-900 border-gray-400'\r\n    },\r\n    {\r\n      id: 'sacco',\r\n      name: language === 'sw' ? 'Meneja wa SACCO' : 'SACCO Manager',\r\n      description: language === 'sw' \r\n        ? 'Dhibiti gari na madereva wa SACCO yako' \r\n        : 'Manage your SACCO vehicles and drivers',\r\n      icon: Building2,\r\n      color: 'bg-blue-100 text-blue-800 border-blue-300',\r\n      selectedColor: 'bg-blue-200 text-blue-900 border-blue-400'\r\n    },\r\n    {\r\n      id: 'authority',\r\n      name: language === 'sw' ? 'Mamlaka ya Usafiri' : 'Transport Authority',\r\n      description: language === 'sw' \r\n        ? 'Fuatilia uzingo na usalama wa usafiri' \r\n        : 'Monitor compliance and transport safety',\r\n      icon: Gavel,\r\n      color: 'bg-red-100 text-red-800 border-red-300',\r\n      selectedColor: 'bg-red-200 text-red-900 border-red-400'\r\n    },\r\n    {\r\n      id: 'moderator',\r\n      name: language === 'sw' ? 'Msimamizi' : 'Moderator',\r\n      description: language === 'sw' \r\n        ? 'Simamia mfumo na uwasilie ripoti' \r\n        : 'Moderate system and generate reports',\r\n      icon: Shield,\r\n      color: 'bg-green-100 text-green-800 border-green-300',\r\n      selectedColor: 'bg-green-200 text-green-900 border-green-400'\r\n    },\r\n    {\r\n      id: 'admin',\r\n      name: language === 'sw' ? 'Msimamizi Mkuu' : 'Administrator',\r\n      description: language === 'sw' \r\n        ? 'Dhibiti mfumo wote na ufikie dashboards zote' \r\n        : 'Control entire system and access all dashboards',\r\n      icon: Crown,\r\n      color: 'bg-purple-100 text-purple-800 border-purple-300',\r\n      selectedColor: 'bg-purple-200 text-purple-900 border-purple-400'\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n          {language === 'sw' ? 'Chagua Aina ya Mtumiaji' : 'Select User Type'}\r\n        </label>\r\n        <p className=\"text-sm text-gray-500 mb-4\">\r\n          {language === 'sw' \r\n            ? 'Chagua aina ya mtumiaji kulingana na jukumu lako' \r\n            : 'Choose user type based on your role'}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n        {roles.map((role) => {\r\n          const Icon = role.icon\r\n          const isSelected = selectedRole === role.id\r\n          \r\n          return (\r\n            <button\r\n              key={role.id}\r\n              type=\"button\"\r\n              onClick={() => onRoleChange(role.id)}\r\n              className={`p-4 rounded-lg border-2 text-left transition-all duration-200 hover:shadow-md ${\r\n                isSelected \r\n                  ? `${role.selectedColor} shadow-md` \r\n                  : `${role.color} hover:shadow-sm`\r\n              }`}\r\n            >\r\n              <div className=\"flex items-start space-x-3\">\r\n                <div className={`p-2 rounded-lg ${\r\n                  isSelected ? 'bg-white' : 'bg-white/50'\r\n                }`}>\r\n                  <Icon className={`w-6 h-6 ${\r\n                    isSelected ? 'text-gray-700' : 'text-gray-500'\r\n                  }`} />\r\n                </div>\r\n                <div className=\"flex-1 min-w-0\">\r\n                  <h3 className=\"text-sm font-semibold\">\r\n                    {role.name}\r\n                  </h3>\r\n                  <p className=\"text-xs mt-1 opacity-80\">\r\n                    {role.description}\r\n                  </p>\r\n                </div>\r\n                {isSelected && (\r\n                  <div className=\"flex-shrink-0\">\r\n                    <div className=\"w-5 h-5 bg-blue-600 rounded-full flex items-center justify-center\">\r\n                      <div className=\"w-2 h-2 bg-white rounded-full\"></div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </button>\r\n          )\r\n        })}\r\n      </div>\r\n\r\n      {selectedRole && (\r\n        <div className=\"mt-4 p-3 bg-blue-50 rounded-lg\">\r\n          <p className=\"text-sm text-blue-800\">\r\n            <strong>\r\n              {language === 'sw' ? 'Umechagua:' : 'Selected:'} \r\n            </strong>{' '}\r\n            {roles.find(r => r.id === selectedRole)?.name}\r\n          </p>\r\n          <p className=\"text-xs text-blue-600 mt-1\">\r\n            {language === 'sw' \r\n              ? 'Utapata ufikiaji wa dashboards na huduma za maalum kulingana na jukumu lako'\r\n              : 'You will have access to specific dashboards and services based on your role'\r\n            }\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useCallback } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Mail, Lock, User, Eye, EyeOff, ArrowLeft, Check, AlertCircle, Loader2 } from 'lucide-react'\r\nimport apiService from '../services/api'\r\nimport { SignupFormData } from '../types'\r\nimport { useApp } from '../contexts/AppContext'\r\nimport RoleSelector from '../components/RoleSelector'\r\nimport { useTranslation } from '../hooks/useTranslation'\r\n\r\nexport default function Signup() {\r\n  const { setUser, state } = useApp()\r\n  const { t } = useTranslation()\r\n  const navigate = useNavigate()\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [success, setSuccess] = useState(false)\r\n  const [selectedRole, setSelectedRole] = useState('user')\r\n  const [formData, setFormData] = useState<SignupFormData>({\r\n    displayName: '',\r\n    email: '',\r\n    password: ''\r\n  })\r\n  const [organization, setOrganization] = useState('')\r\n  const [errors, setErrors] = useState<Record<string, string>>({})\r\n\r\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }))\r\n    \r\n    // Clear error when user starts typing\r\n    if (errors[name]) {\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [name]: ''\r\n      }))\r\n    }\r\n    \r\n    // Clear global error and success when user starts typing (debounced)\r\n    if (error) {\r\n      setError(null)\r\n    }\r\n    if (success) {\r\n      setSuccess(false)\r\n    }\r\n  }, [errors, error, success])\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {}\r\n\r\n    if (!formData.displayName.trim()) {\r\n      newErrors.displayName = 'Display name is required'\r\n    }\r\n\r\n    if (!formData.email.trim()) {\r\n      newErrors.email = 'Email is required'\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formData.email)) {\r\n      newErrors.email = 'Email is invalid'\r\n    }\r\n\r\n    if (!formData.password) {\r\n      newErrors.password = 'Password is required'\r\n    } else if (formData.password.length < 8) {\r\n      newErrors.password = 'Password must be at least 8 characters'\r\n    }\r\n\r\n    setErrors(newErrors)\r\n    return Object.keys(newErrors).length === 0\r\n  }\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    \r\n    if (!validateForm()) {\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    setError(null)\r\n    setSuccess(false) // Clear any previous success state\r\n\r\n    try {\r\n      // Add role and organization to form data\r\n      const signupData = {\r\n        ...formData,\r\n        role: selectedRole,\r\n        organization: organization\r\n      }\r\n      \r\n      const response = await apiService.signup(signupData)\r\n      \r\n      // Strict validation: must have success=true, data object, user object, and token\r\n      if (response.success && response.data && response.data.user && response.data.token) {\r\n        // Update user state in context directly from signup response\r\n        setUser(response.data.user)\r\n        // Show success message and reset form\r\n        setSuccess(true)\r\n        setFormData({\r\n          displayName: '',\r\n          email: '',\r\n          password: ''\r\n        })\r\n        setSelectedRole('user')\r\n        // Redirect to home page after successful signup\r\n        setTimeout(() => {\r\n          navigate('/')\r\n        }, 1500) // Wait 1.5 seconds to show success message\r\n      } else {\r\n        setError('Registration failed. Please check your information and try again.')\r\n      }\r\n    } catch (err) {\r\n      console.error('Signup error:', err)\r\n      setError('Failed to create account. Please check your information and try again.')\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const passwordRequirements = [\r\n    { text: 'At least 8 characters', met: formData.password.length >= 8 },\r\n    { text: 'Contains uppercase letter', met: /[A-Z]/.test(formData.password) },\r\n    { text: 'Contains lowercase letter', met: /[a-z]/.test(formData.password) },\r\n    { text: 'Contains number', met: /\\d/.test(formData.password) },\r\n  ]\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8\">\r\n      <div className=\"sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <div className=\"flex justify-center\">\r\n          <Link to=\"/\" className=\"flex items-center space-x-2\">\r\n            <div className=\"w-10 h-10 bg-primary-500 rounded-lg flex items-center justify-center\">\r\n              <User className=\"w-6 h-6 text-white\" />\r\n            </div>\r\n            <span className=\"text-2xl font-bold text-gray-900\">Smart Matatu</span>\r\n          </Link>\r\n        </div>\r\n        <h1 className=\"mt-6 text-center text-3xl font-bold text-gray-900\">\r\n          Create your account\r\n        </h1>\r\n        <p className=\"mt-2 text-center text-sm text-gray-600\">\r\n          Join thousands of Nairobi commuters\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\r\n        <div className=\"card\">\r\n          <div className=\"card-content\">\r\n            {error && (\r\n              <div className=\"mb-6 p-4 bg-red-50 border border-red-200 rounded-lg\" role=\"alert\" aria-live=\"polite\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <AlertCircle className=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <div className=\"ml-3\">\r\n                    <p className=\"text-sm font-medium text-red-800\">{error}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {success && (\r\n              <div className=\"mb-6 p-4 bg-green-50 border border-green-200 rounded-lg\" role=\"alert\" aria-live=\"polite\">\r\n                <div className=\"flex items-center\">\r\n                  <div className=\"flex-shrink-0\">\r\n                    <Check className=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <div className=\"ml-3\">\r\n                    <p className=\"text-sm font-medium text-green-800\">\r\n                      Account created successfully! You can now sign in with your credentials.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n              {/* Display Name */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"displayName\" className=\"form-label\">\r\n                  {t('auth.displayName')}\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <User className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <input\r\n                    id=\"displayName\"\r\n                    name=\"displayName\"\r\n                    type=\"text\"\r\n                    autoComplete=\"name\"\r\n                    value={formData.displayName}\r\n                    onChange={handleInputChange}\r\n                    className={`form-input pl-10 ${errors.displayName ? 'border-red-500' : ''}`}\r\n                    placeholder=\"Enter your display name\"\r\n                    aria-describedby={errors.displayName ? 'displayName-error' : 'displayName-help'}\r\n                    aria-invalid={!!errors.displayName}\r\n                  />\r\n                </div>\r\n                {errors.displayName && (\r\n                  <p className=\"form-error\" data-testid=\"displayName-error\" id=\"displayName-error\" role=\"alert\">{errors.displayName}</p>\r\n                )}\r\n                <p id=\"displayName-help\" className=\"sr-only\">Enter your display name as it will appear to other users</p>\r\n              </div>\r\n\r\n              {/* Email */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"email\" className=\"form-label\">\r\n                  {t('auth.email')}\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <Mail className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <input\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    autoComplete=\"email\"\r\n                    value={formData.email}\r\n                    onChange={handleInputChange}\r\n                    className={`form-input pl-10 ${errors.email ? 'border-red-500' : ''}`}\r\n                    placeholder=\"Enter your email\"\r\n                    aria-describedby={errors.email ? 'email-error' : 'email-help'}\r\n                    aria-invalid={!!errors.email}\r\n                  />\r\n                </div>\r\n                {errors.email && (\r\n                  <p className=\"form-error\" data-testid=\"email-error\" id=\"email-error\" role=\"alert\">{errors.email}</p>\r\n                )}\r\n                <p id=\"email-help\" className=\"sr-only\">Enter your email address for account verification</p>\r\n              </div>\r\n\r\n              {/* Password */}\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\" className=\"form-label\">\r\n                  {t('auth.password')}\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <Lock className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                  </div>\r\n                  <input\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    autoComplete=\"new-password\"\r\n                    value={formData.password}\r\n                    onChange={handleInputChange}\r\n                    className={`form-input pl-10 pr-10 ${errors.password ? 'border-red-500' : ''}`}\r\n                    placeholder=\"Create a password\"\r\n                    aria-describedby={errors.password ? 'password-error' : 'password-help'}\r\n                    aria-invalid={!!errors.password}\r\n                  />\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"absolute inset-y-0 right-0 pr-3 flex items-center\"\r\n                    onClick={() => setShowPassword(!showPassword)}\r\n                    aria-label={showPassword ? 'Hide password' : 'Show password'}\r\n                  >\r\n                    {showPassword ? (\r\n                      <EyeOff className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                    ) : (\r\n                      <Eye className=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\r\n                    )}\r\n                  </button>\r\n                </div>\r\n                {errors.password && (\r\n                  <p className=\"form-error\" data-testid=\"password-error\" id=\"password-error\" role=\"alert\">{errors.password}</p>\r\n                )}\r\n                <p id=\"password-help\" className=\"sr-only\">Create a password with at least 8 characters</p>\r\n                \r\n                {/* Password Requirements */}\r\n                {formData.password && (\r\n                  <div className=\"mt-2 space-y-1\">\r\n                    {passwordRequirements.map((req, index) => (\r\n                      <div key={index} className=\"flex items-center text-xs\">\r\n                        <Check className={`w-3 h-3 mr-2 ${req.met ? 'text-green-500' : 'text-gray-400'}`} />\r\n                        <span className={req.met ? 'text-green-600' : 'text-gray-500'}>\r\n                          {req.text}\r\n                        </span>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Role Selection */}\r\n              <div className=\"form-group\">\r\n                <RoleSelector\r\n                  selectedRole={selectedRole}\r\n                  onRoleChange={setSelectedRole}\r\n                  language={state.language}\r\n                />\r\n              </div>\r\n\r\n              {/* Organization Field - Show for roles that require approval */}\r\n              {['sacco', 'authority', 'moderator', 'admin'].includes(selectedRole) && (\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"organization\" className=\"form-label\">\r\n                    Organization Name\r\n                  </label>\r\n                  <input\r\n                    id=\"organization\"\r\n                    name=\"organization\"\r\n                    type=\"text\"\r\n                    value={organization}\r\n                    onChange={(e) => setOrganization(e.target.value)}\r\n                    className=\"form-input\"\r\n                    placeholder=\"Enter your organization name\"\r\n                    required\r\n                  />\r\n                  <p className=\"text-xs text-gray-500 mt-1\">\r\n                    This helps us verify your role request\r\n                  </p>\r\n                </div>\r\n              )}\r\n\r\n              {/* Submit Button */}\r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isLoading}\r\n                  className=\"btn btn-primary w-full\"\r\n                  aria-label={isLoading ? 'Creating account...' : 'Create your account'}\r\n                >\r\n                  {isLoading ? (\r\n                    <>\r\n                      <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" aria-hidden=\"true\" />\r\n                      Creating account...\r\n                    </>\r\n                  ) : (\r\n                    'Create account'\r\n                  )}\r\n                </button>\r\n              </div>\r\n\r\n              {/* Sign In Link */}\r\n              <div className=\"text-center\">\r\n                <p className=\"text-sm text-gray-600\">\r\n                  Already have an account?{' '}\r\n                  <Link to=\"/login\" className=\"font-medium text-primary-600 hover:text-primary-500\">\r\n                    Sign in here\r\n                  </Link>\r\n                </p>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Back to Home */}\r\n        <div className=\"mt-6 text-center\">\r\n          <Link\r\n            to=\"/\"\r\n            className=\"inline-flex items-center text-sm text-gray-600 hover:text-gray-900\"\r\n          >\r\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\r\n            Back to home\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["RoleSelector","selectedRole","onRoleChange","language","roles","User","Building2","Gavel","Shield","Crown","jsxs","jsx","role","Icon","isSelected","_a","r","Signup","setUser","state","useApp","t","useTranslation","navigate","useNavigate","isLoading","setIsLoading","useState","showPassword","setShowPassword","error","setError","success","setSuccess","setSelectedRole","formData","setFormData","organization","setOrganization","errors","setErrors","handleInputChange","useCallback","e","name","value","prev","validateForm","newErrors","handleSubmit","signupData","response","apiService","err","passwordRequirements","Link","AlertCircle","Check","Mail","Lock","EyeOff","Eye","req","index","Fragment","Loader2","ArrowLeft"],"mappings":"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"}