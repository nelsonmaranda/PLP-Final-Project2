{"version":3,"file":"Profile-C6MwRT9L.js","sources":["../../src/screens/Profile.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { \r\n  User, \r\n  History, \r\n  Heart, \r\n  BarChart3, \r\n  Edit3, \r\n  Save, \r\n  X,\r\n  MapPin,\r\n  Clock,\r\n  AlertTriangle,\r\n  CheckCircle,\r\n  Star,\r\n  RefreshCw\r\n} from 'lucide-react'\r\nimport { useApp } from '../contexts/AppContext'\r\nimport apiService from '../services/api'\r\nimport { Report, Route } from '../types'\r\nimport { useTranslation } from '../hooks/useTranslation'\r\n\r\nexport default function Profile() {\r\n  const { t } = useTranslation()\r\n  const { state, setUser } = useApp()\r\n  const [activeTab, setActiveTab] = useState<'profile' | 'reports' | 'favorites' | 'analytics'>('profile')\r\n  const [isEditing, setIsEditing] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [success, setSuccess] = useState(false)\r\n  \r\n  // Profile editing state\r\n  const [profileData, setProfileData] = useState({\r\n    displayName: state.user?.displayName || '',\r\n    email: state.user?.email || ''\r\n  })\r\n  const [uploading, setUploading] = useState(false)\r\n  const [avatarUrl, setAvatarUrl] = useState<string | null>(state.user?.avatarUrl || null)\r\n\r\n  // Sync avatar URL when user state changes\r\n  useEffect(() => {\r\n    if (state.user?.avatarUrl) {\r\n      setAvatarUrl(state.user.avatarUrl)\r\n    }\r\n  }, [state.user?.avatarUrl])\r\n  \r\n  // Reports state\r\n  const [reports, setReports] = useState<Report[]>([])\r\n  const [reportsLoading, setReportsLoading] = useState(false)\r\n  \r\n  // Favorites state\r\n  const [favoriteRoutes, setFavoriteRoutes] = useState<Route[]>([])\r\n  const [favoritesLoading, setFavoritesLoading] = useState(false)\r\n  \r\n  // Analytics state\r\n  const [analytics, setAnalytics] = useState({\r\n    totalReports: 0,\r\n    reportsThisMonth: 0,\r\n    favoriteRoutesCount: 0,\r\n    averageRating: 0,\r\n    mostReportedRoute: null as string | null\r\n  })\r\n\r\n  // Load user reports\r\n  const loadReports = useCallback(async () => {\r\n    if (!state.user) return\r\n    \r\n    setReportsLoading(true)\r\n    try {\r\n      const response = await apiService.getUserReports(state.user._id)\r\n      if (response.success && response.data) {\r\n        setReports(response.data.reports || [])\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading reports:', error)\r\n    } finally {\r\n      setReportsLoading(false)\r\n    }\r\n  }, [state.user])\r\n\r\n  // Load favorite routes\r\n  const loadFavorites = useCallback(async () => {\r\n    if (!state.user) return\r\n    \r\n    setFavoritesLoading(true)\r\n    try {\r\n      const response = await apiService.getFavoriteRoutes(state.user._id)\r\n      if (response.success && response.data) {\r\n        setFavoriteRoutes(response.data.routes || [])\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading favorites:', error)\r\n    } finally {\r\n      setFavoritesLoading(false)\r\n    }\r\n  }, [state.user])\r\n\r\n  // Load analytics\r\n  const loadAnalytics = useCallback(async () => {\r\n    if (!state.user) return\r\n    \r\n    try {\r\n      const response = await apiService.getUserAnalytics(state.user._id)\r\n      if (response.success && response.data) {\r\n        setAnalytics(response.data)\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading analytics:', error)\r\n    }\r\n  }, [state.user])\r\n\r\n  // Remove favorite route\r\n  const removeFavorite = useCallback(async (routeId: string) => {\r\n    if (!state.user) return\r\n    \r\n    try {\r\n      const response = await apiService.removeFavoriteRoute(state.user._id, routeId)\r\n      if (response.success) {\r\n        // Refresh favorites list\r\n        loadFavorites()\r\n      }\r\n    } catch (error) {\r\n      console.error('Error removing favorite:', error)\r\n    }\r\n  }, [state.user, loadFavorites])\r\n\r\n  // Load data when component mounts or user changes\r\n  useEffect(() => {\r\n    if (state.user) {\r\n      loadReports()\r\n      loadFavorites()\r\n      loadAnalytics()\r\n    }\r\n  }, [state.user, loadReports, loadFavorites, loadAnalytics])\r\n\r\n  // Load data when active tab changes\r\n  useEffect(() => {\r\n    if (state.user) {\r\n      switch (activeTab) {\r\n        case 'reports':\r\n          loadReports()\r\n          break\r\n        case 'favorites':\r\n          loadFavorites()\r\n          break\r\n        case 'analytics':\r\n          loadAnalytics()\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n  }, [activeTab, state.user, loadReports, loadFavorites, loadAnalytics])\r\n\r\n  // Handle profile update\r\n  const handleProfileUpdate = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    if (!state.user) return\r\n\r\n    setIsLoading(true)\r\n    setError(null)\r\n    setSuccess(false)\r\n\r\n    try {\r\n      const response = await apiService.updateProfile(state.user._id, profileData)\r\n      if (response.success && response.data) {\r\n        setUser(response.data.user)\r\n        setSuccess(true)\r\n        setIsEditing(false)\r\n        setTimeout(() => setSuccess(false), 3000)\r\n      } else {\r\n        setError(t('profile.updateError'))\r\n      }\r\n    } catch (error) {\r\n      console.error('Profile update error:', error)\r\n      setError(t('profile.updateError'))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handlePhotoChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (!e.target.files || e.target.files.length === 0) return\r\n    const file = e.target.files[0]\r\n    try {\r\n      setUploading(true)\r\n      // For now, create a temporary URL for the uploaded image\r\n      const tempUrl = URL.createObjectURL(file)\r\n      setAvatarUrl(tempUrl)\r\n      \r\n      // Try to upload to backend, but fallback to temp URL if it fails\r\n      try {\r\n        const resp = await apiService.uploadFile(file, 'profile')\r\n        if ((resp as any)?.success && (resp as any)?.data?.url) {\r\n          const url = (resp as any).data.url\r\n          setAvatarUrl(url)\r\n          // Persist avatar to user profile\r\n          await apiService.updateProfile(state.user!._id, { displayName: state.user!.displayName, email: state.user!.email, avatarUrl: url })\r\n          setUser({ ...(state.user as any), avatarUrl: url })\r\n        } else {\r\n          // Fallback: save temp URL to profile (for demo purposes)\r\n          await apiService.updateProfile(state.user!._id, { displayName: state.user!.displayName, email: state.user!.email, avatarUrl: tempUrl })\r\n          setUser({ ...(state.user as any), avatarUrl: tempUrl })\r\n        }\r\n      } catch (uploadError) {\r\n        console.log('Upload endpoint not available, using temporary URL')\r\n        // Fallback: save temp URL to profile (for demo purposes)\r\n        await apiService.updateProfile(state.user!._id, { displayName: state.user!.displayName, email: state.user!.email, avatarUrl: tempUrl })\r\n        setUser({ ...(state.user as any), avatarUrl: tempUrl })\r\n      }\r\n    } catch (err) {\r\n      console.error('Photo change failed', err)\r\n    } finally {\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  // Add a simple URL input method as an alternative\r\n  const handleAvatarUrlChange = async (url: string) => {\r\n    try {\r\n      setUploading(true)\r\n      setAvatarUrl(url)\r\n      // Update profile with the new avatar URL\r\n      await apiService.updateProfile(state.user!._id, { displayName: state.user!.displayName, email: state.user!.email, avatarUrl: url })\r\n      setUser({ ...(state.user as any), avatarUrl: url })\r\n    } catch (err) {\r\n      console.error('Avatar URL update failed', err)\r\n    } finally {\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  // Handle input change\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target\r\n    setProfileData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }))\r\n  }\r\n\r\n\r\n  // Format date\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-KE', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    })\r\n  }\r\n\r\n  // Get severity color\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case 'low': return 'text-green-600 bg-green-100'\r\n      case 'medium': return 'text-yellow-600 bg-yellow-100'\r\n      case 'high': return 'text-red-600 bg-red-100'\r\n      default: return 'text-gray-600 bg-gray-100'\r\n    }\r\n  }\r\n\r\n  if (!state.user) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <User className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\r\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">{t('profile.pleaseLogin')}</h2>\r\n          <p className=\"text-gray-600 mb-4\">{t('profile.loginRequired')}</p>\r\n          <Link to=\"/login\" className=\"btn btn-primary\">\r\n            {t('profile.goToLogin')}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"px-6 py-8\">\r\n        {/* Header */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 mb-6\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"w-16 h-16 rounded-full overflow-hidden bg-primary-500 flex items-center justify-center\">\r\n              {avatarUrl ? (\r\n                <img src={avatarUrl} alt=\"Avatar\" className=\"w-16 h-16 object-cover\" />\r\n              ) : (\r\n                <User className=\"w-8 h-8 text-white\" />\r\n              )}\r\n            </div>\r\n            <div className=\"flex-1\">\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">{state.user.displayName}</h1>\r\n              <p className=\"text-gray-600\">{state.user.email}</p>\r\n              <p className=\"text-sm text-gray-500 capitalize\">{t('profile.role')}: {state.user.role}</p>\r\n            </div>\r\n            <button\r\n              onClick={() => setIsEditing(!isEditing)}\r\n              className=\"btn btn-ghost btn-sm\"\r\n            >\r\n              <Edit3 className=\"w-4 h-4 mr-2\" />\r\n              {isEditing ? t('common.cancel') : t('profile.personalInfo.editProfile')}\r\n            </button>\r\n            <div className=\"ml-4 flex flex-col space-y-2\">\r\n              <label className=\"btn btn-outline btn-sm cursor-pointer\">\r\n                {uploading ? t('profile.personalInfo.uploading') : t('profile.personalInfo.uploadPhoto')}\r\n                <input type=\"file\" accept=\"image/*\" className=\"hidden\" onChange={handlePhotoChange} />\r\n              </label>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <input\r\n                  type=\"url\"\r\n                  placeholder=\"Or enter image URL\"\r\n                  className=\"px-2 py-1 text-xs border rounded w-48\"\r\n                  onKeyPress={(e) => {\r\n                    if (e.key === 'Enter') {\r\n                      const target = e.target as HTMLInputElement;\r\n                      if (target.value) {\r\n                        handleAvatarUrlChange(target.value);\r\n                        target.value = '';\r\n                      }\r\n                    }\r\n                  }}\r\n                />\r\n                <button\r\n                  onClick={(e) => {\r\n                    const input = e.currentTarget.previousElementSibling as HTMLInputElement;\r\n                    if (input?.value) {\r\n                      handleAvatarUrlChange(input.value);\r\n                      input.value = '';\r\n                    }\r\n                  }}\r\n                  className=\"btn btn-ghost btn-xs\"\r\n                  disabled={uploading}\r\n                >\r\n                  Set\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 mb-6\">\r\n          <div className=\"border-b border-gray-200\">\r\n            <nav className=\"flex space-x-8 px-6\">\r\n              {[\r\n                { id: 'profile', name: t('profile.tabs.personal'), icon: User },\r\n                { id: 'reports', name: t('profile.tabs.reports'), icon: History },\r\n                { id: 'favorites', name: t('profile.tabs.favorites'), icon: Heart },\r\n                { id: 'analytics', name: t('profile.tabs.analytics'), icon: BarChart3 }\r\n              ].map((tab) => {\r\n                const Icon = tab.icon\r\n                return (\r\n                  <button\r\n                    key={tab.id}\r\n                    onClick={() => setActiveTab(tab.id as any)}\r\n                    className={`py-4 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\r\n                      activeTab === tab.id\r\n                        ? 'border-primary-500 text-primary-600'\r\n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                    }`}\r\n                  >\r\n                    <Icon className=\"w-4 h-4\" />\r\n                    <span>{tab.name}</span>\r\n                  </button>\r\n                )\r\n              })}\r\n            </nav>\r\n          </div>\r\n\r\n          <div className=\"p-6\">\r\n            {/* Profile Tab */}\r\n            {activeTab === 'profile' && (\r\n              <div>\r\n                {isEditing ? (\r\n                  <form onSubmit={handleProfileUpdate} className=\"space-y-4\">\r\n                    {error && (\r\n                      <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n                        <div className=\"flex items-center\">\r\n                          <AlertTriangle className=\"h-5 w-5 text-red-400 mr-2\" />\r\n                          <p className=\"text-sm text-red-800\">{error}</p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    \r\n                    {success && (\r\n                      <div className=\"p-4 bg-green-50 border border-green-200 rounded-lg\">\r\n                        <div className=\"flex items-center\">\r\n                          <CheckCircle className=\"h-5 w-5 text-green-400 mr-2\" />\r\n                          <p className=\"text-sm text-green-800\">Profile updated successfully!</p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n\r\n                    <div>\r\n                      <label htmlFor=\"displayName\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        {t('profile.personalInfo.displayName')}\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        id=\"displayName\"\r\n                        name=\"displayName\"\r\n                        value={profileData.displayName}\r\n                        onChange={handleInputChange}\r\n                        className=\"input w-full\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div>\r\n                      <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                        {t('profile.personalInfo.email')}\r\n                      </label>\r\n                      <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={profileData.email}\r\n                        onChange={handleInputChange}\r\n                        className=\"input w-full\"\r\n                        required\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"flex space-x-3\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        disabled={isLoading}\r\n                        className=\"btn btn-primary\"\r\n                      >\r\n                        {isLoading ? (\r\n                          <>\r\n                            <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                            Saving...\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <Save className=\"w-4 h-4 mr-2\" />\r\n                            Save Changes\r\n                          </>\r\n                        )}\r\n                      </button>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={() => setIsEditing(false)}\r\n                        className=\"btn btn-ghost\"\r\n                      >\r\n                        <X className=\"w-4 h-4 mr-2\" />\r\n                        Cancel\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                ) : (\r\n                  <div className=\"space-y-6\">\r\n                    <div>\r\n                      <h3 className=\"text-lg font-medium text-gray-900 mb-4\">{t('profile.accountInformation')}</h3>\r\n                      <dl className=\"grid grid-cols-1 gap-4 sm:grid-cols-2\">\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">{t('profile.personalInfo.displayName')}</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900\">{state.user.displayName}</dd>\r\n                        </div>\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">{t('profile.personalInfo.email')}</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900\">{state.user.email}</dd>\r\n                        </div>\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">{t('profile.accountType')}</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900 capitalize\">{state.user.role}</dd>\r\n                        </div>\r\n                        <div>\r\n                          <dt className=\"text-sm font-medium text-gray-500\">{t('profile.memberSince')}</dt>\r\n                          <dd className=\"mt-1 text-sm text-gray-900\">\r\n                            {new Date(state.user.createdAt || Date.now()).toLocaleDateString('en-KE')}\r\n                          </dd>\r\n                        </div>\r\n                      </dl>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Reports Tab */}\r\n            {activeTab === 'reports' && (\r\n              <div>\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h3 className=\"text-lg font-medium text-gray-900\">{t('profile.myTripReports')}</h3>\r\n                  <button\r\n                    onClick={loadReports}\r\n                    disabled={reportsLoading}\r\n                    className=\"flex items-center space-x-2 px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 disabled:opacity-50\"\r\n                  >\r\n                    <RefreshCw className={`w-4 h-4 ${reportsLoading ? 'animate-spin' : ''}`} />\r\n                    <span>{t('profile.refresh')}</span>\r\n                  </button>\r\n                </div>\r\n                {reportsLoading ? (\r\n                  <div className=\"flex items-center justify-center py-8\">\r\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-500\"></div>\r\n                  </div>\r\n                ) : reports.length === 0 ? (\r\n                  <div className=\"text-center py-8\">\r\n                    <History className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n                    <p className=\"text-gray-500 mb-4\">{t('profile.noReportsYet')}</p>\r\n                    <Link to=\"/report\" className=\"btn btn-primary\">\r\n                      {t('profile.submitFirstReport')}\r\n                    </Link>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"space-y-4\">\r\n                    {reports.map((report) => (\r\n                      <div key={report._id} className=\"border border-gray-200 rounded-lg p-4\">\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <div className=\"flex items-center space-x-2 mb-2\">\r\n                              <MapPin className=\"w-4 h-4 text-gray-400\" />\r\n                              <span className=\"text-sm font-medium text-gray-900\">\r\n                                Route {report.routeId}\r\n                              </span>\r\n                              <span className={`px-2 py-1 text-xs rounded-full ${getSeverityColor(report.severity)}`}>\r\n                                {report.severity}\r\n                              </span>\r\n                            </div>\r\n                            <p className=\"text-sm text-gray-600 mb-2\">{report.description}</p>\r\n                            <div className=\"flex items-center space-x-4 text-xs text-gray-500\">\r\n                              <div className=\"flex items-center\">\r\n                                <Clock className=\"w-3 h-3 mr-1\" />\r\n                                {formatDate(report.createdAt)}\r\n                              </div>\r\n                              <span className=\"capitalize\">Type: {report.reportType}</span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Favorites Tab */}\r\n            {activeTab === 'favorites' && (\r\n              <div>\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h3 className=\"text-lg font-medium text-gray-900\">{t('profile.favoriteRoutes')}</h3>\r\n                  <button\r\n                    onClick={loadFavorites}\r\n                    disabled={favoritesLoading}\r\n                    className=\"flex items-center space-x-2 px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200 disabled:opacity-50\"\r\n                  >\r\n                    <RefreshCw className={`w-4 h-4 ${favoritesLoading ? 'animate-spin' : ''}`} />\r\n                    <span>{t('profile.refresh')}</span>\r\n                  </button>\r\n                </div>\r\n                {favoritesLoading ? (\r\n                  <div className=\"flex items-center justify-center py-8\">\r\n                    <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-primary-500\"></div>\r\n                  </div>\r\n                ) : favoriteRoutes.length === 0 ? (\r\n                  <div className=\"text-center py-8\">\r\n                    <Heart className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n                    <p className=\"text-gray-500 mb-4\">{t('profile.noFavoriteRoutes')}</p>\r\n                    <Link to=\"/map\" className=\"btn btn-primary\">\r\n                      {t('profile.exploreRoutes')}\r\n                    </Link>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"space-y-4\">\r\n                    {favoriteRoutes.map((route) => (\r\n                      <div key={route._id} className=\"border border-gray-200 rounded-lg p-4\">\r\n                        <div className=\"flex items-start justify-between\">\r\n                          <div className=\"flex-1\">\r\n                            <h4 className=\"text-sm font-medium text-gray-900\">{route.name}</h4>\r\n                            <p className=\"text-sm text-gray-600\">{route.operator}</p>\r\n                            <p className=\"text-xs text-gray-500\">Route {route.routeNumber}</p>\r\n                          </div>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <Link\r\n                              to={`/map?route=${route._id}`}\r\n                              className=\"btn btn-ghost btn-sm\"\r\n                            >\r\n                              View\r\n                            </Link>\r\n                            <button\r\n                              onClick={() => removeFavorite(route._id)}\r\n                              className=\"btn btn-ghost btn-sm text-red-600 hover:text-red-700\"\r\n                            >\r\n                              <X className=\"w-4 h-4\" />\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            {/* Analytics Tab */}\r\n            {activeTab === 'analytics' && (\r\n              <div>\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h3 className=\"text-lg font-medium text-gray-900\">{t('profile.yourAnalytics')}</h3>\r\n                  <button\r\n                    onClick={loadAnalytics}\r\n                    className=\"flex items-center space-x-2 px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded-lg hover:bg-blue-200\"\r\n                  >\r\n                    <RefreshCw className=\"w-4 h-4\" />\r\n                    <span>{t('profile.refresh')}</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6\">\r\n                  <div className=\"bg-blue-50 rounded-lg p-4\">\r\n                    <div className=\"flex items-center\">\r\n                      <History className=\"w-8 h-8 text-blue-600\" />\r\n                      <div className=\"ml-3\">\r\n                        <p className=\"text-sm font-medium text-blue-600\">{t('profile.totalReports')}</p>\r\n                        <p className=\"text-2xl font-bold text-blue-900\">{analytics.totalReports}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bg-green-50 rounded-lg p-4\">\r\n                    <div className=\"flex items-center\">\r\n                      <Clock className=\"w-8 h-8 text-green-600\" />\r\n                      <div className=\"ml-3\">\r\n                        <p className=\"text-sm font-medium text-green-600\">{t('profile.thisMonth')}</p>\r\n                        <p className=\"text-2xl font-bold text-green-900\">{analytics.reportsThisMonth}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bg-purple-50 rounded-lg p-4\">\r\n                    <div className=\"flex items-center\">\r\n                      <Heart className=\"w-8 h-8 text-purple-600\" />\r\n                      <div className=\"ml-3\">\r\n                        <p className=\"text-sm font-medium text-purple-600\">{t('profile.favorites')}</p>\r\n                        <p className=\"text-2xl font-bold text-purple-900\">{analytics.favoriteRoutesCount}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"bg-yellow-50 rounded-lg p-4\">\r\n                    <div className=\"flex items-center\">\r\n                      <Star className=\"w-8 h-8 text-yellow-600\" />\r\n                      <div className=\"ml-3\">\r\n                        <p className=\"text-sm font-medium text-yellow-600\">{t('profile.avgRating')}</p>\r\n                        <p className=\"text-2xl font-bold text-yellow-900\">{analytics.averageRating.toFixed(1)}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {analytics.mostReportedRoute && (\r\n                  <div className=\"bg-gray-50 rounded-lg p-4\">\r\n                    <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Most Reported Route</h4>\r\n                    <p className=\"text-sm text-gray-600\">{analytics.mostReportedRoute}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["Profile","useTranslation","state","setUser","useApp","activeTab","setActiveTab","useState","isEditing","setIsEditing","isLoading","setIsLoading","error","setError","success","setSuccess","profileData","setProfileData","_a","_b","uploading","setUploading","avatarUrl","setAvatarUrl","_c","useEffect","_d","reports","setReports","reportsLoading","setReportsLoading","favoriteRoutes","setFavoriteRoutes","favoritesLoading","setFavoritesLoading","analytics","setAnalytics","loadReports","useCallback","response","apiService","loadFavorites","loadAnalytics","removeFavorite","routeId","handleProfileUpdate","e","handlePhotoChange","file","tempUrl","resp","url","err","handleAvatarUrlChange","handleInputChange","name","value","prev","formatDate","dateString","getSeverityColor","severity","jsxs","jsx","User","Edit3","target","input","History","Heart","BarChart3","tab","Icon","AlertTriangle","CheckCircle","Fragment","Save","X","RefreshCw","Link","report","MapPin","Clock","route","Star"],"mappings":"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"}