{"version":3,"file":"MapView-B77ztixg.js","sources":["../../src/hooks/useOptimizedApi.ts","../../src/screens/MapView.tsx"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react'\r\n\r\ninterface UseOptimizedApiOptions {\r\n  debounceMs?: number\r\n  cacheTime?: number\r\n  retryAttempts?: number\r\n  retryDelay?: number\r\n}\r\n\r\ninterface CacheEntry<T> {\r\n  data: T\r\n  timestamp: number\r\n  expiresAt: number\r\n}\r\n\r\nclass ApiCache {\r\n  private cache = new Map<string, CacheEntry<any>>()\r\n\r\n  set<T>(key: string, data: T, ttl: number): void {\r\n    const now = Date.now()\r\n    this.cache.set(key, {\r\n      data,\r\n      timestamp: now,\r\n      expiresAt: now + ttl\r\n    })\r\n  }\r\n\r\n  get<T>(key: string): T | null {\r\n    const entry = this.cache.get(key)\r\n    if (!entry) return null\r\n\r\n    if (Date.now() > entry.expiresAt) {\r\n      this.cache.delete(key)\r\n      return null\r\n    }\r\n\r\n    return entry.data\r\n  }\r\n\r\n  clear(): void {\r\n    this.cache.clear()\r\n  }\r\n\r\n  delete(key: string): void {\r\n    this.cache.delete(key)\r\n  }\r\n}\r\n\r\nconst apiCache = new ApiCache()\r\n\r\nexport function useOptimizedApi<T>(\r\n  apiCall: () => Promise<T>,\r\n  dependencies: any[] = [],\r\n  options: UseOptimizedApiOptions = {}\r\n) {\r\n  const {\r\n    debounceMs = 300,\r\n    cacheTime = 5 * 60 * 1000, // 5 minutes\r\n    retryAttempts = 3,\r\n    retryDelay = 1000\r\n  } = options\r\n\r\n  const [data, setData] = useState<T | null>(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState<Error | null>(null)\r\n  const [retryCount, setRetryCount] = useState(0)\r\n\r\n  const debounceRef = useRef<NodeJS.Timeout>()\r\n  const abortControllerRef = useRef<AbortController>()\r\n\r\n  const cacheKey = JSON.stringify(dependencies)\r\n\r\n  const executeApiCall = useCallback(async (isRetry = false) => {\r\n    // Check cache first\r\n    const cachedData = apiCache.get<T>(cacheKey)\r\n    if (cachedData && !isRetry) {\r\n      setData(cachedData)\r\n      return\r\n    }\r\n\r\n    // Cancel previous request\r\n    if (abortControllerRef.current) {\r\n      abortControllerRef.current.abort()\r\n    }\r\n\r\n    abortControllerRef.current = new AbortController()\r\n\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n\r\n      const result = await apiCall()\r\n      \r\n      // Cache the result\r\n      apiCache.set(cacheKey, result, cacheTime)\r\n      \r\n      setData(result)\r\n      setRetryCount(0)\r\n    } catch (err) {\r\n      const error = err as Error\r\n      \r\n      if (error.name === 'AbortError') {\r\n        return // Request was cancelled\r\n      }\r\n\r\n      setError(error)\r\n\r\n      // Retry logic\r\n      if (retryCount < retryAttempts) {\r\n        setRetryCount(prev => prev + 1)\r\n        setTimeout(() => {\r\n          executeApiCall(true)\r\n        }, retryDelay * Math.pow(2, retryCount)) // Exponential backoff\r\n      }\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [apiCall, cacheKey, cacheTime, retryAttempts, retryDelay, retryCount])\r\n\r\n  const debouncedExecute = useCallback(() => {\r\n    if (debounceRef.current) {\r\n      clearTimeout(debounceRef.current)\r\n    }\r\n\r\n    debounceRef.current = setTimeout(() => {\r\n      executeApiCall()\r\n    }, debounceMs)\r\n  }, [executeApiCall, debounceMs])\r\n\r\n  useEffect(() => {\r\n    debouncedExecute()\r\n\r\n    return () => {\r\n      if (debounceRef.current) {\r\n        clearTimeout(debounceRef.current)\r\n      }\r\n      if (abortControllerRef.current) {\r\n        abortControllerRef.current.abort()\r\n      }\r\n    }\r\n  }, [debouncedExecute])\r\n\r\n  const refetch = useCallback(() => {\r\n    apiCache.delete(cacheKey)\r\n    executeApiCall()\r\n  }, [cacheKey, executeApiCall])\r\n\r\n  const clearCache = useCallback(() => {\r\n    apiCache.clear()\r\n  }, [])\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n    retryCount,\r\n    refetch,\r\n    clearCache\r\n  }\r\n}\r\n\r\nexport default useOptimizedApi\r\n","import { useState, useCallback, useRef } from 'react'\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline, useMap } from 'react-leaflet'\r\nimport { MapPin, Clock, Star, Users, Filter, List, AlertCircle } from 'lucide-react'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport { useTranslation } from '../hooks/useTranslation'\r\nimport apiService from '../services/api'\r\nimport { RouteWithScores } from '../types'\r\nimport LoadingSpinner from '../components/LoadingSpinner'\r\nimport useOptimizedApi from '../hooks/useOptimizedApi'\r\n\r\n// Fix for default markers in react-leaflet\r\nimport L from 'leaflet'\r\n\r\nconst DefaultIcon = L.icon({\r\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\r\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41]\r\n})\r\n\r\n// Only set the default icon if L is available (not in test environment)\r\nif (typeof L !== 'undefined' && L.Marker) {\r\n  L.Marker.prototype.options.icon = DefaultIcon\r\n}\r\n\r\nexport default function MapView() {\r\n  const { t } = useTranslation()\r\n  const [selectedRoute, setSelectedRoute] = useState<RouteWithScores | null>(null)\r\n  const [showFilters, setShowFilters] = useState(false)\r\n  const [showListView, setShowListView] = useState(false)\r\n  const [filters, setFilters] = useState({\r\n    highReliability: true,\r\n    safeRoutes: true,\r\n    lowFare: false\r\n  })\r\n  const [mapInstance, setMapInstance] = useState<L.Map | null>(null)\r\n  const mapContainerRef = useRef<HTMLDivElement | null>(null)\r\n  const [showOnlySelectedOnMap, setShowOnlySelectedOnMap] = useState(false)\r\n\r\n  // Helper component to capture map instance from react-leaflet\r\n  function MapInstanceSetter() {\r\n    const map = useMap()\r\n    if (mapInstance !== map) {\r\n      setMapInstance(map)\r\n    }\r\n    return null\r\n  }\r\n\r\n  // Nairobi coordinates\r\n  const nairobiCenter: [number, number] = [-1.2921, 36.8219]\r\n\r\n  // Optimized API call for routes\r\n  const loadRoutes = useCallback(async () => {\r\n    const response = await apiService.getRoutes({\r\n      page: 1,\r\n      limit: 50,\r\n      sort: 'createdAt',\r\n      order: 'desc'\r\n    })\r\n\r\n    if (response.success && response.data) {\r\n      // Routes already include scores from the backend\r\n      return response.data.routes\r\n    }\r\n    return []\r\n  }, [])\r\n\r\n  const { data: routes, loading: isLoading, error, refetch } = useOptimizedApi(\r\n    loadRoutes,\r\n    [filters], // Re-fetch when filters change\r\n    {\r\n      debounceMs: 500,\r\n      cacheTime: 2 * 60 * 1000, // 2 minutes cache\r\n      retryAttempts: 2\r\n    }\r\n  )\r\n\r\n  const filteredRoutes = (() => {\r\n    try {\r\n      return (routes || []).filter(route => {\r\n        // Only apply filters if they are checked\r\n        if (filters.highReliability) {\r\n          if (!route.score || typeof route.score.reliability !== 'number' || route.score.reliability < 4) {\r\n            return false\r\n          }\r\n        }\r\n        if (filters.safeRoutes) {\r\n          if (!route.score || typeof route.score.safety !== 'number' || route.score.safety < 4) {\r\n            return false\r\n          }\r\n        }\r\n        if (filters.lowFare) {\r\n          if (typeof route.fare !== 'number' || route.fare >= 50) {\r\n            return false\r\n          }\r\n        }\r\n        return true\r\n      })\r\n    } catch (error) {\r\n      console.error('Error filtering routes:', error)\r\n      // Return all routes if filtering fails\r\n      return routes || []\r\n    }\r\n  })()\r\n\r\n  const getScoreColor = (score: number) => {\r\n    if (score >= 4.5) return '#22c55e' // green\r\n    if (score >= 3.5) return '#f59e0b' // yellow\r\n    if (score >= 2.5) return '#f97316' // orange\r\n    return '#ef4444' // red\r\n  }\r\n\r\n  const getRouteColor = (route: RouteWithScores) => {\r\n    if (route.score) {\r\n      return getScoreColor(route.score.overall)\r\n    }\r\n    return '#3b82f6' // default blue\r\n  }\r\n\r\n  const getRouteId = (route?: { _id?: any } | null): string => {\r\n    if (!route || route._id == null) return ''\r\n    return String(route._id)\r\n  }\r\n\r\n  const getRouteLatLngs = (route: RouteWithScores): [number, number][] => {\r\n    // Prefer path; fallback to stops\r\n    const latlngs: [number, number][] = []\r\n    if (route.path && Array.isArray(route.path) && route.path.length > 0) {\r\n      for (let i = 0; i < route.path.length; i += 2) {\r\n        if (i + 1 < route.path.length) {\r\n          const lat = route.path[i + 1]\r\n          const lng = route.path[i]\r\n          if (typeof lat === 'number' && typeof lng === 'number' && !isNaN(lat) && !isNaN(lng)) {\r\n            latlngs.push([lat, lng])\r\n          }\r\n        }\r\n      }\r\n    }\r\n    if (latlngs.length === 0 && route.stops && Array.isArray(route.stops)) {\r\n      for (const stop of route.stops) {\r\n        const c = stop?.coordinates\r\n        if (Array.isArray(c) && c.length === 2 && typeof c[0] === 'number' && typeof c[1] === 'number') {\r\n          // stored as [lng, lat]\r\n          latlngs.push([c[1], c[0]])\r\n        }\r\n      }\r\n    }\r\n    return latlngs\r\n  }\r\n\r\n  const focusRouteOnMap = (route: RouteWithScores) => {\r\n    setSelectedRoute(route)\r\n    // Ensure the main card is showing the map (not list)\r\n    setShowListView(false)\r\n    setShowOnlySelectedOnMap(true)\r\n    const latlngs = getRouteLatLngs(route)\r\n    if (mapInstance && latlngs.length > 0) {\r\n      const bounds = L.latLngBounds(latlngs.map(([lat, lng]) => L.latLng(lat, lng)))\r\n      mapInstance.fitBounds(bounds, { padding: [40, 40] })\r\n    }\r\n    // Scroll the map into view for better UX\r\n    try {\r\n      mapContainerRef.current?.scrollIntoView({ behavior: 'smooth', block: 'center' })\r\n    } catch {}\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <LoadingSpinner />\r\n          <p className=\"text-gray-600 mt-4\">{t('map.loading')}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\r\n          <p className=\"text-red-600 mb-4\">{error?.message || t('map.genericError')}</p>\r\n          <button\r\n            onClick={refetch}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n          >\r\n            {t('map.tryAgain')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"container py-6\">\r\n        <div className=\"flex flex-col lg:flex-row gap-6\">\r\n          {/* Map Container */}\r\n          <div className=\"flex-1\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h2 className=\"card-title\">{t('map.title')}</h2>\r\n                  <div className=\"flex space-x-2\">\r\n                    <button \r\n                      className={`btn btn-sm ${showFilters ? 'btn-primary' : 'btn-outline'}`}\r\n                      onClick={() => setShowFilters(!showFilters)}\r\n                      aria-label={t('map.toggleFilters')}\r\n                      aria-pressed={showFilters}\r\n                    >\r\n                      <Filter className=\"w-4 h-4 mr-2\" aria-hidden=\"true\" />\r\n                      {t('map.filter')}\r\n                    </button>\r\n                    <button \r\n                      className={`btn btn-sm ${showListView ? 'btn-primary' : 'btn-outline'}`}\r\n                      onClick={() => setShowListView(!showListView)}\r\n                      aria-label={t('map.toggleListView')}\r\n                      aria-pressed={showListView}\r\n                    >\r\n                      <List className=\"w-4 h-4 mr-2\" aria-hidden=\"true\" />\r\n                      {t('common.view')}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-content p-0\">\r\n                {/* Collapsible Filters */}\r\n                {showFilters && (\r\n                  <div className=\"p-4 bg-gray-50 border-b\">\r\n                    <div className=\"space-y-3\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <Filter className=\"h-4 w-4 text-gray-500\" aria-hidden=\"true\" />\r\n                        <span className=\"text-sm font-medium text-gray-700\">{t('map.quickFilters')}</span>\r\n                      </div>\r\n                      \r\n                      <fieldset className=\"flex flex-wrap gap-4\">\r\n                        <legend className=\"sr-only\">{t('map.routeFilters')}</legend>\r\n                        <label className=\"flex items-center\">\r\n                          <input \r\n                            type=\"checkbox\" \r\n                            className=\"rounded border-gray-300\" \r\n                            checked={filters.highReliability}\r\n                            onChange={(e) => setFilters(prev => ({ ...prev, highReliability: e.target.checked }))}\r\n                          />\r\n                          <span className=\"ml-2 text-sm text-gray-600\">{t('map.highReliability')}</span>\r\n                        </label>\r\n                        <label className=\"flex items-center\">\r\n                          <input \r\n                            type=\"checkbox\" \r\n                            className=\"rounded border-gray-300\" \r\n                            checked={filters.safeRoutes}\r\n                            onChange={(e) => setFilters(prev => ({ ...prev, safeRoutes: e.target.checked }))}\r\n                          />\r\n                          <span className=\"ml-2 text-sm text-gray-600\">{t('map.safeRoutes')}</span>\r\n                        </label>\r\n                        <label className=\"flex items-center\">\r\n                          <input \r\n                            type=\"checkbox\" \r\n                            className=\"rounded border-gray-300\" \r\n                            checked={filters.lowFare}\r\n                            onChange={(e) => setFilters(prev => ({ ...prev, lowFare: e.target.checked }))}\r\n                          />\r\n                          <span className=\"ml-2 text-sm text-gray-600\">{t('map.lowFare')}</span>\r\n                        </label>\r\n                      </fieldset>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Map or List View */}\r\n                {showListView ? (\r\n                  <div className=\"p-4\">\r\n                    <div className=\"space-y-4\">\r\n                      <div className=\"text-sm text-gray-600 mb-4\">\r\n                        {t('map.ofRoutes').replace('{current}', String(filteredRoutes.length)).replace('{total}', String(routes?.length || 0))}\r\n                      </div>\r\n                      {filteredRoutes.map((route) => (\r\n                        <div \r\n                          key={route._id}\r\n                          className={`p-4 border rounded-lg cursor-pointer transition-colors ${\r\n                            getRouteId(selectedRoute) === getRouteId(route)\r\n                              ? 'border-primary-500 bg-primary-50' \r\n                              : 'border-gray-200 hover:border-gray-300'\r\n                          }`}\r\n                          onClick={() => setSelectedRoute(route)}\r\n                        >\r\n                          <div className=\"flex justify-between items-start\">\r\n                            <div className=\"flex-1\">\r\n                              <h4 className=\"font-medium text-gray-900\">{route.name}</h4>\r\n                              <p className=\"text-sm text-gray-600\">{route.operator} - Route {route.routeNumber}</p>\r\n                              <div className=\"flex items-center mt-2 space-x-4 text-xs text-gray-500\">\r\n                                <div className=\"flex items-center\">\r\n                                  <Star className=\"w-3 h-3 text-yellow-500 mr-1\" />\r\n                                  <span>{route.score?.overall?.toFixed(1) || 'N/A'}</span>\r\n                                </div>\r\n                                <div className=\"flex items-center\">\r\n                                  <Clock className=\"w-3 h-3 text-blue-500 mr-1\" />\r\n                                  <span>{route.operatingHours.start} - {route.operatingHours.end}</span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"text-right\">\r\n                              <div className=\"text-lg font-semibold text-gray-900\">\r\n                                KES {route.fare}\r\n                              </div>\r\n                              <div \r\n                                className=\"w-4 h-4 rounded-full mt-1 ml-auto\" \r\n                                style={{ backgroundColor: getRouteColor(route) }}\r\n                              ></div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <div ref={mapContainerRef} className=\"map-container h-96\" role=\"img\" aria-label={t('map.mapAria')}>\r\n                    <MapContainer\r\n                      center={nairobiCenter}\r\n                      zoom={11}\r\n                      style={{ height: '100%', width: '100%' }}\r\n                    >\r\n                    <MapInstanceSetter />\r\n                    <TileLayer\r\n                      attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                    \r\n                    {/* Render routes */}\r\n                    {filteredRoutes\r\n                      .filter((route) => !showOnlySelectedOnMap || getRouteId(selectedRoute) === getRouteId(route))\r\n                      .map((route) => {\r\n                      try {\r\n                        // Safely process route path - convert flattened array to coordinate pairs\r\n                        const routePath: [number, number][] = []\r\n                        if (route.path && Array.isArray(route.path) && route.path.length > 0) {\r\n                          for (let i = 0; i < route.path.length; i += 2) {\r\n                            if (i + 1 < route.path.length) {\r\n                              const lat = route.path[i + 1]\r\n                              const lng = route.path[i]\r\n                              if (typeof lat === 'number' && typeof lng === 'number' && \r\n                                  !isNaN(lat) && !isNaN(lng)) {\r\n                                routePath.push([lat, lng])\r\n                              }\r\n                            }\r\n                          }\r\n                        }\r\n\r\n                        return (\r\n                          <div key={route._id}>\r\n                            {/* Route path */}\r\n                            {routePath.length > 0 && (\r\n                              <Polyline\r\n                                positions={routePath}\r\n                                color={getRouteColor(route)}\r\n                                weight={getRouteId(selectedRoute) === getRouteId(route) ? 7 : 4}\r\n                                opacity={getRouteId(selectedRoute) === getRouteId(route) ? 0.95 : 0.3}\r\n                              />\r\n                            )}\r\n                        \r\n                            {/* Route stops */}\r\n                            {route.stops && Array.isArray(route.stops) && route.stops.map((stop, index) => {\r\n                              try {\r\n                                const coords = stop.coordinates\r\n                                if (!coords || !Array.isArray(coords) || coords.length !== 2) {\r\n                                  return null\r\n                                }\r\n                                const [lat, lng] = coords\r\n                                if (typeof lat !== 'number' || typeof lng !== 'number' || \r\n                                    isNaN(lat) || isNaN(lng)) {\r\n                                  return null\r\n                                }\r\n                                \r\n                                return (\r\n                                  <Marker\r\n                                    key={index}\r\n                                    position={[lat, lng]}\r\n                                    icon={DefaultIcon}\r\n                                  >\r\n                                    <Popup>\r\n                                      <div className=\"p-2\">\r\n                                        <h3 className=\"font-semibold\">{stop.name}</h3>\r\n                                        <p className=\"text-sm text-gray-600\">{route.name}</p>\r\n                                        <p className=\"text-xs text-gray-500 mt-1\">{route.operator}</p>\r\n                                        <div className=\"mt-2 flex items-center space-x-4 text-xs text-gray-500\">\r\n                                          <div className=\"flex items-center\">\r\n                                            <Star className=\"h-3 w-3 mr-1 text-yellow-400\" />\r\n                                            {route.score?.overall?.toFixed(1) || 'N/A'}\r\n                                          </div>\r\n                                          <div className=\"flex items-center\">\r\n                                            <Users className=\"h-3 w-3 mr-1\" />\r\n                                            {route.score?.safety?.toFixed(1) || 'N/A'}\r\n                                          </div>\r\n                                          <div className=\"text-gray-600\">\r\n                                            {route.fare} KES\r\n                                          </div>\r\n                                        </div>\r\n                                      </div>\r\n                                    </Popup>\r\n                                  </Marker>\r\n                                )\r\n                              } catch (error) {\r\n                                console.error('Error rendering stop:', error)\r\n                                return null\r\n                              }\r\n                            })}\r\n                          </div>\r\n                        )\r\n                      } catch (error) {\r\n                        console.error('Error rendering route:', error)\r\n                        return null\r\n                      }\r\n                    })}\r\n                    </MapContainer>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Route List Sidebar */}\r\n          <div className=\"w-full lg:w-80\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h3 className=\"text-lg font-semibold\">{t('map.availableRoutes')}</h3>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  {t('map.ofRoutes').replace('{current}', String(filteredRoutes.length)).replace('{total}', String(routes?.length || 0))}\r\n                </p>\r\n              </div>\r\n              \r\n              {/* Filters */}\r\n              <div className=\"p-4 border-b\">\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Filter className=\"h-4 w-4 text-gray-500\" aria-hidden=\"true\" />\r\n                    <span className=\"text-sm font-medium text-gray-700\">Filters</span>\r\n                  </div>\r\n                  \r\n                  <fieldset className=\"space-y-2\">\r\n                    <legend className=\"sr-only\">{t('map.routeFilters')}</legend>\r\n                    <label className=\"flex items-center\">\r\n                      <input \r\n                        type=\"checkbox\" \r\n                        className=\"rounded border-gray-300\" \r\n                        checked={filters.highReliability}\r\n                        onChange={(e) => setFilters(prev => ({ ...prev, highReliability: e.target.checked }))}\r\n                        aria-describedby=\"high-reliability-desc\"\r\n                      />\r\n                      <span className=\"ml-2 text-sm text-gray-600\">{t('map.highReliability')}</span>\r\n                    </label>\r\n                    <label className=\"flex items-center\">\r\n                      <input \r\n                        type=\"checkbox\" \r\n                        className=\"rounded border-gray-300\" \r\n                        checked={filters.safeRoutes}\r\n                        onChange={(e) => setFilters(prev => ({ ...prev, safeRoutes: e.target.checked }))}\r\n                        aria-describedby=\"safe-routes-desc\"\r\n                      />\r\n                      <span className=\"ml-2 text-sm text-gray-600\">{t('map.safeRoutes')}</span>\r\n                    </label>\r\n                    <label className=\"flex items-center\">\r\n                      <input \r\n                        type=\"checkbox\" \r\n                        className=\"rounded border-gray-300\" \r\n                        checked={filters.lowFare}\r\n                        onChange={(e) => setFilters(prev => ({ ...prev, lowFare: e.target.checked }))}\r\n                        aria-describedby=\"low-fare-desc\"\r\n                      />\r\n                      <span className=\"ml-2 text-sm text-gray-600\">{t('map.lowFare')}</span>\r\n                    </label>\r\n                  </fieldset>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"card-content p-0\">\r\n                <div className=\"divide-y divide-gray-200\">\r\n                  {filteredRoutes.map((route) => (\r\n                    <div\r\n                      key={route._id}\r\n                      className={`p-4 cursor-pointer hover:bg-gray-50 transition-colors ${\r\n                        selectedRoute?._id === route._id ? 'bg-primary-50 border-r-4 border-primary-500' : ''\r\n                      }`}\r\n                      onClick={() => setSelectedRoute(route)}\r\n                      role=\"button\"\r\n                      tabIndex={0}\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === 'Enter' || e.key === ' ') {\r\n                          e.preventDefault()\r\n                          setSelectedRoute(route)\r\n                        }\r\n                      }}\r\n                      aria-label={`Select route ${route.name} by ${route.operator}`}\r\n                      aria-pressed={selectedRoute?._id === route._id}\r\n                    >\r\n                      <div className=\"flex items-start justify-between\">\r\n                        <div className=\"flex-1\">\r\n                          <h4 className=\"font-medium text-gray-900\">{route.name}</h4>\r\n                          <p className=\"text-sm text-gray-600 mt-1\">{route.operator}</p>\r\n                          <div className=\"flex items-center space-x-4 mt-2 text-sm text-gray-600\">\r\n                            <div className=\"flex items-center\">\r\n                              <Star className=\"w-4 h-4 text-yellow-500 mr-1\" aria-hidden=\"true\" />\r\n                              <span aria-label={`Overall rating: ${route.score?.overall?.toFixed(1) || 'N/A'} stars`}>\r\n                                {route.score?.overall?.toFixed(1) || 'N/A'}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                              <Clock className=\"w-4 h-4 text-blue-500 mr-1\" aria-hidden=\"true\" />\r\n                              <span aria-label={`Operating hours: ${route.operatingHours.start} to ${route.operatingHours.end}`}>\r\n                                {route.operatingHours.start} - {route.operatingHours.end}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                              <Users className=\"w-4 h-4 text-green-500 mr-1\" aria-hidden=\"true\" />\r\n                              <span aria-label={`Safety rating: ${route.score?.safety?.toFixed(1) || 'N/A'} stars`}>\r\n                                {route.score?.safety?.toFixed(1) || 'N/A'}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                          <div className=\"text-lg font-semibold text-gray-900\">\r\n                            KES {route.fare}\r\n                          </div>\r\n                          <div \r\n                            className=\"w-4 h-4 rounded-full mt-1\" \r\n                            style={{ backgroundColor: getRouteColor(route) }}\r\n                            aria-label={`Route quality indicator: ${getRouteColor(route)}`}\r\n                          ></div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Inline expandable details */}\r\n                      {getRouteId(selectedRoute) === getRouteId(route) && (\r\n                        <div className=\"mt-3 pt-3 border-t\">\r\n                          <dl className=\"grid grid-cols-2 gap-3 text-sm\">\r\n                            <div className=\"flex justify-between\"><dt className=\"text-gray-600\">{t('map.fare')}</dt><dd className=\"font-medium\">KES {route.fare}</dd></div>\r\n                            <div className=\"flex justify-between\"><dt className=\"text-gray-600\">{t('map.hours')}</dt><dd className=\"font-medium\">{route.operatingHours.start} - {route.operatingHours.end}</dd></div>\r\n                            <div className=\"flex justify-between\"><dt className=\"text-gray-600\">{t('map.stops')}</dt><dd className=\"font-medium\">{route.stops?.length || 0}</dd></div>\r\n                            <div className=\"flex justify-between\"><dt className=\"text-gray-600\">{t('map.routeNo')}</dt><dd className=\"font-medium\">{route.routeNumber || '—'}</dd></div>\r\n                          </dl>\r\n                          <div className=\"mt-3 flex gap-2 items-center flex-wrap\">\r\n                            <button className=\"btn btn-sm btn-primary\" onClick={(e) => { e.stopPropagation(); focusRouteOnMap(route) }}>\r\n                              <MapPin className=\"w-4 h-4 mr-1\" /> {t('map.viewOnMap')}\r\n                            </button>\r\n                            {/* Quick rating: 1-5 overall */}\r\n                            <div className=\"flex items-center gap-1\">\r\n                              {[1,2,3,4,5].map((v) => (\r\n                                <button\r\n                                  key={v}\r\n                                  className=\"p-1\"\r\n                                  title={`${t('map.rate')} ${v}`}\r\n                                  onClick={async (e) => {\r\n                                    e.stopPropagation()\r\n                                    try {\r\n                                      await apiService.rateRoute(route._id, { overall: v })\r\n                                      // Optimistically update UI\r\n                                      setSelectedRoute(prev => prev && prev._id === route._id ? { ...prev, score: { ...(prev.score || {}), overall: ((prev.score?.overall || 0) + v) / 2 } } as any : prev)\r\n                                      refetch()\r\n                                    } catch (err) {\r\n                                      console.error('Rating failed', err)\r\n                                      alert('Failed to submit rating')\r\n                                    }\r\n                                  }}\r\n                                >\r\n                              <Star className={`w-5 h-5 ${(Number(selectedRoute?.score?.overall) >= v) ? 'text-yellow-500' : 'text-gray-300'}`} />\r\n                                </button>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Inline details are shown within each route item; footer panel removed */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["ApiCache","__publicField","key","data","ttl","now","entry","apiCache","useOptimizedApi","apiCall","dependencies","options","debounceMs","cacheTime","retryAttempts","retryDelay","setData","useState","loading","setLoading","error","setError","retryCount","setRetryCount","debounceRef","useRef","abortControllerRef","cacheKey","executeApiCall","useCallback","isRetry","cachedData","result","err","prev","debouncedExecute","useEffect","refetch","clearCache","DefaultIcon","L","MapView","t","useTranslation","selectedRoute","setSelectedRoute","showFilters","setShowFilters","showListView","setShowListView","filters","setFilters","mapInstance","setMapInstance","mapContainerRef","showOnlySelectedOnMap","setShowOnlySelectedOnMap","MapInstanceSetter","map","useMap","nairobiCenter","loadRoutes","response","apiService","routes","isLoading","filteredRoutes","route","getScoreColor","score","getRouteColor","getRouteId","getRouteLatLngs","latlngs","i","lat","lng","stop","c","focusRouteOnMap","bounds","_a","jsxs","jsx","LoadingSpinner","AlertCircle","Filter","List","e","Star","_b","Clock","MapContainer","TileLayer","routePath","Polyline","index","coords","Marker","Popup","Users","_d","_c","_f","_e","_h","_g","_i","MapPin","v"],"mappings":"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"}