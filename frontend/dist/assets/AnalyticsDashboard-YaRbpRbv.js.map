{"version":3,"file":"AnalyticsDashboard-YaRbpRbv.js","sources":["../../src/screens/AnalyticsDashboard.tsx"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react'\r\nimport { \r\n  TrendingUp, \r\n  Clock, \r\n  Target, \r\n  AlertTriangle,\r\n  CheckCircle,\r\n  ArrowUp,\r\n  ArrowDown,\r\n  Minus,\r\n  Loader2,\r\n  RefreshCw,\r\n  Filter,\r\n  Calendar,\r\n  Zap,\r\n  DollarSign,\r\n  Star\r\n} from 'lucide-react'\r\nimport { useApp } from '../contexts/AppContext'\r\nimport { useTranslation } from '../hooks/useTranslation'\r\nimport apiService from '../services/api'\r\nimport { \r\n  RouteEfficiencyScore, \r\n  TravelTimePrediction, \r\n  AlternativeRoute, \r\n  TrendAnalysis, \r\n  DemandForecast, \r\n  UserRecommendation \r\n} from '../types'\r\n\r\ninterface SimpleRoute {\r\n  _id: string\r\n  name: string\r\n  routeNumber?: string\r\n  stops?: { name: string; coordinates: [number, number] }[]\r\n}\r\n\r\nexport default function AnalyticsDashboard() {\r\n  const { state } = useApp()\r\n  const { t } = useTranslation()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [activeTab, setActiveTab] = useState<'efficiency' | 'predictions' | 'trends' | 'recommendations'>('efficiency')\r\n  \r\n  // Data states\r\n  const [efficiencyScores, setEfficiencyScores] = useState<RouteEfficiencyScore[]>([])\r\n  const [travelPredictions, setTravelPredictions] = useState<TravelTimePrediction[]>([])\r\n  const [alternativeRoutes, setAlternativeRoutes] = useState<AlternativeRoute[]>([])\r\n  const [trendAnalysis, setTrendAnalysis] = useState<TrendAnalysis[]>([])\r\n  const [demandForecasts, setDemandForecasts] = useState<DemandForecast[]>([])\r\n  const [userRecommendations, setUserRecommendations] = useState<UserRecommendation | null>(null)\r\n  const [recsLimit, setRecsLimit] = useState<number>(10)\r\n\r\n  // Route and filter states\r\n  const [routes, setRoutes] = useState<SimpleRoute[]>([])\r\n  const [selectedRoute, setSelectedRoute] = useState<string>('')\r\n  const [availableStops, setAvailableStops] = useState<string[]>([])\r\n  const [fromStop, setFromStop] = useState<string>('')\r\n  const [toStop, setToStop] = useState<string>('')\r\n  const [timeSlot, setTimeSlot] = useState<string>('08:00')\r\n  const [period, setPeriod] = useState<'daily' | 'weekly' | 'monthly'>('weekly')\r\n\r\n  // Load list of routes once\r\n  useEffect(() => {\r\n    const loadRoutes = async () => {\r\n      try {\r\n        const res = await apiService.getRoutes({ page: 1, limit: 200, sort: 'name', order: 'asc' })\r\n        if (res.success && res.data && res.data.routes) {\r\n          const simple: SimpleRoute[] = (res.data.routes as any[]).map(r => ({\r\n            _id: r._id,\r\n            name: r.name,\r\n            routeNumber: r.routeNumber,\r\n            stops: r.stops\r\n          }))\r\n          setRoutes(simple)\r\n        } else {\r\n          setRoutes([])\r\n        }\r\n      } catch (e) {\r\n        console.error('Failed to load routes for analytics', e)\r\n        setRoutes([])\r\n      }\r\n    }\r\n    loadRoutes()\r\n  }, [])\r\n\r\n  // When route changes, derive stops\r\n  useEffect(() => {\r\n    const r = routes.find(rt => rt._id === selectedRoute)\r\n    const stops = r?.stops?.map(s => s.name) || []\r\n    setAvailableStops(stops)\r\n    // reset selections that may be invalid\r\n    setFromStop(prev => (stops.includes(prev) ? prev : ''))\r\n    setToStop(prev => (stops.includes(prev) ? prev : ''))\r\n  }, [selectedRoute, routes])\r\n\r\n  const loadAnalyticsData = useCallback(async () => {\r\n    if (!state.user?._id) {\r\n      setError(t('common.error'))\r\n      setIsLoading(false)\r\n      return\r\n    }\r\n\r\n    setIsLoading(true)\r\n    setError(null)\r\n\r\n    try {\r\n      // Fetch recommendations\r\n      const recommendationsResponse = await apiService.getUserRecommendations(state.user._id, { limit: recsLimit })\r\n      if (recommendationsResponse.success && recommendationsResponse.data) {\r\n        setUserRecommendations(recommendationsResponse.data)\r\n      } else {\r\n        setUserRecommendations(null)\r\n      }\r\n\r\n      // If a route is selected, load per-route analytics; otherwise, clear\r\n      if (selectedRoute) {\r\n        const [effResp, trendsResp, demandResp] = await Promise.all([\r\n          apiService.getRouteEfficiency(selectedRoute),\r\n          apiService.analyzeTrends(selectedRoute, period),\r\n          apiService.forecastDemand(selectedRoute, timeSlot)\r\n        ])\r\n\r\n        setEfficiencyScores(effResp.success && effResp.data ? [effResp.data] : [])\r\n        setTrendAnalysis(trendsResp.success && trendsResp.data ? [trendsResp.data] : [])\r\n        setDemandForecasts(demandResp.success && demandResp.data ? [demandResp.data] : [])\r\n      } else {\r\n        setEfficiencyScores([])\r\n        setTrendAnalysis([])\r\n        setDemandForecasts([])\r\n      }\r\n\r\n      // Alternative routes and travel predictions are user-triggered\r\n      setAlternativeRoutes([])\r\n      setTravelPredictions([])\r\n\r\n    } catch (error) {\r\n      console.error('Error loading analytics data:', error)\r\n      setError(t('analytics.errorTitle'))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }, [state.user?._id, selectedRoute, period, timeSlot, recsLimit])\r\n\r\n  useEffect(() => {\r\n    loadAnalyticsData()\r\n  }, [loadAnalyticsData])\r\n\r\n  const handlePredictTravel = async () => {\r\n    try {\r\n      if (!selectedRoute || !fromStop || !toStop) {\r\n      setError(t('analytics.selectRoute'))\r\n        return\r\n      }\r\n      setIsLoading(true)\r\n      setError(null)\r\n      const resp = await apiService.predictTravelTime(selectedRoute, fromStop, toStop, timeSlot)\r\n      setTravelPredictions(resp.success && resp.data ? [resp.data] : [])\r\n    } catch (e) {\r\n      console.error(e)\r\n      setError(t('common.error'))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleFindAlternatives = async () => {\r\n    try {\r\n      if (!fromStop || !toStop) {\r\n      setError(t('common.error'))\r\n        return\r\n      }\r\n      setIsLoading(true)\r\n      setError(null)\r\n      const resp = await apiService.findAlternativeRoutes(fromStop, toStop)\r\n      setAlternativeRoutes(resp.success && resp.data ? resp.data.alternatives : [])\r\n    } catch (e) {\r\n      console.error(e)\r\n      setError(t('common.error'))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const getTrendIcon = (trend: 'increasing' | 'decreasing' | 'stable' | 'improving' | 'declining' | 'safer' | 'riskier') => {\r\n    switch (trend) {\r\n      case 'increasing':\r\n      case 'improving':\r\n      case 'safer':\r\n        return <ArrowUp className=\"w-4 h-4 text-green-500\" />\r\n      case 'decreasing':\r\n      case 'declining':\r\n      case 'riskier':\r\n        return <ArrowDown className=\"w-4 h-4 text-red-500\" />\r\n      default:\r\n        return <Minus className=\"w-4 h-4 text-gray-500\" />\r\n    }\r\n  }\r\n\r\n  const getTrendColor = (trend: 'increasing' | 'decreasing' | 'stable' | 'improving' | 'declining' | 'safer' | 'riskier') => {\r\n    switch (trend) {\r\n      case 'increasing':\r\n      case 'improving':\r\n      case 'safer':\r\n        return 'text-green-600'\r\n      case 'decreasing':\r\n      case 'declining':\r\n      case 'riskier':\r\n        return 'text-red-600'\r\n      default:\r\n        return 'text-gray-600'\r\n    }\r\n  }\r\n\r\n  const getEfficiencyColor = (score: number) => {\r\n    if (score >= 80) return 'text-green-600'\r\n    if (score >= 60) return 'text-yellow-600'\r\n    return 'text-red-600'\r\n  }\r\n\r\n  const getEfficiencyBgColor = (score: number) => {\r\n    if (score >= 80) return 'bg-green-100'\r\n    if (score >= 60) return 'bg-yellow-100'\r\n    return 'bg-red-100'\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"text-center\">\r\n          <Loader2 className=\"h-10 w-10 text-primary-500 animate-spin\" />\r\n          <p className=\"text-gray-600 mt-4\">{t('analytics.loading')}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\r\n        <div className=\"text-center p-6 bg-white rounded-lg shadow-md\">\r\n          <AlertTriangle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\r\n          <h2 className=\"text-xl font-semibold text-gray-800 mb-2\">{t('analytics.errorTitle')}</h2>\r\n          <p className=\"text-gray-600 mb-4\">{error}</p>\r\n          <button \r\n            onClick={loadAnalyticsData} \r\n            className=\"btn btn-primary\"\r\n          >\r\n            <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n            {t('analytics.retry')}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"px-6 py-8\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">{t('analytics.headerTitle')}</h1>\r\n          <p className=\"text-gray-600\">{t('analytics.headerSubtitle')}</p>\r\n        </div>\r\n\r\n        {/* Tab Navigation */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"border-b border-gray-200\">\r\n            <nav className=\"-mb-px flex space-x-8\">\r\n              {[\r\n                { id: 'efficiency', name: t('analytics.tabs.efficiency'), icon: Target },\r\n                { id: 'predictions', name: t('analytics.tabs.predictions'), icon: Clock },\r\n                { id: 'trends', name: t('analytics.tabs.trends'), icon: TrendingUp },\r\n                { id: 'recommendations', name: t('analytics.tabs.recommendations'), icon: Star }\r\n              ].map((tab) => {\r\n                const Icon = tab.icon\r\n                return (\r\n                  <button\r\n                    key={tab.id}\r\n                    onClick={() => setActiveTab(tab.id as any)}\r\n                    className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\r\n                      activeTab === tab.id\r\n                        ? 'border-primary-500 text-primary-600'\r\n                        : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                    }`}\r\n                  >\r\n                    <Icon className=\"w-4 h-4\" />\r\n                    <span>{tab.name}</span>\r\n                  </button>\r\n                )\r\n              })}\r\n            </nav>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tab Content */}\r\n        <div className=\"space-y-6\">\r\n          {/* Route Efficiency Tab */}\r\n          {activeTab === 'efficiency' && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h2 className=\"text-2xl font-bold text-gray-900\">{t('analytics.efficiencyTitle')}</h2>\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <select\r\n                    value={selectedRoute}\r\n                    onChange={(e) => setSelectedRoute(e.target.value)}\r\n                    className=\"form-select\"\r\n                  >\r\n                    <option value=\"\">{t('analytics.selectRoute')}</option>\r\n                    {routes.map(r => (\r\n                      <option key={r._id} value={r._id}>\r\n                        {r.routeNumber ? `${r.routeNumber} - ${r.name}` : r.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <button className=\"btn btn-outline\" onClick={loadAnalyticsData} disabled={!selectedRoute}>\r\n                    <Filter className=\"w-4 h-4 mr-2\" />\r\n                    {t('analytics.refresh')}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {efficiencyScores.map((score) => (\r\n                  <div key={score.routeId} className=\"card p-6\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                      <h3 className=\"text-lg font-semibold text-gray-900\">{score.routeName}</h3>\r\n                      <div className={`px-3 py-1 rounded-full text-sm font-medium ${getEfficiencyBgColor(score.efficiencyScore)} ${getEfficiencyColor(score.efficiencyScore)}`}>\r\n                        {score.efficiencyScore}/100\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-4\">\r\n                      {/* Efficiency Factors */}\r\n                      <div className=\"grid grid-cols-2 gap-4\">\r\n                        {Object.entries(score.factors).map(([key, value]) => (\r\n                          <div key={key} className=\"flex items-center justify-between\">\r\n                            <span className=\"text-sm text-gray-600 capitalize\">{key}</span>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                              <div className=\"w-16 bg-gray-200 rounded-full h-2\">\r\n                                <div \r\n                                  className=\"bg-primary-500 h-2 rounded-full\" \r\n                                  style={{ width: `${value}%` }}\r\n                                ></div>\r\n                              </div>\r\n                              <span className=\"text-sm font-medium text-gray-900\">{value}</span>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n\r\n                      {/* Recommendations */}\r\n                      {score.recommendations.length > 0 && (\r\n                        <div>\r\n                          <h4 className=\"text-sm font-medium text-gray-900 mb-2\">{t('analytics.recommendations')}</h4>\r\n                          <ul className=\"space-y-1\">\r\n                            {score.recommendations.map((rec, index) => (\r\n                              <li key={index} className=\"flex items-start space-x-2 text-sm text-gray-600\">\r\n                                <CheckCircle className=\"w-4 h-4 text-green-500 mt-0.5 flex-shrink-0\" />\r\n                                <span>{rec}</span>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Travel Predictions Tab */}\r\n          {activeTab === 'predictions' && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h2 className=\"text-2xl font-bold text-gray-900\">{t('analytics.travelPredictionsTitle')}</h2>\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <select\r\n                    value={selectedRoute}\r\n                    onChange={(e) => setSelectedRoute(e.target.value)}\r\n                    className=\"form-select\"\r\n                  >\r\n                    <option value=\"\">{t('analytics.selectRoute')}</option>\r\n                    {routes.map(r => (\r\n                      <option key={r._id} value={r._id}>\r\n                        {r.routeNumber ? `${r.routeNumber} - ${r.name}` : r.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <select\r\n                    value={fromStop}\r\n                    onChange={(e) => setFromStop(e.target.value)}\r\n                    className=\"form-select\"\r\n                    disabled={!selectedRoute}\r\n                  >\r\n                    <option value=\"\">{t('analytics.fromStop')}</option>\r\n                    {availableStops.map(s => (\r\n                      <option key={s} value={s}>{s}</option>\r\n                    ))}\r\n                  </select>\r\n                  <select\r\n                    value={toStop}\r\n                    onChange={(e) => setToStop(e.target.value)}\r\n                    className=\"form-select\"\r\n                    disabled={!selectedRoute}\r\n                  >\r\n                    <option value=\"\">{t('analytics.toStop')}</option>\r\n                    {availableStops.map(s => (\r\n                      <option key={s} value={s}>{s}</option>\r\n                    ))}\r\n                  </select>\r\n                  <input\r\n                    type=\"time\"\r\n                    value={timeSlot}\r\n                    onChange={(e) => setTimeSlot(e.target.value)}\r\n                    className=\"form-input\"\r\n                  />\r\n                  <button className=\"btn btn-primary\" onClick={handlePredictTravel} disabled={!selectedRoute || !fromStop || !toStop}>\r\n                    <Zap className=\"w-4 h-4 mr-2\" />\r\n                    {t('analytics.predict')}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {travelPredictions.map((prediction, index) => (\r\n                  <div key={index} className=\"card p-6\">\r\n                    <div className=\"flex items-center justify-between mb-4\">\r\n                      <h3 className=\"text-lg font-semibold text-gray-900\">\r\n                        {prediction.fromStop} → {prediction.toStop}\r\n                      </h3>\r\n                      <div className=\"text-right\">\r\n                        <div className=\"text-2xl font-bold text-primary-600\">{prediction.predictedTime} {t('analytics.minutesShort')}</div>\r\n                        <div className=\"text-sm text-gray-500\">{prediction.confidence}% {t('analytics.confidence')}</div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"space-y-4\">\r\n                      {/* Alternative Times */}\r\n                      <div className=\"grid grid-cols-3 gap-4\">\r\n                        <div className=\"text-center p-3 bg-green-50 rounded-lg\">\r\n                          <div className=\"text-lg font-semibold text-green-600\">{prediction.alternativeTimes.optimistic} {t('analytics.minutesShort')}</div>\r\n                          <div className=\"text-xs text-green-600\">{t('analytics.optimistic')}</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-blue-50 rounded-lg\">\r\n                          <div className=\"text-lg font-semibold text-blue-600\">{prediction.alternativeTimes.realistic} {t('analytics.minutesShort')}</div>\r\n                          <div className=\"text-xs text-blue-600\">{t('analytics.realistic')}</div>\r\n                        </div>\r\n                        <div className=\"text-center p-3 bg-red-50 rounded-lg\">\r\n                          <div className=\"text-lg font-semibold text-red-600\">{prediction.alternativeTimes.pessimistic} {t('analytics.minutesShort')}</div>\r\n                          <div className=\"text-xs text-red-600\">{t('analytics.pessimistic')}</div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Factors */}\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">{t('analytics.factors')}</h4>\r\n                        <div className=\"grid grid-cols-2 gap-2 text-sm\">\r\n                          {Object.entries(prediction.factors).map(([key, value]) => (\r\n                            <div key={key} className=\"flex justify-between\">\r\n                              <span className=\"text-gray-600 capitalize\">{key.replace(/([A-Z])/g, ' $1')}</span>\r\n                              <span className=\"font-medium\">{value.toFixed(2)}x</span>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n\r\n              {/* Alternative Routes */}\r\n              <div>\r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <h3 className=\"text-xl font-semibold text-gray-900\">{t('analytics.alternativeRoutesTitle')}</h3>\r\n                  <div className=\"flex items-center space-x-3\">\r\n                    <select\r\n                      value={fromStop}\r\n                      onChange={(e) => setFromStop(e.target.value)}\r\n                      className=\"form-select\"\r\n                      disabled={!selectedRoute}\r\n                    >\r\n                      <option value=\"\">{t('analytics.fromStop')}</option>\r\n                      {availableStops.map(s => (\r\n                        <option key={s} value={s}>{s}</option>\r\n                      ))}\r\n                    </select>\r\n                    <select\r\n                      value={toStop}\r\n                      onChange={(e) => setToStop(e.target.value)}\r\n                      className=\"form-select\"\r\n                      disabled={!selectedRoute}\r\n                    >\r\n                      <option value=\"\">{t('analytics.toStop')}</option>\r\n                      {availableStops.map(s => (\r\n                        <option key={s} value={s}>{s}</option>\r\n                      ))}\r\n                    </select>\r\n                    <button className=\"btn btn-outline\" onClick={handleFindAlternatives} disabled={!fromStop || !toStop}>\r\n                      <Filter className=\"w-4 h-4 mr-2\" />\r\n                      {t('analytics.find')}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                {alternativeRoutes.length > 0 && (\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                    {alternativeRoutes.map((route, index) => (\r\n                      <div key={index} className=\"card p-4\">\r\n                        <div className=\"flex items-center justify-between mb-2\">\r\n                          <h4 className=\"font-semibold text-gray-900\">{route.routeName}</h4>\r\n                          <div className=\"text-sm text-gray-500\">{route.efficiency}/100</div>\r\n                        </div>\r\n                        <div className=\"flex items-center space-x-4 text-sm text-gray-600\">\r\n                          <div className=\"flex items-center space-x-1\">\r\n                            <Clock className=\"w-4 h-4\" />\r\n                            <span>{route.totalTime} min</span>\r\n                          </div>\r\n                          <div className=\"flex items-center space-x-1\">\r\n                            <DollarSign className=\"w-4 h-4\" />\r\n                            <span>Ksh {route.totalCost}</span>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"mt-2\">\r\n                          <div className=\"text-xs text-gray-500\">{t('analytics.reasons')}: {route.reasons.join(', ')}</div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Trend Analysis Tab */}\r\n          {activeTab === 'trends' && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h2 className=\"text-2xl font-bold text-gray-900\">{t('analytics.trendAnalysisTitle')}</h2>\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <select\r\n                    value={selectedRoute}\r\n                    onChange={(e) => setSelectedRoute(e.target.value)}\r\n                    className=\"form-select\"\r\n                  >\r\n                    <option value=\"\">{t('analytics.selectRoute')}</option>\r\n                    {routes.map(r => (\r\n                      <option key={r._id} value={r._id}>\r\n                        {r.routeNumber ? `${r.routeNumber} - ${r.name}` : r.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <select\r\n                    value={period}\r\n                    onChange={(e) => setPeriod(e.target.value as any)}\r\n                    className=\"form-select\"\r\n                  >\r\n                    <option value=\"daily\">{t('analytics.periodDaily')}</option>\r\n                    <option value=\"weekly\">{t('analytics.periodWeekly')}</option>\r\n                    <option value=\"monthly\">{t('analytics.periodMonthly')}</option>\r\n                  </select>\r\n                  <button className=\"btn btn-outline\" onClick={loadAnalyticsData} disabled={!selectedRoute}>\r\n                    <Calendar className=\"w-4 h-4 mr-2\" />\r\n                    {t('analytics.update')}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                {trendAnalysis.map((trend, index) => (\r\n                  <div key={index} className=\"card p-6\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">{t('analytics.routeTrends')} ({trend.period})</h3>\r\n                    \r\n                    <div className=\"space-y-4\">\r\n                      {Object.entries(trend.trends).map(([key, data]) => (\r\n                        <div key={key} className=\"border rounded-lg p-4\">\r\n                          <div className=\"flex items-center justify-between mb-2\">\r\n                            <span className=\"font-medium text-gray-900 capitalize\">{key}</span>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                              {getTrendIcon(data.trend)}\r\n                              <span className={`text-sm font-medium ${getTrendColor(data.trend)}`}>\r\n                                {data.change > 0 ? '+' : ''}{data.change.toFixed(1)}%\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"flex items-center justify-between text-sm text-gray-600\">\r\n                            <span>{t('analytics.current')}: {data.current}</span>\r\n                            <span>{t('analytics.previous')}: {data.previous}</span>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n\r\n                    {trend.insights.length > 0 && (\r\n                      <div className=\"mt-4\">\r\n                        <h4 className=\"text-sm font-medium text-gray-900 mb-2\">{t('analytics.insights')}</h4>\r\n                        <ul className=\"space-y-1\">\r\n                          {trend.insights.map((insight, idx) => (\r\n                            <li key={idx} className=\"flex items-start space-x-2 text-sm text-gray-600\">\r\n                              <AlertTriangle className=\"w-4 h-4 text-blue-500 mt-0.5 flex-shrink-0\" />\r\n                              <span>{insight}</span>\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Recommendations Tab */}\r\n          {activeTab === 'recommendations' && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h2 className=\"text-2xl font-bold text-gray-900\">{t('analytics.recommendationsTitle')}</h2>\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <label className=\"text-sm text-gray-600\">{t('analytics.recommendedRoutes')}</label>\r\n                  <select\r\n                    value={recsLimit}\r\n                    onChange={(e) => setRecsLimit(Number(e.target.value))}\r\n                    className=\"form-select\"\r\n                  >\r\n                    {[5,10,15,20,30,50].map(n => (\r\n                      <option key={n} value={n}>{n}</option>\r\n                    ))}\r\n                  </select>\r\n                  <button className=\"btn btn-primary\" onClick={loadAnalyticsData}>\r\n                    <RefreshCw className=\"w-4 h-4 mr-2\" />\r\n                    {t('analytics.refresh')}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {userRecommendations && (\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  {/* User Preferences */}\r\n                  <div className=\"card p-6\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">{t('analytics.yourPreferences')}</h3>\r\n                    <div className=\"space-y-3\">\r\n                      {Object.entries(userRecommendations.preferences).map(([key, value]) => (\r\n                        <div key={key} className=\"flex items-center justify-between\">\r\n                          <span className=\"text-sm text-gray-600 capitalize\">\r\n                            {key === 'efficiency' && t('analytics.prefEfficiency')}\r\n                            {key === 'safety' && t('analytics.prefSafety')}\r\n                            {key === 'cost' && t('analytics.prefCost')}\r\n                            {key === 'convenience' && t('analytics.prefConvenience')}\r\n                          </span>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <div className=\"w-20 bg-gray-200 rounded-full h-2\">\r\n                              <div \r\n                                className=\"bg-primary-500 h-2 rounded-full\" \r\n                                style={{ width: `${value * 100}%` }}\r\n                              ></div>\r\n                            </div>\r\n                            <span className=\"text-sm font-medium text-gray-900\">{Math.round(value * 100)}%</span>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Recommendations */}\r\n                  <div className=\"card p-6\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">{t('analytics.recommendedRoutes')}</h3>\r\n                    <div className=\"space-y-3\">\r\n                      {userRecommendations.recommendations.map((rec, index) => (\r\n                        <div key={index} className=\"border rounded-lg p-4 hover:bg-gray-50\">\r\n                          <div className=\"flex items-center justify-between mb-2\">\r\n                            <h4 className=\"font-medium text-gray-900\">{rec.routeName}</h4>\r\n                            <div className=\"flex items-center space-x-2\">\r\n                              <Star className=\"w-4 h-4 text-yellow-500\" />\r\n                              <span className=\"text-sm font-medium text-gray-900\">{rec.score}/100</span>\r\n                            </div>\r\n                          </div>\r\n                          <p className=\"text-sm text-gray-600 mb-2\">\r\n                            {rec.reason === 'Good performance' ? t('analytics.goodPerformance') : rec.reason}\r\n                          </p>\r\n                          <div className=\"flex items-center space-x-2\">\r\n                            <span className={`px-2 py-1 text-xs rounded-full ${\r\n                              rec.type === 'efficiency' ? 'bg-blue-100 text-blue-800' :\r\n                              rec.type === 'safety' ? 'bg-green-100 text-green-800' :\r\n                              rec.type === 'cost' ? 'bg-yellow-100 text-yellow-800' :\r\n                              'bg-purple-100 text-purple-800'\r\n                            }`}>\r\n                              {rec.type === 'efficiency' && t('analytics.prefEfficiency')}\r\n                              {rec.type === 'safety' && t('analytics.prefSafety')}\r\n                              {rec.type === 'cost' && t('analytics.prefCost')}\r\n                              {rec.type === 'convenience' && t('analytics.prefConvenience')}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Demand Forecasts */}\r\n              {demandForecasts.length > 0 && (\r\n                <div>\r\n                  <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">{t('analytics.demandForecastsTitle')}</h3>\r\n                  <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4\">\r\n                    {demandForecasts.map((forecast, index) => (\r\n                      <div key={index} className=\"card p-4\">\r\n                        <div className=\"flex items-center justify-between mb-2\">\r\n                          <h4 className=\"font-semibold text-gray-900\">{t('analytics.timeSlot')}: {forecast.timeSlot}</h4>\r\n                          <div className=\"text-right\">\r\n                            <div className=\"text-lg font-bold text-primary-600\">{forecast.predictedDemand}%</div>\r\n                            <div className=\"text-sm text-gray-500\">{forecast.confidence}% {t('analytics.confidence')}</div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"w-full bg-gray-200 rounded-full h-2 mb-2\">\r\n                          <div \r\n                            className=\"bg-primary-500 h-2 rounded-full\" \r\n                            style={{ width: `${forecast.predictedDemand}%` }}\r\n                          ></div>\r\n                        </div>\r\n                        {forecast.recommendations.length > 0 && (\r\n                          <div className=\"text-sm text-gray-600\">\r\n                            {forecast.recommendations[0]}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["AnalyticsDashboard","state","useApp","t","useTranslation","isLoading","setIsLoading","useState","error","setError","activeTab","setActiveTab","efficiencyScores","setEfficiencyScores","travelPredictions","setTravelPredictions","alternativeRoutes","setAlternativeRoutes","trendAnalysis","setTrendAnalysis","demandForecasts","setDemandForecasts","userRecommendations","setUserRecommendations","recsLimit","setRecsLimit","routes","setRoutes","selectedRoute","setSelectedRoute","availableStops","setAvailableStops","fromStop","setFromStop","toStop","setToStop","timeSlot","setTimeSlot","period","setPeriod","useEffect","res","apiService","simple","r","e","rt","stops","_a","s","prev","loadAnalyticsData","useCallback","recommendationsResponse","effResp","trendsResp","demandResp","handlePredictTravel","resp","handleFindAlternatives","getTrendIcon","trend","jsx","ArrowUp","ArrowDown","Minus","getTrendColor","getEfficiencyColor","score","getEfficiencyBgColor","jsxs","Loader2","AlertTriangle","RefreshCw","Target","Clock","TrendingUp","Star","tab","Icon","Filter","key","value","rec","index","CheckCircle","Zap","prediction","route","DollarSign","Calendar","data","insight","idx","n","forecast"],"mappings":"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"}