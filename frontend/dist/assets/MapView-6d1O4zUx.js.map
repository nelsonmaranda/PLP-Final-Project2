{"version":3,"file":"MapView-6d1O4zUx.js","sources":["../../src/hooks/useOptimizedApi.ts","../../src/utils/memoryOptimization.ts","../../src/screens/MapView.tsx"],"sourcesContent":["import { useState, useEffect, useCallback, useRef } from 'react'\r\n\r\ninterface UseOptimizedApiOptions {\r\n  debounceMs?: number\r\n  cacheTime?: number\r\n  retryAttempts?: number\r\n  retryDelay?: number\r\n}\r\n\r\ninterface CacheEntry<T> {\r\n  data: T\r\n  timestamp: number\r\n  expiresAt: number\r\n}\r\n\r\nclass ApiCache {\r\n  private cache = new Map<string, CacheEntry<any>>()\r\n\r\n  set<T>(key: string, data: T, ttl: number): void {\r\n    const now = Date.now()\r\n    this.cache.set(key, {\r\n      data,\r\n      timestamp: now,\r\n      expiresAt: now + ttl\r\n    })\r\n  }\r\n\r\n  get<T>(key: string): T | null {\r\n    const entry = this.cache.get(key)\r\n    if (!entry) return null\r\n\r\n    if (Date.now() > entry.expiresAt) {\r\n      this.cache.delete(key)\r\n      return null\r\n    }\r\n\r\n    return entry.data\r\n  }\r\n\r\n  clear(): void {\r\n    this.cache.clear()\r\n  }\r\n\r\n  delete(key: string): void {\r\n    this.cache.delete(key)\r\n  }\r\n}\r\n\r\nconst apiCache = new ApiCache()\r\n\r\nexport function useOptimizedApi<T>(\r\n  apiCall: () => Promise<T>,\r\n  dependencies: any[] = [],\r\n  options: UseOptimizedApiOptions = {}\r\n) {\r\n  const {\r\n    debounceMs = 300,\r\n    cacheTime = 5 * 60 * 1000, // 5 minutes\r\n    retryAttempts = 3,\r\n    retryDelay = 1000\r\n  } = options\r\n\r\n  const [data, setData] = useState<T | null>(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState<Error | null>(null)\r\n  const [retryCount, setRetryCount] = useState(0)\r\n\r\n  const debounceRef = useRef<NodeJS.Timeout>()\r\n  const abortControllerRef = useRef<AbortController>()\r\n\r\n  const cacheKey = JSON.stringify(dependencies)\r\n\r\n  const executeApiCall = useCallback(async (isRetry = false) => {\r\n    // Check cache first\r\n    const cachedData = apiCache.get<T>(cacheKey)\r\n    if (cachedData && !isRetry) {\r\n      setData(cachedData)\r\n      return\r\n    }\r\n\r\n    // Cancel previous request\r\n    if (abortControllerRef.current) {\r\n      abortControllerRef.current.abort()\r\n    }\r\n\r\n    abortControllerRef.current = new AbortController()\r\n\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n\r\n      const result = await apiCall()\r\n      \r\n      // Cache the result\r\n      apiCache.set(cacheKey, result, cacheTime)\r\n      \r\n      setData(result)\r\n      setRetryCount(0)\r\n    } catch (err) {\r\n      const error = err as Error\r\n      \r\n      if (error.name === 'AbortError') {\r\n        return // Request was cancelled\r\n      }\r\n\r\n      setError(error)\r\n\r\n      // Retry logic\r\n      if (retryCount < retryAttempts) {\r\n        setRetryCount(prev => prev + 1)\r\n        setTimeout(() => {\r\n          executeApiCall(true)\r\n        }, retryDelay * Math.pow(2, retryCount)) // Exponential backoff\r\n      }\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [apiCall, cacheKey, cacheTime, retryAttempts, retryDelay, retryCount])\r\n\r\n  const debouncedExecute = useCallback(() => {\r\n    if (debounceRef.current) {\r\n      clearTimeout(debounceRef.current)\r\n    }\r\n\r\n    debounceRef.current = setTimeout(() => {\r\n      executeApiCall()\r\n    }, debounceMs)\r\n  }, [executeApiCall, debounceMs])\r\n\r\n  useEffect(() => {\r\n    debouncedExecute()\r\n\r\n    return () => {\r\n      if (debounceRef.current) {\r\n        clearTimeout(debounceRef.current)\r\n      }\r\n      if (abortControllerRef.current) {\r\n        abortControllerRef.current.abort()\r\n      }\r\n    }\r\n  }, [debouncedExecute])\r\n\r\n  const refetch = useCallback(() => {\r\n    apiCache.delete(cacheKey)\r\n    executeApiCall()\r\n  }, [cacheKey, executeApiCall])\r\n\r\n  const clearCache = useCallback(() => {\r\n    apiCache.clear()\r\n  }, [])\r\n\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n    retryCount,\r\n    refetch,\r\n    clearCache\r\n  }\r\n}\r\n\r\nexport default useOptimizedApi\r\n","// Memory optimization utilities\r\n\r\nexport class MemoryManager {\r\n  private static instance: MemoryManager\r\n  private cache = new Map<string, any>()\r\n  private maxCacheSize = 50 // Maximum number of items in cache\r\n  private maxMemoryUsage = 50 * 1024 * 1024 // 50MB limit\r\n  private currentMemoryUsage = 0\r\n\r\n  static getInstance(): MemoryManager {\r\n    if (!MemoryManager.instance) {\r\n      MemoryManager.instance = new MemoryManager()\r\n    }\r\n    return MemoryManager.instance\r\n  }\r\n\r\n  // Estimate memory usage of an object\r\n  private estimateMemoryUsage(obj: any): number {\r\n    if (obj === null || obj === undefined) return 0\r\n    \r\n    if (typeof obj === 'string') return obj.length * 2 // 2 bytes per character\r\n    if (typeof obj === 'number') return 8\r\n    if (typeof obj === 'boolean') return 4\r\n    \r\n    if (Array.isArray(obj)) {\r\n      return obj.reduce((total, item) => total + this.estimateMemoryUsage(item), 0)\r\n    }\r\n    \r\n    if (typeof obj === 'object') {\r\n      let total = 0\r\n      for (const key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          total += key.length * 2 // Key size\r\n          total += this.estimateMemoryUsage(obj[key])\r\n        }\r\n      }\r\n      return total\r\n    }\r\n    \r\n    return 0\r\n  }\r\n\r\n  // Add item to cache with memory management\r\n  set(key: string, value: any): void {\r\n    const memoryUsage = this.estimateMemoryUsage(value)\r\n    \r\n    // Check if adding this item would exceed memory limit\r\n    if (this.currentMemoryUsage + memoryUsage > this.maxMemoryUsage) {\r\n      this.cleanup()\r\n    }\r\n    \r\n    // Remove existing item if it exists\r\n    if (this.cache.has(key)) {\r\n      this.remove(key)\r\n    }\r\n    \r\n    // Add new item\r\n    this.cache.set(key, {\r\n      value,\r\n      memoryUsage,\r\n      timestamp: Date.now()\r\n    })\r\n    \r\n    this.currentMemoryUsage += memoryUsage\r\n    \r\n    // Enforce max cache size\r\n    if (this.cache.size > this.maxCacheSize) {\r\n      this.evictOldest()\r\n    }\r\n  }\r\n\r\n  // Get item from cache\r\n  get(key: string): any | null {\r\n    const item = this.cache.get(key)\r\n    if (item) {\r\n      // Update access time\r\n      item.timestamp = Date.now()\r\n      return item.value\r\n    }\r\n    return null\r\n  }\r\n\r\n  // Remove item from cache\r\n  remove(key: string): void {\r\n    const item = this.cache.get(key)\r\n    if (item) {\r\n      this.currentMemoryUsage -= item.memoryUsage\r\n      this.cache.delete(key)\r\n    }\r\n  }\r\n\r\n  // Clean up cache by removing oldest items\r\n  private cleanup(): void {\r\n    const items = Array.from(this.cache.entries())\r\n      .map(([key, item]) => ({ key, ...item }))\r\n      .sort((a, b) => a.timestamp - b.timestamp)\r\n\r\n    // Remove oldest 25% of items\r\n    const itemsToRemove = Math.ceil(items.length * 0.25)\r\n    for (let i = 0; i < itemsToRemove; i++) {\r\n      this.remove(items[i].key)\r\n    }\r\n  }\r\n\r\n  // Evict oldest item\r\n  private evictOldest(): void {\r\n    let oldestKey = ''\r\n    let oldestTime = Date.now()\r\n    \r\n    for (const [key, item] of this.cache.entries()) {\r\n      if (item.timestamp < oldestTime) {\r\n        oldestTime = item.timestamp\r\n        oldestKey = key\r\n      }\r\n    }\r\n    \r\n    if (oldestKey) {\r\n      this.remove(oldestKey)\r\n    }\r\n  }\r\n\r\n  // Clear all cache\r\n  clear(): void {\r\n    this.cache.clear()\r\n    this.currentMemoryUsage = 0\r\n  }\r\n\r\n  // Get cache statistics\r\n  getStats() {\r\n    return {\r\n      size: this.cache.size,\r\n      maxSize: this.maxCacheSize,\r\n      memoryUsage: this.currentMemoryUsage,\r\n      maxMemoryUsage: this.maxMemoryUsage,\r\n      memoryUsagePercent: (this.currentMemoryUsage / this.maxMemoryUsage) * 100\r\n    }\r\n  }\r\n}\r\n\r\n// Debounce utility for performance\r\nexport function debounce<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  wait: number\r\n): (...args: Parameters<T>) => void {\r\n  let timeout: NodeJS.Timeout | null = null\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    if (timeout) {\r\n      clearTimeout(timeout)\r\n    }\r\n    \r\n    timeout = setTimeout(() => {\r\n      func(...args)\r\n    }, wait)\r\n  }\r\n}\r\n\r\n// Throttle utility for performance\r\nexport function throttle<T extends (...args: any[]) => any>(\r\n  func: T,\r\n  limit: number\r\n): (...args: Parameters<T>) => void {\r\n  let inThrottle: boolean\r\n  \r\n  return (...args: Parameters<T>) => {\r\n    if (!inThrottle) {\r\n      func(...args)\r\n      inThrottle = true\r\n      setTimeout(() => inThrottle = false, limit)\r\n    }\r\n  }\r\n}\r\n\r\n// Memory leak detection\r\nexport function detectMemoryLeaks(): void {\r\n  if (process.env.NODE_ENV === 'development') {\r\n    const memoryManager = MemoryManager.getInstance()\r\n    const stats = memoryManager.getStats()\r\n    \r\n    if (stats.memoryUsagePercent > 80) {\r\n      console.warn('High memory usage detected:', stats)\r\n    }\r\n  }\r\n}\r\n\r\n// Cleanup utility for components\r\nexport function createCleanupManager() {\r\n  const cleanupFunctions: (() => void)[] = []\r\n  \r\n  return {\r\n    add: (fn: () => void) => {\r\n      cleanupFunctions.push(fn)\r\n    },\r\n    cleanup: () => {\r\n      cleanupFunctions.forEach(fn => fn())\r\n      cleanupFunctions.length = 0\r\n    }\r\n  }\r\n}\r\n\r\n// Performance monitoring\r\nexport class PerformanceMonitor {\r\n  private static instance: PerformanceMonitor\r\n  private metrics: Map<string, number[]> = new Map()\r\n\r\n  static getInstance(): PerformanceMonitor {\r\n    if (!PerformanceMonitor.instance) {\r\n      PerformanceMonitor.instance = new PerformanceMonitor()\r\n    }\r\n    return PerformanceMonitor.instance\r\n  }\r\n\r\n  startTiming(label: string): () => void {\r\n    const start = performance.now()\r\n    \r\n    return () => {\r\n      const duration = performance.now() - start\r\n      this.recordMetric(label, duration)\r\n    }\r\n  }\r\n\r\n  recordMetric(label: string, value: number): void {\r\n    if (!this.metrics.has(label)) {\r\n      this.metrics.set(label, [])\r\n    }\r\n    \r\n    const values = this.metrics.get(label)!\r\n    values.push(value)\r\n    \r\n    // Keep only last 100 measurements\r\n    if (values.length > 100) {\r\n      values.shift()\r\n    }\r\n  }\r\n\r\n  getMetrics(label?: string): any {\r\n    if (label) {\r\n      const values = this.metrics.get(label) || []\r\n      return {\r\n        label,\r\n        count: values.length,\r\n        average: values.reduce((a, b) => a + b, 0) / values.length,\r\n        min: Math.min(...values),\r\n        max: Math.max(...values)\r\n      }\r\n    }\r\n    \r\n    const result: any = {}\r\n    for (const [key, values] of this.metrics.entries()) {\r\n      result[key] = {\r\n        count: values.length,\r\n        average: values.reduce((a, b) => a + b, 0) / values.length,\r\n        min: Math.min(...values),\r\n        max: Math.max(...values)\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  clearMetrics(): void {\r\n    this.metrics.clear()\r\n  }\r\n}\r\n\r\nexport default {\r\n  MemoryManager,\r\n  debounce,\r\n  throttle,\r\n  detectMemoryLeaks,\r\n  createCleanupManager,\r\n  PerformanceMonitor\r\n}\r\n","import { useState, useCallback } from 'react'\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet'\r\nimport { MapPin, Clock, Star, Users, Filter, List, AlertCircle } from 'lucide-react'\r\nimport 'leaflet/dist/leaflet.css'\r\nimport apiService from '../services/api'\r\nimport { RouteWithScores } from '../types'\r\nimport LoadingSpinner from '../components/LoadingSpinner'\r\nimport useOptimizedApi from '../hooks/useOptimizedApi'\r\nimport { debounce } from '../utils/memoryOptimization'\r\n\r\n// Fix for default markers in react-leaflet\r\nimport L from 'leaflet'\r\n\r\nconst DefaultIcon = L.icon({\r\n  iconUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png',\r\n  shadowUrl: 'https://unpkg.com/leaflet@1.9.4/dist/images/marker-shadow.png',\r\n  iconSize: [25, 41],\r\n  iconAnchor: [12, 41],\r\n  popupAnchor: [1, -34],\r\n  shadowSize: [41, 41]\r\n})\r\n\r\n// Only set the default icon if L is available (not in test environment)\r\nif (typeof L !== 'undefined' && L.Marker) {\r\n  L.Marker.prototype.options.icon = DefaultIcon\r\n}\r\n\r\nexport default function MapView() {\r\n  const [selectedRoute, setSelectedRoute] = useState<RouteWithScores | null>(null)\r\n  const [filters, setFilters] = useState({\r\n    highReliability: true,\r\n    safeRoutes: true,\r\n    lowFare: false\r\n  })\r\n\r\n  // Nairobi coordinates\r\n  const nairobiCenter: [number, number] = [-1.2921, 36.8219]\r\n\r\n  // Optimized API call for routes\r\n  const loadRoutes = useCallback(async () => {\r\n    const response = await apiService.getRoutes({\r\n      page: 1,\r\n      limit: 50,\r\n      sort: 'createdAt',\r\n      order: 'desc'\r\n    })\r\n\r\n    if (response.success && response.data) {\r\n      const routesWithScores = await Promise.all(\r\n        response.data.routes.map(async (route) => {\r\n          try {\r\n            const scoreResponse = await apiService.getScoresByRoute(route._id)\r\n            return {\r\n              ...route,\r\n              score: scoreResponse.data?.score\r\n            }\r\n          } catch {\r\n            return route\r\n          }\r\n        })\r\n      )\r\n      return routesWithScores\r\n    }\r\n    return []\r\n  }, [])\r\n\r\n  const { data: routes, loading: isLoading, error, refetch } = useOptimizedApi(\r\n    loadRoutes,\r\n    [filters], // Re-fetch when filters change\r\n    {\r\n      debounceMs: 500,\r\n      cacheTime: 2 * 60 * 1000, // 2 minutes cache\r\n      retryAttempts: 2\r\n    }\r\n  )\r\n\r\n  const filteredRoutes = (routes || []).filter(route => {\r\n    if (filters.highReliability && (!route.score || route.score.reliability < 4)) return false\r\n    if (filters.safeRoutes && (!route.score || route.score.safety < 4)) return false\r\n    if (filters.lowFare && route.fare >= 50) return false\r\n    return true\r\n  })\r\n\r\n  const getScoreColor = (score: number) => {\r\n    if (score >= 4.5) return '#22c55e' // green\r\n    if (score >= 3.5) return '#f59e0b' // yellow\r\n    if (score >= 2.5) return '#f97316' // orange\r\n    return '#ef4444' // red\r\n  }\r\n\r\n  const getRouteColor = (route: RouteWithScores) => {\r\n    if (route.score) {\r\n      return getScoreColor(route.score.overall)\r\n    }\r\n    return '#3b82f6' // default blue\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <LoadingSpinner />\r\n          <p className=\"text-gray-600 mt-4\">Loading routes...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <AlertCircle className=\"h-12 w-12 text-red-500 mx-auto mb-4\" />\r\n          <p className=\"text-red-600 mb-4\">{error?.message || 'An error occurred'}</p>\r\n          <button\r\n            onClick={refetch}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n          >\r\n            Try Again\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      <div className=\"container py-6\">\r\n        <div className=\"flex flex-col lg:flex-row gap-6\">\r\n          {/* Map Container */}\r\n          <div className=\"flex-1\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <div className=\"flex justify-between items-center\">\r\n                  <h2 className=\"card-title\">Nairobi Matatu Routes</h2>\r\n                  <div className=\"flex space-x-2\">\r\n                    <button \r\n                      className=\"btn btn-outline btn-sm\"\r\n                      aria-label=\"Filter routes\"\r\n                    >\r\n                      <Filter className=\"w-4 h-4 mr-2\" aria-hidden=\"true\" />\r\n                      Filter\r\n                    </button>\r\n                    <button \r\n                      className=\"btn btn-outline btn-sm\"\r\n                      aria-label=\"View route list\"\r\n                    >\r\n                      <List className=\"w-4 h-4 mr-2\" aria-hidden=\"true\" />\r\n                      List\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"card-content p-0\">\r\n                <div className=\"map-container h-96\" role=\"img\" aria-label=\"Interactive map showing Nairobi matatu routes\">\r\n                  <MapContainer\r\n                    center={nairobiCenter}\r\n                    zoom={11}\r\n                    style={{ height: '100%', width: '100%' }}\r\n                  >\r\n                    <TileLayer\r\n                      attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                      url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                    \r\n                    {/* Render routes */}\r\n                    {filteredRoutes.map((route) => (\r\n                      <div key={route._id}>\r\n                        {/* Route path */}\r\n                        <Polyline\r\n                          positions={route.path as [number, number][]}\r\n                          color={getRouteColor(route)}\r\n                          weight={selectedRoute?._id === route._id ? 6 : 4}\r\n                          opacity={selectedRoute?._id === route._id ? 0.8 : 0.6}\r\n                        />\r\n                        \r\n                        {/* Route stops */}\r\n                        {route.stops.map((stop, index) => (\r\n                          <Marker\r\n                            key={index}\r\n                            position={stop.coordinates as [number, number]}\r\n                            icon={DefaultIcon}\r\n                          >\r\n                            <Popup>\r\n                              <div className=\"p-2\">\r\n                                <h3 className=\"font-semibold\">{stop.name}</h3>\r\n                                <p className=\"text-sm text-gray-600\">{route.name}</p>\r\n                                <p className=\"text-xs text-gray-500 mt-1\">{route.operator}</p>\r\n                                <div className=\"mt-2 flex items-center space-x-4 text-xs text-gray-500\">\r\n                                  <div className=\"flex items-center\">\r\n                                    <Star className=\"h-3 w-3 mr-1 text-yellow-400\" />\r\n                                    {route.score?.overall?.toFixed(1) || 'N/A'}\r\n                                  </div>\r\n                                  <div className=\"flex items-center\">\r\n                                    <Users className=\"h-3 w-3 mr-1\" />\r\n                                    {route.score?.safety?.toFixed(1) || 'N/A'}\r\n                                  </div>\r\n                                  <div className=\"text-gray-600\">\r\n                                    {route.fare} KES\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </Popup>\r\n                          </Marker>\r\n                        ))}\r\n                      </div>\r\n                    ))}\r\n                  </MapContainer>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Route List Sidebar */}\r\n          <div className=\"w-full lg:w-80\">\r\n            <div className=\"card\">\r\n              <div className=\"card-header\">\r\n                <h3 className=\"text-lg font-semibold\">Available Routes</h3>\r\n                <p className=\"text-sm text-gray-600\">\r\n                  {filteredRoutes.length} of {routes?.length || 0} routes\r\n                </p>\r\n              </div>\r\n              \r\n              {/* Filters */}\r\n              <div className=\"p-4 border-b\">\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center space-x-2\">\r\n                    <Filter className=\"h-4 w-4 text-gray-500\" aria-hidden=\"true\" />\r\n                    <span className=\"text-sm font-medium text-gray-700\">Filters</span>\r\n                  </div>\r\n                  \r\n                  <fieldset className=\"space-y-2\">\r\n                    <legend className=\"sr-only\">Route filters</legend>\r\n                    <label className=\"flex items-center\">\r\n                      <input \r\n                        type=\"checkbox\" \r\n                        className=\"rounded border-gray-300\" \r\n                        checked={filters.highReliability}\r\n                        onChange={debounce((e) => setFilters(prev => ({ ...prev, highReliability: e.target.checked })), 300)}\r\n                        aria-describedby=\"high-reliability-desc\"\r\n                      />\r\n                      <span className=\"ml-2 text-sm text-gray-600\">High Reliability (4+ stars)</span>\r\n                    </label>\r\n                    <label className=\"flex items-center\">\r\n                      <input \r\n                        type=\"checkbox\" \r\n                        className=\"rounded border-gray-300\" \r\n                        checked={filters.safeRoutes}\r\n                        onChange={debounce((e) => setFilters(prev => ({ ...prev, safeRoutes: e.target.checked })), 300)}\r\n                        aria-describedby=\"safe-routes-desc\"\r\n                      />\r\n                      <span className=\"ml-2 text-sm text-gray-600\">Safe Routes (4+ stars)</span>\r\n                    </label>\r\n                    <label className=\"flex items-center\">\r\n                      <input \r\n                        type=\"checkbox\" \r\n                        className=\"rounded border-gray-300\" \r\n                        checked={filters.lowFare}\r\n                        onChange={debounce((e) => setFilters(prev => ({ ...prev, lowFare: e.target.checked })), 300)}\r\n                        aria-describedby=\"low-fare-desc\"\r\n                      />\r\n                      <span className=\"ml-2 text-sm text-gray-600\">Low Fare (Under 50 KES)</span>\r\n                    </label>\r\n                  </fieldset>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"card-content p-0\">\r\n                <div className=\"divide-y divide-gray-200\">\r\n                  {filteredRoutes.map((route) => (\r\n                    <div\r\n                      key={route._id}\r\n                      className={`p-4 cursor-pointer hover:bg-gray-50 transition-colors ${\r\n                        selectedRoute?._id === route._id ? 'bg-primary-50 border-r-4 border-primary-500' : ''\r\n                      }`}\r\n                      onClick={() => setSelectedRoute(route)}\r\n                      role=\"button\"\r\n                      tabIndex={0}\r\n                      onKeyDown={(e) => {\r\n                        if (e.key === 'Enter' || e.key === ' ') {\r\n                          e.preventDefault()\r\n                          setSelectedRoute(route)\r\n                        }\r\n                      }}\r\n                      aria-label={`Select route ${route.name} by ${route.operator}`}\r\n                      aria-pressed={selectedRoute?._id === route._id}\r\n                    >\r\n                      <div className=\"flex items-start justify-between\">\r\n                        <div className=\"flex-1\">\r\n                          <h4 className=\"font-medium text-gray-900\">{route.name}</h4>\r\n                          <p className=\"text-sm text-gray-600 mt-1\">{route.operator}</p>\r\n                          <div className=\"flex items-center space-x-4 mt-2 text-sm text-gray-600\">\r\n                            <div className=\"flex items-center\">\r\n                              <Star className=\"w-4 h-4 text-yellow-500 mr-1\" aria-hidden=\"true\" />\r\n                              <span aria-label={`Overall rating: ${route.score?.overall?.toFixed(1) || 'N/A'} stars`}>\r\n                                {route.score?.overall?.toFixed(1) || 'N/A'}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                              <Clock className=\"w-4 h-4 text-blue-500 mr-1\" aria-hidden=\"true\" />\r\n                              <span aria-label={`Operating hours: ${route.operatingHours.start} to ${route.operatingHours.end}`}>\r\n                                {route.operatingHours.start} - {route.operatingHours.end}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"flex items-center\">\r\n                              <Users className=\"w-4 h-4 text-green-500 mr-1\" aria-hidden=\"true\" />\r\n                              <span aria-label={`Safety rating: ${route.score?.safety?.toFixed(1) || 'N/A'} stars`}>\r\n                                {route.score?.safety?.toFixed(1) || 'N/A'}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"text-right\">\r\n                          <div className=\"text-lg font-semibold text-gray-900\">\r\n                            KES {route.fare}\r\n                          </div>\r\n                          <div \r\n                            className=\"w-4 h-4 rounded-full mt-1\" \r\n                            style={{ backgroundColor: getRouteColor(route) }}\r\n                            aria-label={`Route quality indicator: ${getRouteColor(route)}`}\r\n                          ></div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Selected Route Details */}\r\n            {selectedRoute && (\r\n              <div className=\"card mt-4\" role=\"region\" aria-labelledby=\"route-details-heading\">\r\n                <div className=\"card-header\">\r\n                  <h3 id=\"route-details-heading\" className=\"text-lg font-semibold\">Route Details</h3>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <h4 className=\"font-medium text-gray-900\">{selectedRoute.name}</h4>\r\n                      <p className=\"text-sm text-gray-600\">{selectedRoute.operator}</p>\r\n                      <p className=\"text-xs text-gray-500 mt-1\">Real-time updates available</p>\r\n                    </div>\r\n                    \r\n                    <div className=\"grid grid-cols-2 gap-4\">\r\n                      <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-primary-600\" aria-label={`Reliability score: ${selectedRoute.score?.reliability?.toFixed(1) || 'N/A'} out of 5`}>\r\n                          {selectedRoute.score?.reliability?.toFixed(1) || 'N/A'}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-600\">Reliability</div>\r\n                      </div>\r\n                      <div className=\"text-center p-3 bg-gray-50 rounded-lg\">\r\n                        <div className=\"text-2xl font-bold text-secondary-600\" aria-label={`Safety score: ${selectedRoute.score?.safety?.toFixed(1) || 'N/A'} out of 5`}>\r\n                          {selectedRoute.score?.safety?.toFixed(1) || 'N/A'}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-600\">Safety</div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <dl className=\"space-y-2\">\r\n                      <div className=\"flex justify-between\">\r\n                        <dt className=\"text-gray-600\">Fare:</dt>\r\n                        <dd className=\"font-medium\">KES {selectedRoute.fare}</dd>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <dt className=\"text-gray-600\">Operating Hours:</dt>\r\n                        <dd className=\"font-medium\">{selectedRoute.operatingHours.start} - {selectedRoute.operatingHours.end}</dd>\r\n                      </div>\r\n                      <div className=\"flex justify-between\">\r\n                        <dt className=\"text-gray-600\">Stops:</dt>\r\n                        <dd className=\"font-medium\">{selectedRoute.stops.length} stops</dd>\r\n                      </div>\r\n                    </dl>\r\n                    \r\n                    <button \r\n                      className=\"btn btn-primary w-full\"\r\n                      aria-label=\"View selected route on map\"\r\n                    >\r\n                      <MapPin className=\"w-4 h-4 mr-2\" aria-hidden=\"true\" />\r\n                      View on Map\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["ApiCache","__publicField","key","data","ttl","now","entry","apiCache","useOptimizedApi","apiCall","dependencies","options","debounceMs","cacheTime","retryAttempts","retryDelay","setData","useState","loading","setLoading","error","setError","retryCount","setRetryCount","debounceRef","useRef","abortControllerRef","cacheKey","executeApiCall","useCallback","isRetry","cachedData","result","err","prev","debouncedExecute","useEffect","refetch","clearCache","debounce","func","wait","timeout","args","DefaultIcon","L","MapView","selectedRoute","setSelectedRoute","filters","setFilters","nairobiCenter","loadRoutes","response","apiService","route","scoreResponse","_a","routes","isLoading","filteredRoutes","getScoreColor","score","getRouteColor","jsxs","jsx","LoadingSpinner","AlertCircle","Filter","List","MapContainer","TileLayer","Polyline","stop","index","Marker","Popup","Star","_b","Users","_d","_c","e","Clock","_f","_e","_h","_g","MapPin"],"mappings":"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"}