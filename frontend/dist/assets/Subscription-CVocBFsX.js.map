{"version":3,"file":"Subscription-CVocBFsX.js","sources":["../../src/screens/Subscription.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useSearchParams } from 'react-router-dom'\r\nimport { useApp } from '../contexts/AppContext'\r\nimport { useTranslation } from '../hooks/useTranslation'\r\nimport apiService from '../services/api'\r\n\r\ninterface SubscriptionPlan {\r\n  id: string\r\n  name: string\r\n  price: number\r\n  currency: string\r\n  features: string[]\r\n}\r\n\r\ninterface UserSubscription {\r\n  userId: string\r\n  planType: string\r\n  status: string\r\n  startDate: string\r\n  endDate?: string\r\n  features: {\r\n    advancedAnalytics: boolean\r\n    prioritySupport: boolean\r\n    customBranding: boolean\r\n    apiAccess: boolean\r\n    unlimitedReports: boolean\r\n  }\r\n}\r\n\r\nconst Subscription: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { state } = useApp()\r\n  const navigate = useNavigate()\r\n  const [searchParams] = useSearchParams()\r\n  const [plans, setPlans] = useState<SubscriptionPlan[]>([])\r\n  const [userSubscription, setUserSubscription] = useState<UserSubscription | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [successMessage, setSuccessMessage] = useState<string | null>(null)\r\n\r\n  // Check if this is the special admin user\r\n  const isSpecialAdmin = state.user?.email === 'nelsonmaranda2@gmail.com'\r\n\r\n  // Calculate subscription days remaining\r\n  const calculateDaysRemaining = (endDate?: string): number => {\r\n    if (!endDate) return 0\r\n    const end = new Date(endDate)\r\n    const now = new Date()\r\n    const diffTime = end.getTime() - now.getTime()\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\r\n    return Math.max(0, diffDays)\r\n  }\r\n\r\n  // Calculate total subscription days\r\n  const calculateTotalDays = (startDate: string, endDate?: string): number => {\r\n    if (!endDate) return 365 // Default to yearly\r\n    const start = new Date(startDate)\r\n    const end = new Date(endDate)\r\n    const diffTime = end.getTime() - start.getTime()\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\r\n    return diffDays\r\n  }\r\n\r\n  const getTranslatedFeatures = (planId: string): string[] => {\r\n    switch (planId) {\r\n      case 'free':\r\n        return [\r\n          t('subscription.plans.free.features.basicInfo'),\r\n          t('subscription.plans.free.features.reports'),\r\n          t('subscription.plans.free.features.support')\r\n        ]\r\n      case 'premium':\r\n        return [\r\n          t('subscription.plans.premium.features.unlimitedReports'),\r\n          t('subscription.plans.premium.features.advancedAnalytics'),\r\n          t('subscription.plans.premium.features.prioritySupport'),\r\n          t('subscription.plans.premium.features.realTimeNotifications')\r\n        ]\r\n      case 'sacco':\r\n        return [\r\n          t('subscription.plans.sacco.features.allPremium'),\r\n          t('subscription.plans.sacco.features.revenueAnalytics'),\r\n          t('subscription.plans.sacco.features.customBranding'),\r\n          t('subscription.plans.sacco.features.apiAccess'),\r\n          t('subscription.plans.sacco.features.dedicatedSupport')\r\n        ]\r\n      case 'enterprise':\r\n        return [\r\n          t('subscription.plans.enterprise.features.allSacco'),\r\n          t('subscription.plans.enterprise.features.whiteLabel'),\r\n          t('subscription.plans.enterprise.features.customIntegrations'),\r\n          t('subscription.plans.enterprise.features.support247'),\r\n          t('subscription.plans.enterprise.features.slaGuarantee')\r\n        ]\r\n      default:\r\n        return []\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadData()\r\n    \r\n    // Check for success message from payment\r\n    const success = searchParams.get('success')\r\n    const plan = searchParams.get('plan')\r\n    if (success === 'true' && plan) {\r\n      setSuccessMessage(`Successfully upgraded to ${plan} plan!`)\r\n      // Clear the URL parameters\r\n      navigate('/subscription', { replace: true })\r\n    }\r\n  }, [searchParams, navigate])\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const [plansResponse, subscriptionResponse] = await Promise.all([\r\n        apiService.getSubscriptionPlans(),\r\n        state.user ? apiService.getUserSubscription(state.user._id) : null\r\n      ])\r\n\r\n      setPlans(plansResponse.data || [])\r\n      if (subscriptionResponse) {\r\n        setUserSubscription(subscriptionResponse.data || null)\r\n      }\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to load subscription data')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleUpgrade = (planId: string) => {\r\n    // Get the selected plan\r\n    const selectedPlan = plans.find(plan => plan.id === planId)\r\n    if (!selectedPlan) {\r\n      setError('Plan not found')\r\n      return\r\n    }\r\n\r\n    // Check if this is the special admin user\r\n    if (isSpecialAdmin) {\r\n      // Admin user - no payment required, directly activate\r\n      handleAdminUpgrade(planId)\r\n      return\r\n    }\r\n\r\n    // Redirect to payment page with plan details\r\n    const params = new URLSearchParams({\r\n      plan: planId,\r\n      amount: selectedPlan.price.toString(),\r\n      planName: selectedPlan.name\r\n    })\r\n    \r\n    navigate(`/payment?${params.toString()}`)\r\n  }\r\n\r\n  const handleAdminUpgrade = async (planId: string) => {\r\n    try {\r\n      const response = await apiService.confirmPayment('admin_payment', planId)\r\n      if (response.success) {\r\n        // Refresh subscription data\r\n        await loadData()\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to activate plan. Please try again.')\r\n    }\r\n  }\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-gray-600\">{t('common.loading')}</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-8\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-12\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">\r\n            {t('subscription.title')}\r\n          </h1>\r\n          <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\r\n            {t('subscription.subtitle')}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Current Subscription */}\r\n        {userSubscription && (\r\n          <div className=\"mb-8\">\r\n            <div className={`bg-white rounded-lg shadow-md p-6 border-l-4 ${\r\n              isSpecialAdmin ? 'border-purple-500' : 'border-blue-500'\r\n            }`}>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                {t('subscription.currentPlan')}\r\n                {isSpecialAdmin && (\r\n                  <span className=\"ml-2 px-2 py-1 bg-purple-100 text-purple-800 text-xs rounded-full\">\r\n                    {t('subscription.adminAccess')}\r\n                  </span>\r\n                )}\r\n              </h3>\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <p className=\"text-2xl font-bold text-blue-600 capitalize\">\r\n                    {t(`subscription.planTypes.${userSubscription.planType}`)}\r\n                  </p>\r\n                  <p className=\"text-gray-600\">\r\n                    {t('subscription.status')}: \r\n                    <span className={`ml-2 px-2 py-1 rounded-full text-xs font-medium ${\r\n                      userSubscription.status === 'active' \r\n                        ? 'bg-green-100 text-green-800' \r\n                        : 'bg-red-100 text-red-800'\r\n                    }`}>\r\n                      {t(`subscription.statusTypes.${userSubscription.status}`)}\r\n                    </span>\r\n                  </p>\r\n                  {userSubscription.endDate && (\r\n                    <p className=\"text-sm text-gray-500\">\r\n                      {t('subscription.expires')}: {new Date(userSubscription.endDate).toLocaleDateString()}\r\n                    </p>\r\n                  )}\r\n                  <div className=\"mt-2\">\r\n                    <p className=\"text-sm text-gray-500\">\r\n                      {t('subscription.daysRemaining')}: <span className=\"font-semibold text-blue-600\">\r\n                        {calculateDaysRemaining(userSubscription.endDate)}\r\n                      </span>\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-500\">\r\n                      {t('subscription.totalSubscription')}: <span className=\"font-semibold text-gray-700\">\r\n                        {calculateTotalDays(userSubscription.startDate, userSubscription.endDate)} {t('subscription.days')} ({t('subscription.yearly')})\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    {t('subscription.features')}:\r\n                  </p>\r\n                  <div className=\"flex flex-wrap gap-2 mt-2\">\r\n                    {Object.entries(userSubscription.features).map(([key, value]) => (\r\n                      value && (\r\n                        <span key={key} className=\"px-2 py-1 bg-green-100 text-green-800 text-xs rounded-full\">\r\n                          {t(`subscription.featureNames.${key}`)}\r\n                        </span>\r\n                      )\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Success Message */}\r\n        {successMessage && (\r\n          <div className=\"mb-6 bg-green-50 border border-green-200 rounded-md p-4\">\r\n            <div className=\"flex\">\r\n              <div className=\"flex-shrink-0\">\r\n                <svg className=\"h-5 w-5 text-green-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n              </div>\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm text-green-800\">{successMessage}</p>\r\n              </div>\r\n              <div className=\"ml-auto pl-3\">\r\n                <button\r\n                  onClick={() => setSuccessMessage(null)}\r\n                  className=\"text-green-400 hover:text-green-600\"\r\n                >\r\n                  <svg className=\"h-4 w-4\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                    <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Error Message */}\r\n        {error && (\r\n          <div className=\"mb-6 bg-red-50 border border-red-200 rounded-md p-4\">\r\n            <div className=\"flex\">\r\n              <div className=\"flex-shrink-0\">\r\n                <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                  <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n              </div>\r\n              <div className=\"ml-3\">\r\n                <p className=\"text-sm text-red-800\">{error}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Subscription Plans */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\r\n          {plans.map((plan) => {\r\n            const isCurrentPlan = userSubscription?.planType === plan.id\r\n            const isPopular = plan.id === 'premium'\r\n            \r\n            return (\r\n              <div\r\n                key={plan.id}\r\n                className={`relative bg-white rounded-lg shadow-lg overflow-hidden ${\r\n                  isPopular ? 'ring-2 ring-blue-500' : ''\r\n                } ${isCurrentPlan ? 'opacity-75' : ''}`}\r\n              >\r\n                {isPopular && (\r\n                  <div className=\"absolute top-0 right-0 bg-blue-500 text-white px-3 py-1 text-sm font-medium\">\r\n                    {t('subscription.popular')}\r\n                  </div>\r\n                )}\r\n                \r\n                <div className=\"p-6\">\r\n                  <h3 className=\"text-2xl font-bold text-gray-900 mb-2\">\r\n                    {t(`subscription.planTypes.${plan.id}`)}\r\n                  </h3>\r\n                  \r\n                  <div className=\"mb-4\">\r\n                    <span className=\"text-4xl font-bold text-gray-900\">\r\n                      {plan.price === 0 ? t('subscription.free') : `KES ${plan.price}`}\r\n                    </span>\r\n                    {plan.price > 0 && (\r\n                      <span className=\"text-gray-600\">/{t('subscription.month')}</span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <ul className=\"space-y-3 mb-6\">\r\n                    {getTranslatedFeatures(plan.id).map((feature, index) => (\r\n                      <li key={index} className=\"flex items-start\">\r\n                        <svg className=\"h-5 w-5 text-green-500 mt-0.5 mr-3 flex-shrink-0\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                          <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                        </svg>\r\n                        <span className=\"text-gray-700\">{feature}</span>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n\r\n                  <button\r\n                    onClick={() => handleUpgrade(plan.id)}\r\n                    disabled={isCurrentPlan}\r\n                    className={`w-full py-3 px-4 rounded-md font-medium transition-colors ${\r\n                      isCurrentPlan\r\n                        ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                        : isPopular\r\n                        ? 'bg-blue-600 text-white hover:bg-blue-700'\r\n                        : 'bg-gray-900 text-white hover:bg-gray-800'\r\n                    }`}\r\n                  >\r\n                    {isCurrentPlan ? (\r\n                      t('subscription.current')\r\n                    ) : plan.price === 0 ? (\r\n                      t('subscription.getStarted')\r\n                    ) : (\r\n                      t('subscription.selectPlan')\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n\r\n        {/* Features Comparison */}\r\n        <div className=\"mt-16\">\r\n          <h2 className=\"text-3xl font-bold text-gray-900 text-center mb-8\">\r\n            {t('subscription.featureComparison')}\r\n          </h2>\r\n          \r\n          <div className=\"bg-white rounded-lg shadow-lg overflow-hidden\">\r\n            <div className=\"overflow-x-auto\">\r\n              <table className=\"min-w-full divide-y divide-gray-200\">\r\n                <thead className=\"bg-gray-50\">\r\n                  <tr>\r\n                    <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                      {t('subscription.features')}\r\n                    </th>\r\n                    {plans.map((plan) => (\r\n                      <th key={plan.id} className=\"px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\r\n                        {t(`subscription.planTypes.${plan.id}`)}\r\n                      </th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n                <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                  <tr>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                      {t('subscription.basicReports')}\r\n                    </td>\r\n                    {plans.map((plan) => (\r\n                      <td key={plan.id} className=\"px-6 py-4 whitespace-nowrap text-center\">\r\n                        <svg className=\"h-5 w-5 text-green-500 mx-auto\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                          <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                        </svg>\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                      {t('subscription.unlimitedReports')}\r\n                    </td>\r\n                    {plans.map((plan) => (\r\n                      <td key={plan.id} className=\"px-6 py-4 whitespace-nowrap text-center\">\r\n                        {plan.id === 'free' ? (\r\n                          <span className=\"text-gray-400\">5/month</span>\r\n                        ) : (\r\n                          <svg className=\"h-5 w-5 text-green-500 mx-auto\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                          </svg>\r\n                        )}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                      {t('subscription.advancedAnalytics')}\r\n                    </td>\r\n                    {plans.map((plan) => (\r\n                      <td key={plan.id} className=\"px-6 py-4 whitespace-nowrap text-center\">\r\n                        {['premium', 'sacco', 'enterprise'].includes(plan.id) ? (\r\n                          <svg className=\"h-5 w-5 text-green-500 mx-auto\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                          </svg>\r\n                        ) : (\r\n                          <svg className=\"h-5 w-5 text-gray-300 mx-auto\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                          </svg>\r\n                        )}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                      {t('subscription.prioritySupport')}\r\n                    </td>\r\n                    {plans.map((plan) => (\r\n                      <td key={plan.id} className=\"px-6 py-4 whitespace-nowrap text-center\">\r\n                        {['premium', 'sacco', 'enterprise'].includes(plan.id) ? (\r\n                          <svg className=\"h-5 w-5 text-green-500 mx-auto\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                          </svg>\r\n                        ) : (\r\n                          <svg className=\"h-5 w-5 text-gray-300 mx-auto\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                          </svg>\r\n                        )}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900\">\r\n                      {t('subscription.apiAccess')}\r\n                    </td>\r\n                    {plans.map((plan) => (\r\n                      <td key={plan.id} className=\"px-6 py-4 whitespace-nowrap text-center\">\r\n                        {['sacco', 'enterprise'].includes(plan.id) ? (\r\n                          <svg className=\"h-5 w-5 text-green-500 mx-auto\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                          </svg>\r\n                        ) : (\r\n                          <svg className=\"h-5 w-5 text-gray-300 mx-auto\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                            <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n                          </svg>\r\n                        )}\r\n                      </td>\r\n                    ))}\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* FAQ Section */}\r\n        <div className=\"mt-16\">\r\n          <h2 className=\"text-3xl font-bold text-gray-900 text-center mb-8\">\r\n            {t('subscription.faq')}\r\n          </h2>\r\n          \r\n          <div className=\"max-w-3xl mx-auto space-y-6\">\r\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                {t('subscription.faq1.question')}\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                {t('subscription.faq1.answer')}\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                {t('subscription.faq2.question')}\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                {t('subscription.faq2.answer')}\r\n              </p>\r\n            </div>\r\n            \r\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                {t('subscription.faq3.question')}\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                {t('subscription.faq3.answer')}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Subscription\r\n"],"names":["Subscription","t","useTranslation","state","useApp","navigate","useNavigate","searchParams","useSearchParams","plans","setPlans","useState","userSubscription","setUserSubscription","loading","setLoading","error","setError","successMessage","setSuccessMessage","isSpecialAdmin","_a","calculateDaysRemaining","endDate","end","now","diffTime","diffDays","calculateTotalDays","startDate","start","getTranslatedFeatures","planId","useEffect","loadData","success","plan","plansResponse","subscriptionResponse","apiService","err","handleUpgrade","selectedPlan","handleAdminUpgrade","params","jsxs","jsx","key","value","isCurrentPlan","isPopular","feature","index"],"mappings":"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"}